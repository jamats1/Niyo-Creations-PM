# tactiq.io free youtube transcript
# No title found
# https://www.youtube.com/watch/TI2AvfCj5oM

00:00:00.000 No text
00:00:04.280 [Music] it's so good to be back with a Trello
00:00:11.719 2.0 build I absolutely am excited for this one it's something unique we've
00:00:17.340 never done it on the channel we're doing drag and drop today new tech Cutting Edge stuff you know how your boy does it
00:00:23.820 I'm not gonna disappear for a while and then come back with some old Tech we're going in hard today we've got the brand
00:00:29.160 new latest next year's version we've got some new Cloud technology powering today's build we've got this stand for
00:00:35.399 the absolutely simplest best State Management I've ever used honestly it's amazing roughly work on kicking uh let
00:00:43.140 me know what you're watching from right now I'm so excited to be back and guys I'm not gonna stop these live streams
00:00:48.840 every single week your boy is going to be dropping fire so make sure you like like the video right now subscribe if
00:00:54.660 you haven't already already at 250 likes that's how we do it check out the Trello 2.0 a icon when lgbt4 get ready guys
00:01:02.699 Papa found this how we do it boom 2.0 Trello look at this thing it's so
00:01:05.000 No text
00:01:10.260 flipping beautiful I love it the design is awesome let's go ahead and drag and drop oh my goodness look at that oh hang
00:01:16.860 on What's That GPT is summarizing our tasks that's a that's awesome right and
00:01:22.140 then we've even got a really nice model look at this and guys this is using
00:01:27.180 headless UI so if you haven't already used head this wire this is how you do it what is up we've got some OG's in the
00:01:34.020 house look guys let's go ahead and add a new to do let's say I want to crush
00:01:39.840 this stream all right and then what you can even do is you can tap so now I'm literally
00:01:45.000 tabbing through using the keys to go up and down and I can go undone I can upload a photo so I'm going to hide so
00:01:50.520 that way you know I don't show anything that I don't shouldn't show then we get the nice little preview here you see
00:01:56.100 right now we've got a nice little preview we go ahead and add the task that's going to go ahead and upload it inside of the upright cloud and then
00:02:02.880 it's going to go ahead and pop in our done page so depending on which one you clicked on it will go ahead and pre-set
00:02:08.580 that for us so you've already got that working look at that I want to cross this stream and you can go ahead and move it around this is persistent this
00:02:14.400 is all on the database and we've even got such included so if I go ahead and type in podcast you can see we've gone
00:02:20.700 ahead and released the podcast right you can go ahead and it's really fast really nice stuff welcome to the stream you can
00:02:25.980 see how it filters everything out you're going to learn all of this today and yes you know how your boy does it it is responsive I wouldn't make something
00:02:31.920 that's not responsive there you go look at that so this thing it works on a phone works on anything you can imagine
00:02:37.020 and we've also got some nice cool tricks today I like how you can get this gradient effect in the background so so
00:02:43.140 much stuff happening right now we have over 300 people let's go it's been a minute I'm hyped up wow this is crazy so
00:02:50.580 somebody goes Sonny is insanely crazy let's go ahead and give a second to read all of the comments let's see we've got
00:02:55.980 Egypt France Sweden India Czech Republic Taiwan Australia Estonia Greece that is
00:03:03.480 what I'm talking about UK Canada America that's what I'm saying guys everybody is
00:03:09.000 in the house that's what I'm saying there's a Spain Serbia I'll shout you out India Ukraine Kenya that's what I'm
00:03:15.659 talking about guys good to see everyone here look at that what this is what I missed this is what I actually miss
00:03:21.420 these bills are incredible it's because of the energy the buffer Farm no tutorial is like this it's just so oh
00:03:27.540 man crazy let's go ahead and break down this build in terms of oh my God you
00:03:32.760 guys are humble in me right now Jay look at that chat popping off wow if you guys
00:03:38.459 want to see more videos you guys are making me like what I can't even express how crazy that is the chat is popping
00:03:45.720 off wow I'll never get used to that I'll never get used to that if you're watching the replay turn the channel
00:03:50.819 right now and just see what's happening that is crazy holy crap right guys let's
00:03:55.920 go ahead and break down this build so we can get started for you all today this build is actually powered by the guys
00:04:00.000 No text
00:04:02.700 over at upright Cloud so this entire thing is actually super simple behind
00:04:07.739 the scenes and it's actually thanks to the guys over upright so we're going to be building an incredibly fast scalable
00:04:13.379 solution today so that way you can go ahead build it for yourself do it the first link in the description is how you can get access but they've got
00:04:19.500 everything from databases authentication storage functions they're basically Cloud functions security and privacy
00:04:25.440 real-time database functionality all of the good stuff and they've got so many examples here so you guys can see they've actually released their beta
00:04:32.160 which is perfectly working right now so you're gonna see today how we can use it how we can integrate it and honestly a
00:04:37.979 lot of this code is honestly it's like one line clicks so you can basically do a 1 online command to get something into
00:04:43.080 the database we always like online stuff right so that's why we're going to be using this today it's definitely
00:04:48.479 something that I would recommend and I definitely suggest that you follow along today get set up give it a play with and
00:04:55.620 because there's so many features that I haven't even covered in this so if you want to see more videos let me know after the video is finished in the
00:05:02.220 comment section below and I'll build whatever you guys want to build and keep on going so we're going to break down this build so you guys can get into we
00:05:08.880 can get into things right now somebody says is there authentication in this build I've kept it down to the main functionality so also by the way I
00:05:15.419 forgot to mention you can actually take the entire columns and look how they see through oh look at that oh my goodness
00:05:21.060 and even look at how it turns green oh I just I love it it's so satisfying it's so so satisfying right now I just went a
00:05:28.259 bit crazy that's why I probably got an error I think I I I serious use too many things around all right so let's go
00:05:34.740 ahead and break this stream down so first things first we have
00:05:39.840 the react oh okay one minute sorry let me turn music down a little bit all right so first thing to us we have next
00:05:44.000 No text
00:05:45.180 js13 so we got next JS 13.4 now I know
00:05:50.400 there's so many changes lately in next year s13 uh 0.3.4 all of these different
00:05:55.560 releases changes there is even something called server actions now which is damn powerful and I'm actually going to
00:06:00.900 create a future video on that so don't worry if you're wondering is he going to use that today I'm not actually using server actions but I will create a
00:06:06.240 future video on it but in Nexus 13.4 we are going to be using the brand new app API directory to create some endpoints
00:06:12.419 so you've got some fun stuff to look forward to we then have gpt4 in the mix as well we actually have a few things
00:06:19.380 today so we've got Tailwind CSS now Tailwind TSS I highly recommend you go ahead and get this sort of you know you
00:06:25.560 get practicing with this that's how you're going to be able to build awesome responsive websites without the headache
00:06:31.440 right honestly without the headache of media queries and all this crap but I hate this so in that case someone says
00:06:36.539 are you wearing sun cream honestly I am because it's really hot so so I am trying my best to protect
00:06:42.360 myself we've got headless UI now if you haven't used headless UI I need to turn off grammarly right now I'm live and
00:06:47.759 it's popping up everywhere Jay help me out with that afterwards so in this case we're also going to be doing typescript
00:06:53.520 so we got typescript in the mix as well so we're going to be building robust code that's going to be you know less
00:06:58.620 error prone so somebody I'm answering your questions as it comes in Alfonso says typescript yep I've got you covered
00:07:04.740 with typescript we've got some search sort of functionality so I'm going to show you how to integrate something like
00:07:10.139 a search field and um we even have oh yeah and I've not actually done this in any other build so far we're going to be
00:07:16.620 talking about the map object inside of JavaScript so if you've never used something like a map object I'm going to
00:07:22.979 be showing you something like basically a map object today so I'm going to break it down we're actually going to do it uh
00:07:28.560 in a really sort of cool use case and what I did here was you can call it over engineering I really don't care I'm
00:07:33.780 trying to teach you a lot of different principles in these videos but I want you to come out of this knowing what
00:07:39.060 maps are and how to use them and why they're a bit more efficient sometimes okay so we've got the map object inside and
00:07:45.780 obviously we cannot forget that we have the drag and drop Library okay so it is called Beautiful DND so I'm just going
00:07:51.419 to write DND and that stands for drag and drop now the crazy thing is the the library was actually
00:07:57.000 um bought out by atlasan and atlasan actually bought trailer so thank you alexand for this video because that's
00:08:03.240 literally who's uh who made it possible so that's really cool we've got the cloud powered by upright so we've got
00:08:10.020 upright powering our cloud and that's where we're going to be using today so everything that we're doing on the back
00:08:15.419 end is essentially powered by the outbreak cloud and that is pretty much well not of course I've missed out the biggest thing
00:08:21.360 we have the stand so if you haven't heard of the stand this is essentially a very new bit of Technology now I am
00:08:28.080 actually somebody who is quite skeptical when it comes to you know touching new bits of tech or like I will tend to use
00:08:34.200 them but I will run them through coaching calls in my community zero to full stack hero the coaching Community you can definitely check it out second
00:08:40.200 link in the description but I will go ahead and try these things out see if they're actually useful see what my
00:08:45.360 students react to them see how useful they are in my production gigs and then I will actually go ahead and make a
00:08:50.640 decision as to if I want to push you on YouTube now this stand is absolutely incredible it's simple it's so easy to
00:08:57.360 understand and Implement and that is why I'm going to show you how to use it in today's build as a replacement for
00:09:03.720 something like Redux so it is actually honestly it's gonna blow you away like I do so much cool stuff with this
00:09:09.920 including handling the modal state so when you click on a modal it's going to handle that state so when we do this
00:09:16.140 right here and bear in mind you can actually click out so I'm going to show you how to do all this even if I press Escape you can click out so all of this
00:09:22.019 stuff's ready to happen right you've got all of this there's a stand then we're going to keep the board stay inside of
00:09:27.540 that Global State as well and we've also got the user's interaction so notice how when I click on a to-do column it
00:09:32.880 already highlights to do if I click on a in progress column it says in progress and if I click over
00:09:39.720 here in the done column it's already highlighting done so you're going to learn loads of things like that right somebody says why'd I take off a bed I
00:09:45.899 still got my bed what are you talking about craziness 300 likes already let's get that number up to a thousand you
00:09:52.320 know how we do it right so a lot of people saying what do I use to write on the screen screen brush that's it right okay so let's go ahead and dive into
00:09:57.000 No text
00:09:58.440 today's build but before we do at any point if you get a little bit confused or you're not really short until you
00:10:04.320 know if this is too advanced for you do not quit instead what I recommend is you check out all my free content and if you
00:10:10.980 really enjoy the free content and how we do things then I highly recommend you check us out at zero to full stack hero
00:10:16.080 this is our internal Community this is not only just a course it's a massive community of Papa Farm members you can
00:10:22.620 go ahead to paparia.com the second link in the description click on enroll now and you'll literally head over to our
00:10:27.720 page tons of stuff here right if you want to see what people are saying about our course check out the reviews tab on Papa react.com and you see for yourself
00:10:34.380 right there's literally we've got so many members inside there and uh somebody because it looks like you get a haircut okay it distracted me but in
00:10:41.640 this case yeah you can go ahead check it out we've got real members real people talking about the success and honestly
00:10:47.339 it's just everything you need to go from absolute Basics to crushing it and Beyond right we've always got your back
00:10:52.380 and this is a lifetime community so join it you'll be a lifetime member and that's how we work right we literally
00:10:57.420 have a community where we help each other out we help each other level up we help each other do like professional gigs all that good stuff happens inside
00:11:03.779 of that and if you want daily emails recording challenges then you can even feel free to check out the University of
00:11:05.000 No text
00:11:09.240 code on latest and greatest newsletter is at the top over on property.com basically coding challenges every day
00:11:15.540 every single day to your inbox with the solution the following day so you can go ahead check it out yourself but all of
00:11:20.820 that is available at poperia.com so make sure you check it out that is how we essentially support everything that we
00:11:26.399 do so honestly it's a win-win we go ahead and help you out and yeah this is this is what we do and this is how I'm
00:11:32.700 able to constantly go deep into topics that I can't always do on a stream right
00:11:37.920 so I want you guys to learn the most so this is something I can help you out with you um let's see it's upright like
00:11:42.000 No text
00:11:43.079 super best opera is a full Suite of tools right so you've got everything from database to authentication to Cloud
00:11:48.839 functions to yeah every everything you can imagine you you that you need in most production apps you pretty much
00:11:54.360 have so in that case this is something I want you to go ahead and give out a try okay you guys are so funny okay we've got
00:12:01.200 over 350 people watching this is incredible let's jump into the build if you're excited and if you're ready for
00:12:06.899 this one make sure you hit the Subscribe button right now hit the like button and yeah we're gonna go ahead and Crush everything into today's build by the way
00:12:13.260 that we are going to use is free so I want to make that very important everything that we are going to use in
00:12:18.420 today's build that you see on the screen right now is free so make sure you do this make sure you go ahead and add this
00:12:24.060 to your portfolio and keep this as a project because honestly it's a really nice project to have on your portfolio that's absolutely that's it we're going
00:12:31.079 to get started with today's video so I'm gonna go ahead and show you what I like to use now I'm going to show you as if I
00:12:36.300 was doing it from absolutely scratch so that way you can go ahead and follow along because I know a lot of the time some people are like how the hell did
00:12:42.540 you just do that right so I'm going to show you literally as if I'm Googling it right so the first thing I like to do is
00:12:46.000 No text
00:12:47.760 use create next app okay so great next app oops iupp right to app and I like to
00:12:53.459 do it with Owen simplewise right but this time we're actually going to use create next app the canary Edition right
00:12:58.980 so I'm going to use a canary Edition you can use honestly quite like quite frankly you can use any one you want but this is how I would typically find it
00:13:05.399 right so you can do I would say safe oh wow thank you so much
00:13:10.980 I'm gonna turn the the volume come flying through my eyes we've got about with the 10 donation we also had a
00:13:16.139 lovely donation from one of our other members it's gone now I couldn't see who it was but thank you so much earlier before we started it was kicking off so
00:13:22.560 absolutely incredible stuff thank you so this is what we're gonna do MPX create next app at latest inside your terminal
00:13:29.220 if MPX does not run then all you have to do is install node so Google node and you'll be able to install it okay so
00:13:35.700 we're going to open up a terminal to get started let's go ahead and pull this up let's get into a flow State now okay so
00:13:41.339 remember all of these videos are time stamped afterwards this is live right now but if don't worry if you're busy
00:13:46.980 and you have to go in you want to come back you can do that it's all good okay this is all literally going to be
00:13:52.200 straight up on the channel afterwards so we're going to go into I like to keep things organized so I'm going to go into my documents my builds folder good stuff
00:14:00.420 and if you're wondering yes all of this is going to be available on the GitHub repo afterwards so you can go ahead and
00:14:06.779 download the code all the links that you're looking for are in the description okay let's go in this
00:14:12.720 so build right now let's go ahead and jump in we're going to say uh MPX create next app at latest you don't even have
00:14:19.260 to put a title in right you can just go ahead and run that command and then it will go ahead and prompt you to ask you what you want to call it and everything
00:14:24.899 you want to do after that so let's go ahead and see what that says and now it says is it okay to proceed
00:14:30.180 we're going to say yes it's fine what is your project name we're going to go ahead and say Trello app right
00:14:36.959 clone and I'm just gonna say YouTube but you can call it whatever you want all right would you like to use a typescript with this project I'm going to say yes I
00:14:44.100 would like to use typescript which let's use eslint yes would you like to use Tailwind yes would you like to use the
00:14:49.320 source directory no we don't really care about the source directory okay um you don't use the approach which is
00:14:54.660 the new Nexus 13.3 I believe it came in or you know whatever it came in next year's 13 now let's say yes would you
00:15:01.199 like to use the customize the default import Alias no and a lot of you are wondering or may have not seen that in
00:15:06.420 Port Alias I'm going to show you today it's really nice this is like a little addition that they've added in the template you can see they're constantly
00:15:12.240 updating this so if you're watching an old button you're not getting these options then don't worry about it you know they're going to change that
00:15:17.279 command whatever the case just look at the migration the latest stocks adapt your code and so forth okay
00:15:24.300 while that's loading we've got a few people asking about zero to full stack hero yes if you want today only actually
00:15:29.639 there's a there's a coupon code podcast 10 so you can feel free because we've been pretty heavy on the podcast scene lately so if you want to join the active
00:15:36.120 Community then make sure you head over to property.com use podcast 10 for 10 off on our platinum and Diamond
00:15:41.160 memberships I hope you see this just because your Vlog videos about freelancing I was able to grab my first freelancing gig that is
00:15:48.120 awesome man I hope I'll join the full stack Community thanks to my man dude that is sick that is awesome man thank
00:15:53.339 you so much I'm glad it helps you out Henry says any reason to not use this Source directory not necessarily I just
00:15:59.699 like it cleaner I'll be honest with you that's why I don't use it right so let's go into our directory so CD Trello
00:16:05.420 upright clone YouTube and then I'm going to do code Dot and this will basically
00:16:10.440 open up vs code with our project okay so then I can close this I can go ahead and
00:16:16.139 I'm going to prepare myself by setting up my screens in the way that I expect it okay so I'm going to push this over
00:16:21.660 here make this go over there close this up and now what you can see
00:16:26.699 is if I go into my app mypage.tsx we have a bunch of stuff inside of it okay so command J opens up our terminal we're
00:16:34.019 going to click on output and here I'm going to hide the first one and the last one so I just have my terminal that
00:16:39.180 means we basically shifted over so we've got our project open the way we want it and we want to essentially just run this app now okay so first thing I want to do
00:16:46.440 is I've actually taken screenshots of the old app so don't worry about it we have screenshots of all of this so you
00:16:51.540 guys can actually you know we can run through it afterwards and I forgot to mention by the way this is actually using gpt4 so that's actually using the
00:16:57.360 open AI API and it's actually going ahead and taking the to-do's that we're going to go ahead and format and pass to it and
00:17:04.079 it's providing a summary of the things that we have to do today right and if I move things around it will go ahead and
00:17:09.780 calculate another summary for the day right so it's pretty cool and this is an example of how you can use AI in a very
00:17:15.599 simple fashion in this case it shows us what we have to do today so again I'm just giving you the tech the platform
00:17:21.359 you can go ahead and run with it build some really cool apps all right so let's go forward and do what we were doing so
00:17:26.939 heading over I'm going to go ahead and um yeah so here we're gonna go ahead and
00:17:32.940 I'm going to cut my old up so let me cut that one off and we're going to say mpm because I've got package package Jason
00:17:38.700 package lock if you had yarn lock then you'd be using yarn I'm going to say npm run Dev and this will basically start my
00:17:44.880 app inside of a developer environment this is crazy guys we're at 300 likes that's not zero no 400 likes nearly and
00:17:51.419 we're over 300 people watching I love you guys I actually really love you guys this is so sick this is so sick like for
00:17:58.500 the first video in a while oh my God thank you guys this is the song I was gonna play in the beginning right so now
00:18:03.900 we've got this open I'm gonna go to localhost now so I'm going to refresh my page and what we should see is the next
00:18:09.600 JS starter template so we're gonna go from the next year starter template to this so this is what you should see
00:18:15.720 right now so this is your starting point okay now what we're going to do is eradicate all of this so that way we've
00:18:20.760 got a clean template to start building things command J to hide everything we're gonna go into the main tag and we're going to delete everything inside
00:18:26.880 of the page.tsx and I'm going to type in H1 and say hello this is a Trello 2.0 clone
00:18:34.679 right AI clone because we are using a bit of AI here and then I'm going to go ahead and get rid of that and I'm going to get rid of that
00:18:41.039 okay now inside the app directory it's worth mentioning that Nexus 13 anything
00:18:46.080 inside the app directory is actually naturally a server component server components means by default they're
00:18:51.840 rendering on the server so some things aren't available to us out of the box unless we convert it to a client
00:18:57.480 component so don't get freaked out by all of this just know that if you get some random error when you're trying to
00:19:02.880 use State that's what's going to happen but we'll explain a lot of that in a second let's go over to layout.tsx this
00:19:08.400 is the layout file which is responsible for your presentation logic right so we're going to go ahead and get rid of the font stuff we don't care about that
00:19:14.880 we don't really need to change that right now we're going to keep it very simple the children is essentially where
00:19:21.000 our page is rendered into on the layout itself okay let's get to a thousand likes guys over 400 likes already the
00:19:28.320 videos are not even 20 minutes in and yeah we're definitely getting to a thousand likes let's keep going all
00:19:33.360 right and we can go ahead and change the title with it like here we can say Trello 2.0 clone and we say generated by
00:19:41.039 I the papa Farm there we go bam and then the final piece of the puzzle is globals
00:19:47.100 now the top three right here are responsible for pulling in all the Tailwind utility classes all that means
00:19:52.740 is it you know those little nice Tailwind classes where we basically write like text red 500 all that stuff
00:19:58.440 is basically poured in here and they are called utility classes because they go ahead and actually translate to real CSS
00:20:04.620 rules which can be read by the browser okay so we're going to go ahead and head over back to root delete all of this hit
00:20:09.960 save close that now what you should see on your page is this and that means that we should have a very empty page and
00:20:17.820 that is good because we want to have a blank sheet to start with okay so we're
00:20:23.039 gonna go ahead and pull this out I'm gonna go ahead and move this over here let's go ahead and pop that to the side
00:20:28.500 and now we've got a perfect starting point okay so the first step there's a lot of different areas that we're gonna
00:20:34.140 have to build today right so I'm going to go ahead and just try and get a little bit of sense to this as to how we can go ahead and move forward with this
00:20:40.500 in the most efficient way so what I've done is I've actually gone ahead and screenshot screenshotted a bunch of
00:20:46.559 things and what I'm going to do right now is open those screenshots and then keep things up on the page that way
00:20:51.840 we're going to refer to this as a design element and I'm doing this because a lot of you actually really like this
00:20:57.179 approach okay so as you can see imagine we have a Okay so we've just started as a developer at the papa fam headquarters
00:20:59.000 No text
00:21:03.539 right this is our developer the designer documentation so a designer comes to us says I want to build this how the hell
00:21:09.480 do I build that right so now we're going to break this down and build this entire app okay and it's got drag and drop
00:21:15.419 functionality everything that you expect but we're doing it in exactly the way that it would be in a real life
00:21:20.460 situation so hopefully this should give you some real world context okay so now we've got this screen so I say we break
00:21:26.400 it up into sections we've got the header and then we've got the board right I think that sounds good I think in fact
00:21:31.440 what we'll do is we'll consider all of this the header and then we'll consider the rest of it the board okay so let's
00:21:37.080 go ahead and get started with that so the way I like to do it is I drop a comment simple as I say that this is going to be the header component and
00:21:43.320 this is going to be the board component pretty simple it's going to be two components the header and the board that's it okay so just to get us warmed
00:21:50.940 up we're going to start with the header component so I'm going to go ahead and create a header component now this is
00:21:57.000 going to complain because there is no header component so what we're going to do is I'm actually going to close this go to My package.json Level create a new
00:22:04.200 folder and call this the components folder this is going to be responsible for all the components now it's worth
00:22:09.720 mentioning that inside the components folder we also have server-side rendered
00:22:15.419 components so all of them are server server components by default okay oh my God that is that's absolutely beautiful
00:22:21.780 John Anthony says hi sunny I just want to let you know that you are the reason why I afford to support my family your
00:22:27.240 solo dude I am humbled that is incredible thank you so much for sharing that and uh yeah all right blessed that
00:22:34.740 is amazing thank you so much we're gonna go into the component and we're going to go ahead and create a new
00:22:37.000 No text
00:22:39.960 component called header dot TSX and we're going to say rfce now
00:22:45.900 if you're probably wondering I did rfcm my computer doesn't look like that well that's because you haven't got the
00:22:50.940 extension that I'm about to show you right now so inside of your extensions tab I want you to go ahead and type in
00:22:56.400 es I always forget it is it es6 es5 es6 Snippets yeah es7 so you want to type in
00:23:02.159 es7 es7 um Snippets this one yeah okay I want
00:23:07.320 you to type this in and install this extension that's how you do rfce and it pops up with everything all right so you
00:23:12.960 want to install this one and while you're there I also want you to install the Tailwind CSS extension this is going
00:23:19.380 to be really important for the Times where you see when you're adding in your utility classes it goes ahead and gives
00:23:24.900 you all the options that you can go ahead and pop in like so it's really important honestly it makes your life so
00:23:30.120 much easier I 100 recommend it okay and it's very good when you're learning how to do Tailwind stuff so now we've
00:23:36.000 No text
00:23:36.120 created our header component let's head over back to page click on the end of header and a nice little trick is if you
00:23:41.580 press Ctrl spacebar you get this nice little import now I can go ahead and hit enter and as you can see it auto
00:23:47.640 imported it now something which is really cool here guys is that you can see we've got this at sign now this new
00:23:54.179 app sign is something which is not really that new but we just haven't seen it much because I don't really tend to do it in the buds unless it will set up
00:24:00.360 for me because we're in a rush but the reality is this is called an Alias now what this does is is it says go to the
00:24:06.659 top level or whatever we've assigned to that and I will show you how you can Define what that refers to in the path
00:24:12.299 so rather than doing like dot dot dot dot dot so forth now instead you can
00:24:17.520 simply say at to go to the top level then you can go into components then you can go into header that way no matter
00:24:23.340 where you are you can just say at forward slash app at forward slash components and the way you do this is
00:24:29.039 you go into TS config head over to paths and as you can see the at path simply
00:24:34.320 refers to the top level so this means that the top level and then it's got a wild card for anything that you want to
00:24:40.140 put in so this will correlate to this wild card and that's essentially how you do it so it's actually really simple to
00:24:46.140 get that working but it's a game changer okay so now we're going to go into a header and we should see the header
00:24:51.360 popped in like so this is great okay so I wanna okay can I can I not shut my
00:24:56.640 grammarly off um I use grammarly lately it's pretty cool um can I just deactivate it
00:25:03.539 when yeah there we go get off that's it we're good okay so at this point now uh
00:25:08.820 yeah we are nice so I'm gonna change this to a header syntax we're going to be a little bit SEO friendly get rid of that we don't no longer need to say that
00:25:15.059 it's um a header um import sorry and then the first thing we're going to do is we're going to go
00:25:20.700 ahead and start styling out so let's go ahead and use this our reference we've got an image tag here then we've got a
00:25:26.100 nice little Gap here so in fact this is going to be an image this is going to be a div which takes up all of this space
00:25:31.919 and then we're going to have a search bar and a avatar on the right okay remember it says um there we go do you
00:25:39.299 think so we're actually using just stand today for State Management and trust me it's so easy to do okay guys this is
00:25:44.520 incredible we're nearly at 500 lakhs already if you're watching this and you enjoy the content you want to see more videos like this destroy that like
00:25:50.700 button for the algorithm so that way this video gets out to more people I love you guys that is absolutely sick
00:25:56.100 all right let's go to the image component so I'm going to go ahead and pop in an image right now so first up
00:25:57.000 No text
00:26:01.620 we're going to use the next shares image tag so next she has image tag like so I'm going to go over to control spacebar
00:26:08.039 and you can see next image okay now what I've done is I've made your life a little bit easier I've added a source
00:26:13.679 tag um which I've shortened into I know my own URL okay simply the trailer logo and
00:26:19.380 this is complaining because you also need to say something like the Out Tag right so you have to give that now it's
00:26:25.559 not just going to work like this you have to give it either a fill or a width and height so in this case I've given it
00:26:31.020 a width of 300 and I'm going to give it a height of 100 and this is basically
00:26:36.360 how next yes determines how to optimize and render it before you've done anything right so we got to the class name now now here what I want to do is
00:26:42.779 I'm going to say width is 44 on a mobile view but as we hit a medium screen so this is called Break points then it's
00:26:49.140 going to be a width of 56 okay I'm using so many different plugins that is super annoying right now there we go all right
00:26:54.900 and then we're going to go into the padding bottom of 10. we're going to say on the medium screen we're going to go
00:27:00.360 to a padding bottom of zero and then we're going to say object should contain itself that means it
00:27:06.720 doesn't stretch out and look strange now as soon as I hit save we should see an error this is because next JS likes to
00:27:13.980 optimize our images now we have to whitelist what image is we're actually allowing to come from and what domains
00:27:20.460 they're coming from if we don't everyone could misuse this because they could you know be pulling in images Left Right
00:27:26.279 send it from different domains and then there's a bit of a problem so we have to basically say we trust this domain how
00:27:31.320 do we do that it's very simple look at the error message it says host name and it'll give you the hostname copy that hostname then head over to your next
00:27:38.279 config next config is simply inside of here notice how I don't even need to say using the app directory anymore so
00:27:45.179 previously we had to say app directory now we don't actually have to do anymore because it's now in uh it's working here
00:27:50.640 we simply say images and then we're going to go ahead and type in domains
00:27:56.520 okay and I'm going to pass in an array now I'm going to go ahead and pop it in like so
00:28:01.940 links.popperreact.com now what actually happens now is it actually does restart the server for us but I'm you know I'm a
00:28:08.400 little bit skeptical I like to play it safe I'm going to cancel this out with Ctrl C and then restart it again because I've had a few weird errors whenever I
00:28:15.000 decided yeah right but they are upgrading it which is nice right so we go ahead and refresh and we should see
00:28:20.820 that this disappears and we should see a logo at the top hey we've got the trailer logo okay so that's a good start
00:28:27.659 next up what we want to do is we want to have a div which is going to include the
00:28:32.760 search box okay so as I mentioned before we've got the left side and then we've got a div with the search box and the
00:28:40.200 custom avatar okay so this is going to be the div next to it now inside of here
00:28:42.000 No text
00:28:45.600 we're going to have a search box and the Avatar which is the little circle with somebody's name in it okay
00:28:52.200 now for the search box we're going to make our own custom search box okay so I'm going to go ahead and pop in a form
00:28:58.200 and inside the form I'm going to have a input field and I'm gonna have a button okay the
00:29:04.080 button is going to say search and but I actually want to hide this button so we can create some funky nice UI to it
00:29:10.020 okay now at the moment we can't really see anything because it's kind of white and we've got yeah it's a bit hidden
00:29:15.120 right so what I want to do now is also I also want to have an icon next to it right so there's a few things that we need to change here firstly in order to
00:29:21.840 get that icon I'm actually going to use something called hero icons so head over to heroicons.com this is a you know a
00:29:28.980 library that is supposed to be used with Tailwind because we're almost at 500 likes do me a favor destroy it and carry on watching when I hit the like button
00:29:35.460 let's go to documentation go to on the there we go and then go down I mean it should show us how to install so for
00:29:41.580 react we simply do an npm install we head over to our code command J to pull up our terminal and as you can see we're
00:29:48.059 already running something here okay so what I want you to do is basically you can either do two options if I'm working
00:29:53.100 on a bigger screen I actually split the terminal but in this case I'm just going to open up a second terminal so my first is running the app the second is going
00:30:00.419 to go ahead and be my install terminal I always like to have a few separate ones running so we've installed the stuff
00:30:05.940 that we need and then it tells us how to go ahead and use it so in this in this case I need two different icons
00:30:12.720 so I'm going to go ahead and import them like So eventually we're going to use the user Circle but the magnifying glass
00:30:18.179 is what I need now if you're wondering how did he search for it though well all you need to do is type in for example
00:30:23.640 user you can go ahead and see for yourself here it pops up right and then you can go ahead and use it like so so
00:30:30.000 in this case we've done the heroicon step so I'm going to go ahead and add in the magnifying glass icon now I'm going
00:30:36.840 to go ahead and style this a little bit by saying it should have a height of six
00:30:42.240 a width of six and I want it to have text Gray 400 oops my bad text Gray 400 okay
00:30:51.899 and what we should see now is we get a nice little icon which is a lot better than nothing right now for the input
00:30:57.360 type we should have a placeholder value that way the user can see where they're supposed to type in and it also allows
00:31:03.360 me to show you the changes are happening as we do what we do right so for the form this looks horrible right now so
00:31:09.299 let's go ahead and fix it up so I want to change this to make it look like a really nice form so firstly we're going to put flex by default naturally the
00:31:16.080 children go into a row as you see the search is now next to the site um the magnifying glass then we're going to say
00:31:22.020 the item should be centrally aligned on the y-axis we're going to give it a space between each other like each item
00:31:27.960 of five that's why it's spaced apart then we're also going to say the background should be white the rounded
00:31:33.240 the corn around the corners off padding of two give it a shadow of medium right
00:31:38.880 and as you can see already it's looking pretty decent right it should be Flex one no so that's not going to be Flex
00:31:45.480 one yet we'll handle that afterwards but I'll show you how we do that um yeah so actually it's true flex one
00:31:51.539 because on a mobile screen I wanted to take up the entire width and then afterwards I want it to be Flex initial on larger screens so that way yeah it'll
00:31:59.940 make sense once we actually complete that part so let's carry on we've got the magnifying glass here
00:32:05.760 we've got that perfect the input field we're going to go ahead and give that a flex one rule and right now the flex
00:32:12.539 rules here so if we do Flex one here it means that the input field is going to take up so you see right now it's not
00:32:18.600 taking up the full width right if as soon as I hit save on Flex one watch how it takes up to four width that means
00:32:24.899 because you're saying that child should take up the maximum space that it has yeah so that's how we essentially do it
00:32:31.260 right and then also you see this ugly blue line I don't want that I'm gonna say outline none whereas outline none
00:32:36.779 gets rid of that blue line makes it a lot cleaner and then it's too close together so padding of two a little bit
00:32:42.059 of breathing room now now that's looking much nicer hey good Okay so we've got a nice little search for it the final bit
00:32:48.659 is this button we give it the type of submit okay and what this does now is it acts as the enter key so when you're
00:32:55.260 inside of a form and you have a button with type submit if I go ahead and type in a bunch of stuff and I hit enter
00:33:00.480 notice how the page refreshed that symbolizes to me that we actually submitted that form okay so that's a
00:33:07.260 good start yeah so let's carry on strong so now inside the div for the surrounding box we actually want to go
00:33:14.039 ahead and you know before we carry on I want to just modify something here so
00:33:19.380 we're going to go ahead and have a div that surrounds everything so inside the image and so forth so over this image
00:33:26.100 over this div so let's have a div which surrounds everything yeah and this div is going to start having some rules
00:33:31.440 we're going to say it should be Flex there you go and then um so what we're going to do is we're
00:33:36.480 going to do mobile first design which is how you should typically do it right so we can say Flex column on a mobile view
00:33:42.600 this means that it goes into a mobile view now when we go to a bigger screen it's going to become Flex row okay
00:33:48.000 because basically as we're on a mobile view I want it to stack up like this but on a bigger screen you see I want it to
00:33:53.460 go across like that right once that's done we can say items should be centrally aligned so as soon as we do
00:33:59.820 that so now you can see it centers on the phone and over here it centers you can't actually see it because there's no
00:34:04.980 padding but it trust me it does right P of five to go ahead and give it a bit of space from the corners and I'm going to
00:34:10.800 give it a background gray of 500. now that's really strong so I want to give
00:34:16.320 it four slash ten that is basically a shorthand for make the background gray five the shade of 5 500 but 10 opacity
00:34:23.480 boom 500 likes that is crazy I think there's a record in 34 minutes we hit 500 likes let's get to 1 000 that is
00:34:31.139 absolutely crazy right crazy stuff round the corners off so bottom 2XL now you can see I've got
00:34:38.699 these nice little Corners rounded off by very subtle difference but these things are what caused that nice change to
00:34:43.859 happen so look at that already looking pretty sweet now you see here how the Trello is right next to this right this
00:34:50.580 is because if we were to inspect this these are only using up the minimum space that they should be all right so
00:34:55.679 if we now go to my image and we basically say I want you to use up the full width so
00:35:02.339 it wasn't actually that one it was um I'm gonna fix that afterwards actually
00:35:08.400 so we'll do that after this one is uh yeah that's fine okay so let's do
00:35:17.220 yeah that's it I got it right so this div yeah so the div surrounding the search field we're gonna go ahead and
00:35:23.460 say class name and I'm going to say this is the flexbox and right now it's only got one child in
00:35:28.920 there because we haven't got the Avatar in there so I'll tell you what before I do that I'm going to add the Avatar in so this Avatar new library so it's kind
00:35:33.000 No text
00:35:35.820 of fun right so this new library is called react Avatar right so it's pretty funky Library
00:35:41.280 um I wouldn't I used it more out of convenience if I'm totally honest um but you can feel free to to use
00:35:46.320 whatever you want so this is react Avatar we're going to install it and what I like the reason why I like it is because you can actually use a bunch of
00:35:51.900 things like Skype ID GitHub Google Facebook ID and then we'll go ahead and grab your picture for you so I thought
00:35:57.720 that was pretty cool so we're going to go ahead and just do that right now and I'm simply going to put a name in there so in this case npm so as I mentioned
00:36:04.560 this will be on your portfolio so really what's going to happen here is it's going to be one of those ones that you put on your portfolio I'm gonna make it
00:36:11.040 to a level where again it's just going to be statically for one user right you can go ahead and upgrade it and so forth
00:36:16.440 as you wish I'm going to make a little bit bigger for everyone so hopefully that helps you out um mobix thank you so much because
00:36:21.839 you've done an amazing job man well now with the podcast you have no idea how you changed my life I was so scared of using reactant typescript but thanks to
00:36:28.260 you I'm about to launch my own website it's comments like that that make my day thank you so much dude I appreciate you
00:36:33.780 right so in this case we have a flex so we've got the Avatar so now I'm going to go ahead and use the Avatar so here I'm
00:36:41.640 going to say Avatar Avatar and you see how I imported it automatically for me so Avatar space
00:36:47.420 name equals in this case I'm just going to say Sunny Sangha right you again you can feel free to look at the library and
00:36:53.940 customize it as you wish right I'm just giving you the tools to go ahead and get things started off so if I do that
00:36:59.579 you'll notice that okay that was not a great one I freaked out um Avatar name rounds okay let's refresh
00:37:07.200 why is that freaking out let's have oh okay this is a client-side component okay so actually we're gonna do a lot of
00:37:13.680 things here inside the header which is going to require State and a few things like that so what we're going to do in
00:37:19.440 this case is we have to convert This Server component because in xjs13 everything by default is a server
00:37:25.500 component so in this case I'm going to go ahead and convert this to a client-side component this means it is
00:37:31.079 rendered on the client so basically the rest of the page which is a server component gets rendered on the server
00:37:37.260 but this header component basically when the page loads then on the browser of
00:37:42.660 the cloud client it executes the code right so that's basically what's happening when I say use client so it
00:37:47.880 doesn't do it on the server it does it over here now what you'll find is that we should not get that error anymore
00:37:53.339 there you go that's why so that's a big sort of thing that you have to look out for now as we transition into this sort
00:38:00.119 of server component realm yeah so now what we're going to do is use the nice little features of this Library we're
00:38:05.579 going to make it round we're going to go ahead and say the color should be a value and I've got this nice Trello blue
00:38:10.800 right I should really give it a name but in this case I'm just using it simply I'm gonna go ahead and pop it in like so
00:38:16.020 it's got the Trello blue and then I'm going to go ahead and say a size of 50 right so 50 like so and again
00:38:25.020 you can change this to whatever you want you could say Elon Musk and then you see it becomes em and so forth right but I'm
00:38:30.240 going to go ahead and say Sunny Sangha yep nice so now we've got our you know our easy bit there right
00:38:37.980 um so you can Liam you can definitely render what you can on the server so again you can optimize it at so many
00:38:43.859 levels I'm just showing you the base and then you can feel free to elevate it I'm just trying to show you a mixture of the
00:38:49.020 things but I'm not gonna go so far and if you want to see me really optimize zero to four set hero in a coaching call
00:38:54.900 as well I do that kind of stuff so again popularreact.com second link in the description and I will help you out with
00:39:00.839 it all of that right so I would recommend if you really want to elevate the Diamond package is honestly the one
00:39:06.599 that we get Raves about yeah so definitely check it out so we go to the div class name and now
00:39:12.720 I'm going to say Flex items Center and as you can see now now we get this like
00:39:18.180 really nice effect going on right so this is what I wanted to show you I want to space this out so SpaceX of five so
00:39:24.300 there you go SpaceX five Flex one so what this will do now is if I make it a bit bigger here
00:39:29.940 so what you're not seeing is that this is actually by doing Flex one so if I get rid of this I'm going to say BG red
00:39:35.460 I just want to show I'll make a point to you BG red 500 okay so notice how it's only using up what you should be using
00:39:41.339 all right so if I do Flex one boom it uses up the full width now okay then
00:39:47.940 what I can do is I can say justify it right over to the end so justify to the
00:39:53.760 end and then what it does is it froze it over to the side okay and then on a
00:39:59.400 mobile device you'll notice how it's only small so what I can say is make the width four as well
00:40:06.000 and as you can see now on a mobile device it's with 4 and on the bigger device it's going to be nice and snug in
00:40:12.480 the corner and then obviously we can get rid of our red color that I was using for demonstrational purposes and then we
00:40:18.420 go look at that I hope that was a good explanation of how we did that but yeah you can see how clean that was right so look at that it's really clean you've
00:40:25.200 got beautiful UI and just simply like that little tricks that you learn over time and yeah you can do that yeah I'm
00:40:31.560 that's perfect explanation yes used client is for things it can't be done in the server have to be done in the browser hence we convert it to a
00:40:37.859 client-side component and then we use it right but I wouldn't recommend making your entire page client side just do the
00:40:43.440 components individually right yes I loved look at the community this
00:40:48.540 is what I'm talking about guys read the comments if you're watching this bag there's some really great stuff in there right now Okay so we've got the Avatar done okay
00:40:54.839 that's great now after the Avatar so after this div what I now I'm going to
00:40:56.000 No text
00:40:59.940 do is have another div and this is going to be where the suggestion will be right so in this case you see this suggestion
00:41:06.300 right here right so I kind of want to have this still as part of the header right you can really you know you can exclude this out and do it separately as
00:41:12.660 a different command if you really want but it's completely your call here I'm gonna have a user Circle icon use a
00:41:18.780 circle icon and I'm going to say something like this I'm going to say the class name should be an inline block
00:41:24.060 right it should be a height of 10 height of a 10 width of 10 oops height of 10
00:41:30.540 width of 10. and you're gonna mix the music up a little bit let's go to some of the new tracks that we've got on the pubfan playlist again popular.com right
00:41:37.619 at the bottom sign up to that newsletter and you'll get access to the entire playlist if you like the music that you're
00:41:43.560 hearing right now all right guys we're almost at 600 likes let's go Papa farm that is what I'm talking about we're
00:41:49.320 gonna say um height of turn width of 10. we're going to give the color of this um person to be the blue that I talked
00:41:56.520 about earlier and we're going to give it a margin right of one so boom I know if you're wondering yeah
00:42:02.040 I actually do listen to this um this music when I'm coding so this is literally my my playlist I listen to all
00:42:09.839 right just go ahead and hit save refresh so you can see nice blue looking nice
00:42:15.000 and then yeah that's pretty great okay and eventually we're gonna have it if it's loading that's gonna spin right so
00:42:22.560 that's perfect for the P tag I'm gonna send to that P tag by saying Flex items
00:42:29.700 Center justify everything in the center a nice little trick just centering a div and
00:42:36.000 then we say MD padding y so only on medium screens or above I want to add a padding y so in this case you see
00:42:41.760 there's no padding here but if I'm on a medium screen it adds the padding right so I want to do that just in this case
00:42:47.700 okay now for this P tag I'm going to say that it should be text should be
00:42:53.520 swatching up before I do any Flex here inside of here I want to have a suggestion as well so this is a P tag so
00:42:59.460 I'm actually embedding the icon as part of the text and then I'll have a suggestion So eventually we'll hook this
00:43:05.160 up to GPT but for now I'm just going to say GPT is summarizing your day okay so that way you guys can see
00:43:11.520 so now you can see that this is slightly off character right this is not like perfectly aligned and the trick that you
00:43:17.099 can do is as we have two inner children technically here we can actually do Flex we're gonna do items Center and notice
00:43:23.880 how it's now it's perfectly aligned a nice little tricks right text small font should be light
00:43:29.819 I'm going to do padding right of five and I'm going to say shadow
00:43:35.460 Excel so that way he's got a nice little Shadow to it round the corners off with extra large core rounding I'm going to
00:43:41.339 make it fit only where it needs to fit the background should be white it should be italic
00:43:47.940 and it should be a maximum width ever of 3XL and I want the text to be on a fancy
00:43:53.280 ass blue right that just there you go fancy boom there
00:43:59.400 we go nice all right there you go look at that looking clean right something's off the the padding
00:44:05.700 the padding is off all right so I forgot to add padding in the P tag yeah of
00:44:12.060 course so here so padding of five bam that's much better right so now you can see GPT is summarizing your task for the
00:44:18.660 day my right now obviously it's not we're gonna go ahead and add that in afterwards yeah so Guys these are absolutely crazy over 350 people
00:44:25.500 watching across platforms wow thank you so much that is awesome just unbelievable actually unbelievable all
00:44:32.460 right so at this point now things are looking pretty good I think so I'm happy with that that looks pretty nice now I'm
00:44:39.480 going to show you the trick for the color gradient okay so you see this color gradient in the back now something that you might have not noticed slight
00:44:46.079 designers will notice this right only the designers will notice this but that is not white that is great right so and
00:44:52.200 what I'm going to do is I'm actually going to change the background color to a gray so we're going to go to page.tsx and we're going to start modifying the
00:44:58.079 color I think I did it and yeah I did it in the layout so typically you should be doing that kind of change in your layout
00:45:04.020 so for the overall body I'm going to say that the background color is a custom color now I've actually grabbed this
00:45:10.020 from a uh a design sheet that I was working on so I've got a background color and as you'll see now it very
00:45:16.260 slightly changed it but the nice thing is it makes the white pop that's why I like it right the only thing that's
00:45:22.920 bothering me here is in the header on that P tag I simply don't have a little bit of pet I just need a tiny bit of
00:45:29.220 padding on the phone there you go that's nice yeah it's tiny about padding and then it goes to a bigger padding on a desktop that's beautiful Okay so how do
00:45:36.000 No text
00:45:37.800 we get that really nice gradient effect that you see here because it changes up everything right so what we can do is we
00:45:43.619 can go over to our header component so I'm in the header component and what we're going to do is we're simply going
00:45:49.260 to add in a basically a hidden div all right so we go inside the div that's
00:45:54.599 responsible for outputting everything and here I'm going to add in a like a hidden depth right so let's go says your
00:46:00.480 projector made me understand the concepts clearly I love you Sunny thank you so much less code I appreciate you man all right so they're going to go and
00:46:07.319 say div and this is basically an invisible deal that will act as a gradient now here's
00:46:12.599 the trick we're going to say class name and I want this to be absolutely positioned across the entire screen
00:46:17.640 that's what I want right I want it to be top of zero and what I'm going to actually do here is drop it down like
00:46:23.760 this so you guys can actually really see what the rules are I'm doing right so top of zero left of zero that means it
00:46:29.579 basically goes to the top left and then I'm going to expand it out all right so the width should be four so if you think about it now it's expanding the entire
00:46:36.180 page starting from the top left right the height should be 96 96 it basically
00:46:41.760 goes down to around this length which is perfect that's all I want I don't want to go across the entire screen then I'm
00:46:47.460 going to say it should have a background gradient which is to the bottom right right so as
00:46:53.640 you can see I save nothing happens because I haven't specified what the colors are for the background gradient
00:46:59.099 okay so I'm going to say firm pink 40 to
00:47:05.339 um and I've got the nice that blue right that really nice blue uh let's go ahead and grab it and again I want you guys to
00:47:11.700 customize it and what I love is if you customize yours and then do a little screenshot send it to me on Instagram
00:47:17.220 I'd love to see what you guys built out of this right so let's go ahead and hit save and now you can see boom we get
00:47:22.319 that now as you can see everything's hidden it doesn't look that does not look like that how do we get it there right well very subtle changes all we
00:47:29.880 have to do is simple we have to round the corners yeah and as you can see now we've got a nice little around the
00:47:35.040 corner that's definitely not going to do it though right we have to say filter because we're going to add a filter to
00:47:40.140 this right and this basically prepares the browser for what we're about to do then we can say blur
00:47:45.859 3XL now you can see oh get this nice effect going on then what we can do is we can
00:47:52.260 say the opacity 3XL you say opacity is going to be 50 right now you can see it
00:47:59.040 goes behind as in like boy it's a lot harder to see but we still have a problem here right it's like in front of
00:48:06.180 everything so what we do here is we use something called Z indexes so I'm simply going to use a minus Z index of 50.
00:48:13.079 everything else basically so Z indexes think of them as layering so by setting
00:48:18.720 a minus Z index or minus Z to 50 it's basically going to the back right and then what I can do is if I really want
00:48:24.960 to control things I can say minus Z 40 will go in front of that one and then go all the way up to Z 10 20 30 40 50 or
00:48:31.500 whatever all right but the point is that you can then stack the layers As You Wish because sometimes you might have an
00:48:36.599 issue where just like now you want something to go behind another element okay so um yeah hopefully that helps you
00:48:43.020 out smash the like button if you learned something new about Zed indexes right oh my God this is crazy we've got 350
00:48:48.359 people in the house 600 likes on the ray that is sick all right this is looking
00:48:53.880 great I'm very happy with this so now we are going to proceed to the next part
00:48:59.040 so we've got that looking pretty nice so let's go ahead and do the start with the board right we're going to be coming
00:49:04.500 back and forth moving around loads but this is where we basically get you know our hands dirty right so let's go to the
00:49:11.040 page and here we're going to go ahead and remove this and we're simply going to go ahead and put a board in play
00:49:16.920 right so I'm going to get rid of this like so now the board let's go ahead and create this component so I'm going to go ahead and create a
00:49:19.000 No text
00:49:22.980 component here board.tsx and then I'm going to say rfce right you can go ahead
00:49:28.260 and get rid of this and then we have our board go back to the page simply import it like so so go ahead and do control
00:49:34.200 spacebar bam we have our beautiful board right looks great right uh I love this
00:49:41.040 and yes thank you Ryan for noticing that I'm I'm trying my best to break down every detail every step sometimes I have
00:49:48.119 a habit of just flying forward so hopefully this helps you out okay
00:49:53.220 um so this is looking pretty good right so this is going to literally be our top level page so you see your page by the
00:49:58.800 way should always be a high level functional sort of element right it shouldn't be every bit of logic is it
00:50:04.319 your page level should break things down into a way that is concise and it's just clear to see that is my header on my
00:50:10.440 board that's my page and then everything goes deeper than that okay that's how you should be building your apps yeah so
00:50:16.440 now let's go ahead and start with the board okay so the board lots of different
00:50:21.480 elements here right we've got this nice to Do's we've got the different columns and so forth the library in fact that
00:50:26.000 No text
00:50:27.300 we're going to be using which I think we should begin with is actually going to be called react beautiful D and D so in
00:50:33.060 this case let's go ahead and search for it right now so react beautiful DND and in this case you can see if I go to the
00:50:39.720 actual Library itself who's at the sun which is actually the owners who bought out um they own jira they own Trello so
00:50:46.859 yeah you might have heard of them right so here you go right before DND scroll down and you can see a nice
00:50:52.200 demonstration of how we're going to use it so this is their demo I think ours looks way better though so we're going
00:50:57.599 to build this instead right so why are you not using JavaScript instead of typescript so a lot of people get confused about this JavaScript is your
00:51:04.500 language typescript is a superset on top of typescript on top of JavaScript so typescript is basically adding strongly
00:51:11.040 typed power to your JavaScript coding right so it's not you can't do one you can't do typescript without JavaScript
00:51:17.280 yeah so in this case we're going to build this so how do we do it let's go ahead
00:51:22.440 and install that's the first step okay so we're gonna go to installation I'm going to show you like I said I want to show you all of the steps so we're going
00:51:28.980 to go ahead and install this into our project right so come on Jay head down to use it sh
00:51:35.640 boom and we install reactive beautiful DND now as you can see they've got prob don't get confused you know sometimes
00:51:41.700 you're going to see different examples different tutorials always kind of craziness but the main thing is you need to import drag and drop context into
00:51:48.599 your app that's the first step right um so we're gonna go ahead and pull that in so we've installed that command J to
00:51:54.180 hide the terminal we're going to pull in the drag and drop context from Rabia from the ND now you can see it's
00:51:59.220 complaining some libraries will do this when they do this I want you to go ahead and hover over it and a lot of the time
00:52:04.740 it will give you this little command here where it says you can install the types because what's happening is it
00:52:10.319 hasn't automatically connected the type definitions or the types the types from the typescript definitions
00:52:17.280 um automatically when we did it so all you have to do is you copy that command and what this will do is it'll save the developer dependencies and all the types
00:52:23.819 of this now most cases it will find it just like so and in just a second that will disappear okay so that's how you go
00:52:30.960 ahead and get rid of that then what you want to do is you can go ahead and check out how you can use it
00:52:36.720 so in this case this part honestly was a little bit sort of Hit and Miss I had to check out the get side the samples all
00:52:43.200 this kind of stuff but I'm going to try and make it a lot more easier for you okay so you don't need to do any of this I'll show you how we do it so this is
00:52:49.440 basically a nice little demonstration you have your drag and drop context then you have your dropable parent and then
00:52:55.920 you have draggable elements within okay so you have to have your drag drop context at the highest level your
00:53:01.740 dropper ball area and then draggable stuff within but remember we actually have two nested layers now what we have
00:53:08.460 is the ability to drag each of the individual columns so I can get my done column move it over there I can get my
00:53:14.280 progress column move it over there and so forth and then inside of that I can move the to-do's across each of the
00:53:21.300 columns right so we've got a bit more complexity here so I'm going to go ahead and showcase how the hell we do all of
00:53:26.400 that right I would love to see a marker being done live and then making it in reality I personally strong finger designs oh sure
00:53:32.040 dude do something like that okay so you can go ahead and read this out if you want and check out the examples I'm just
00:53:37.500 going to go ahead and start jumping into how the hell we build it right so let's start breaking this down step by step
00:53:43.140 right first thing we're going to do is the parent the overall outside we're going to go ahead and say drag drop context all right so this is our parent
00:53:49.980 then as I mentioned we're going to have a dropper ball okay so we're going to go ahead and put in a dropable
00:53:56.160 cool all right so this is going to be inside of this we're going to say droppable uh dropper ball yeah now this dropper
00:54:04.020 ball you have to give an ID right so in this case it's got the dropper wall is closed out there we go you have to give
00:54:09.540 you an ID so we're going to give you an idea board okay then we're going to give it a Direction so in this case I want this is going to be a horizontal board
00:54:16.500 okay so horizontal the reason why is because these this first dropper ball is
00:54:21.900 basically I'm going to be able to grab all of these different things right so you see this right here I should be able
00:54:27.359 to pull this entire to do list this section and move it over there right so
00:54:33.960 we're not addressing each card yet we're addressing the entire columns so that's the first level we can move this column over here and so forth right so that's
00:54:40.859 the first step so the first one is going to be a direction horizontal not vertical the type is going to be
00:54:45.960 something called a column cool all right now what we're going to do is this gives you something called
00:54:51.240 render props so basically a child of this is given to us so we can go ahead and get something called provided okay
00:54:58.500 Mario's what is up dude how are you doing here's our OG in the papa Farm an
00:55:03.540 awesome member inside the community if you want to chat tomorrow zero two star Heroes a place but oh geez in the house that's awesome man so you can see I've
00:55:10.920 got provided here right now as you can see I'm doing parentheses this means that in my jsx block these curly
00:55:16.260 brackets I'm returning something here so it's like an inner function really right so we're going to render out a div and
00:55:22.920 inside of this div we're basically going to render out all of the columns okay
00:55:28.319 so I'm going to show you how we're going to do it so this is basically going to be rendering all the columns right
00:55:34.859 cool so at this point I'm gonna do a little pause because what we really need
00:55:39.900 to do here is actually go ahead and prepare ourselves for what's to come right we don't have any anything that we
00:55:46.980 can actually map through here right so what we're going to do is we're actually going to pause here we're going to
00:55:52.260 implement the upright section of the build and then we're going to go ahead and um and then we're gonna pull from
00:55:59.339 app right get our columns our board columns and then we're going to proceed okay so it's going to be a bit of a step
00:56:06.000 but we're going to do it um so let's go ahead and do that right now so we're going to go over to Upright
00:56:10.000 No text
00:56:11.339 so you're gonna head over to your upright and simply type in app right Cloud you should see the
00:56:16.760 cloud.apprite.io or simply go to the first link in the description to get started for absolutely free okay so
00:56:23.520 we're going to set this up right now guys we're almost set at 600 likes that is incredible I want to hit a thousand
00:56:29.520 today so let's get the energy back up and let's go right so first things first
00:56:34.680 you see I have a first app over here I'm going to go ahead and create a new project so we're going to create a new project I'm going to call this one let's
00:56:41.099 just call it the Trello YouTube clone bam hit create
00:56:48.059 and as you can see we created our project now you can go ahead and they made it extremely easy over Opera to go
00:56:53.819 ahead and get set up with our projects we're going to go ahead and add a platform in this case we're going to add a web app so I'm going to click on web
00:56:59.700 app you have to give it a name so naturally I'm going to say something like Trello YouTube well and the host
00:57:06.000 name now in this situation once we deploy this will be the hostname of the
00:57:11.579 deployment domain all right Mario's goes love this song I love it too man yeah apprite is free yes a lot of people
00:57:18.540 asking app right is free yes so you can use that bright Cloud beta for free yeah the host name here we're going to say
00:57:24.420 localhost and we're just going to start off with this right then you can see we're going to click on next now you can
00:57:30.720 see we can install so they make it really easy for us to carry on and get this set up so I'm going to go ahead and
00:57:36.059 install at this point so instead I'm gonna pull up my terminal and store upright so npm install upright wait till
00:57:43.740 that's done now in our true fashion the way I usually do things on all my stream I'm going to go ahead and hide this out
00:57:50.099 and simply go to the bottom I'm going to close everything out another package Json level I'm going to create a file called upright
00:57:56.359 tortillas all right and this is going to be where we essentially set everything up so I'm going to do an import of all
00:58:02.339 of the things I'm going to need all right so in this case I'm going to end up using all of this stuff the account the ID database of storage and so forth
00:58:08.940 we're actually not using the account today we're using all of these instead right I'll show you how you can initialize even the account right so
00:58:15.300 that way it kind of in case you decide to use it you can use it so I need to go ahead and initialize on my clients so in
00:58:21.780 this case const new client now how do we actually go ahead and get set up with it so you see if we click on next it will
00:58:27.839 tell us how to set the project up in this case I've got a project ID you know it's open so I'm going to go ahead and
00:58:33.720 copy this ideally I might have to you know create a new project because that's already shown by nus minor so we're
00:58:39.599 going to go ahead and do this right now so const client equals this and so you want to go ahead and copy this and do it
00:58:45.480 right here so in this case I've already done it was a set endpoint and then right here we're going to do https Cloud
00:58:52.500 upright V1 okay so this is actually the the the thing that we're going to use
00:58:58.020 right now okay then we're going to say set project and instead of doing a default value I'm going to say
00:59:03.680 process.environment dot next public upright project ID okay this is actually
00:59:09.420 going to be a public variable so next public symbolizes that this is going to
00:59:14.760 be um this is actually going to be available on the client right if we don't have this it's only available in
00:59:20.819 server render components and the back end stuff so we're going to go ahead and add this in and this is going to be something I'm going to say is absolutely
00:59:26.760 there okay once we go ahead and set up in just a second then what we can do is we can go
00:59:32.400 we can initialize everything off of that client so we can have the account the database access the storage or by
00:59:39.299 setting it up like the following and then we can simply just export it like so okay ID gives us unique identifiers
00:59:45.720 it's going to be pretty handy right Bobby says on the first salary I'm joining the page stuff that's what I'm talking about dude I promise you zero
00:59:52.260 full stack hero is no joke this is how we do our thing this is literally how we work together all the time William says
00:59:57.660 how will gpt4 fan we're actually going to be using it to provide that amazing sort of suggestions over it so it's an
01:00:03.240 example of how you can use it so you pass it to do this it tells you a summary of what your day is right so now
01:00:09.359 we go ahead and hit save this is great all right we've got everything looking pretty nice right now so what I need to do is set this up so
01:00:16.020 I'm going to go into here I'm going to create a new environment variable so dot EMV dot local and inside I'm going to go
01:00:21.599 ahead and pop in my project ID now my project ID in this case will be this one so I need my project ID so I'm going to
01:00:28.319 go ahead and pop that in like so hit save and as you can see in my terminal if I go back to the first one
01:00:34.500 it will say found a change in your config it's gonna oh sorry it was a environment variable ignore that we've
01:00:40.859 fixed that one so that will be gone in a second but yeah we've done that there we go that's our project ID then we can go
01:00:46.680 ahead and click OK and you're ready to go take me to my dashboard so they have a really great dashboard at upright that
01:00:53.160 shows you all of your reads your rights your usage your storage your functions that you're running your authentication
01:00:58.260 all of it is available here and you even have access to your API keys so a lot of this stuff is pretty much
01:01:03.780 self-explanatory once you're set up right say Caballo says you are awesome bro Mexico in the house that's what I'm
01:01:09.780 talking about with International in the proper fam Romania here as well that's what I'm saying guys let's get to a
01:01:14.880 thousand likes Papa vanway this is how we do it right so next up we're going to go to the databases Tab and this is
01:01:19.000 No text
01:01:21.900 where we start setting things up the way that we need to okay so what I'm actually going to do just for my own
01:01:27.299 reference is open up my other Cloud app right right windows so that way I can remember exactly how I set up the
01:01:34.079 structure of the database because I don't want to mess it up and I want it to be very fairly smooth tutorial for
01:01:39.420 you all so first things first we're going to create a database so let's create our database now this is going to
01:01:44.579 be called our app database so I mean this could be really anything we're just going to call it the app database right so this is where everything is going to
01:01:50.700 live right so let's just call it um yeah this is called an app database right up database doesn't really matter
01:01:57.240 let's go ahead and click create so inside of our app database we have our collections right now the difference
01:02:03.480 between this and something like Firebase is you can pre-define what the attributes are so that you protect what
01:02:10.020 is added into your database which is something that I actually really like okay so at this point now what I want
01:02:15.660 you to do is I want you to click on the collections and I want you to create a collection called to-do's okay so we
01:02:22.500 create a collection called to do's and inside of to-do's now we are going to go to the attributes Tab and here we
01:02:28.559 basically set up how are you know our attributes for each entry will look okay
01:02:33.780 so let's go ahead and do it right I can't believe I can't believe people ask if you're live Ryan I know man it's
01:02:39.059 crazy William says love life she's saying real coding and so much knowledge password thank you so much dude I appreciate you guys this is what it's
01:02:44.880 all about all right so we're gonna go to the title here so we're going to call this first attribute the key title the
01:02:50.099 attribute type so let's go ahead and we're gonna say this is string okay they can give it a value so the size sorry in
01:02:56.400 this case the title of each one I mean you can really play with this yourself we're gonna say 512 okay and we're gonna
01:03:03.240 say that the title is actually a required third so you see we've got some control here it's kind of a mix of no sequel but yet we have the SQL
01:03:09.960 constraints all right then we go ahead and add a few more we're going to add the status this will be like in progress
01:03:15.420 and done that kind of thing and in fact you can even make this an enum if you really want to so in that case what
01:03:21.720 we're going to do here is go ahead and do enum and this is going to be this is gonna say the following is gonna
01:03:28.680 say to do it's going to say in progress and it's going to say done these are
01:03:34.260 going to be the three states of our app right so now we're going to go to the and
01:03:39.839 we're gonna accept that so that's pretty happy right we're going to click create to us you can say it's required for that but I'm only yeah we'll see you I'm
01:03:45.660 going to leave as I'm required for now and then we're even gonna have an image now the image is going to be essentially
01:03:50.940 something which is not required but it will be something like a past value and that's basically going to be the storage
01:03:56.640 location once we upload the image to Upright cloud storage right so in this
01:04:01.740 case can be image it's gonna be a string as well in this case I'm just gonna give it a 512 and we're going to leave it for that
01:04:07.799 for now so now we've got our initial setup okay so what I want to do to get set up with this as I want to go ahead
01:04:13.619 and just add a few test things right something which allows me to go ahead and get started with things in a nice way so I'm going to go firstly start off
01:04:21.119 with create document right so sorry I'm completely gone blank yeah so I'm going
01:04:26.400 to go ahead and say create a document and the first one is going to be something along the lines of let's just
01:04:31.680 say take the dogs out for a walk select the enum see to do in progress done I
01:04:38.700 like that right very simple okay so let's go ahead and do that right now to do and then remember all of these by
01:04:46.260 the way we can go ahead and protect it in typescript in our code as well all right so let's go ahead and do the image
01:04:51.359 we're actually going to leave blank for now and we're going to click on next great and that's fine now for this tutorial I am not enabling
01:04:58.980 you know security rights whereas in this case I'm going to say update permissions I'm going to say we're actually going to allow anyone to create read update and
01:05:06.119 delete but you can add authentication and then protect based on the user who is logged in similar to how we do it
01:05:12.180 like Firebase rules other platforms and such for so you can have that functionality here as well right so now
01:05:18.000 we've got an example of a document take the dogs out for a walk it's a to-do right okay so that's the to-do's setup
01:05:25.260 for us right so now the next step is and that's our basically our our
01:05:30.720 structure of our our to-do's are going to be stored okay the storage bucket so
01:05:35.819 let's go ahead and prepare our storage bucket so our images that we're going to store inside of the app you see the images here for example these are going
01:05:42.299 to be stored in an image bucket so in this case just create a bucket called images all right so there's gonna be
01:05:47.940 images create the bucket and inside of here we're gonna go ahead and you see we're going to basically have let's go
01:05:54.420 ahead and show you if we're in the settings we're going to have permissions and any and in this case again as I
01:05:59.700 mentioned I'm just going to allow anyone to be able to create read write update and so forth but eventually you can go ahead and feel free to extend this build
01:06:06.240 add authentication and protect this not only when you're logged in you can modify yourself alright Sunny will never
01:06:13.140 will you ever stop sharing all these amazing Services your values endless no do I'm gonna keep going until until I
01:06:18.240 can't keep going anymore you can you can trust that I'm gonna be about right so you got me around for a while
01:06:24.780 so in this case we've got the images right here so we've got the images and database set up okay so let's get started with how we
01:06:31.000 No text
01:06:32.339 can actually go ahead and integrate this now so the first things first as I need to go ahead and take reference of the
01:06:37.740 database and collection IDs okay so in this case I'm going to go ahead and actually I'm going to hide something
01:06:43.380 here I'm going to show you how you can prepare it and then I'm going to hide me actually adding the values because I don't want to show certain values in
01:06:50.039 case we get spammed and so forth okay so in this case I'm just going to go ahead and pop it in there so the first value I
01:06:55.319 want you to know about is the next public database ID okay then we're going
01:07:00.539 to have the next public to Do's collection ID so where you get these from is very simple inside of app pro at
01:07:07.920 the top of the app database you simply copy the database ID and you can simply paste that in so that one is fine I can
01:07:14.579 share that inside of the to-do's we can click to copy or you can go ahead and click in and you can copy it here so
01:07:20.460 what I'm going to do is I'm going to copy this in and I'm going to paste this here and then I'm going to go ahead and
01:07:25.500 hide this a save on hide the environment file screen okay so I'm going to go ahead and actually show my face for a
01:07:32.099 second paste it in hit save I'm closing that file so now I've got all of my environment variables in the right set
01:07:39.059 right so we've got access to all of the variables that we need to basically make
01:07:44.460 a connection to when we fetch our information okay so next up is we need
01:07:50.400 to go ahead and handle the board logic right so I just need to figure out where I'm fetching again in my in my flow so
01:07:58.140 in this case okay I understand so this is where we start using some
01:08:03.420 form of State Management so what I want to do is when this board loads right so
01:08:09.720 when this loads I need to go ahead and essentially so firstly this is going to be a client component so this is a
01:08:15.780 client-side component because we're going to have an element of client-side stuff happening here okay so we're going
01:08:21.600 to use a user fact and if you didn't make it a client-side component you will not be able to use it
01:08:28.140 something like a use effect any hook you won't be able to use okay so at this point we've got the use effect and this
01:08:35.339 is where I'll essentially be calling something like get bored okay now this get board now this okay so
01:08:40.000 No text
01:08:42.660 this this describe our problem that we're about to face right firstly smash that live button where we're nearly at 700 likes so the problem whereabouts
01:08:48.839 face is I need to fetch the board there then I'm gonna need access to this all around my app so I need to basically
01:08:54.719 access this board information you know all around different places of my application okay now by the way if
01:09:01.620 you do get stuck on the use effect part we have a huge tutorial on this on the channel just type in sunnysango use effect on YouTube You'll see a great
01:09:08.219 tutorial which explains the rules of hooks how you can do use effect and so forth right it's going to help you change your life all right I promise you
01:09:14.040 when you understand use effect it's great okay so at this point we need something which is going to fix the
01:09:19.259 problem of allowing us to fetch the board here but use the board in any point of our app okay so this is where
01:09:25.859 you introduce something like State Management right so State Management Library typically include things like react context API or something like
01:09:33.060 Redux but there's a game changer now and The Game Changer is called the stand
01:09:35.000 No text
01:09:38.520 right this stand is is sick I actually I was told to buy it from a friend of mine but now oh my God it's it's it's really
01:09:46.439 good right it's so good somebody goes Sunny's Barber must be on fleek and I think thank you so the stand you if you
01:09:53.520 head over to the stand uh Google it you'll find this time you'll find this now it's literally this is the amount of
01:10:00.540 code you need to write a store like what it's crazy it's so good it's so good
01:10:08.100 like I'm not joking it it's so so clean all right and it's I like I couldn't believe it when I first saw it I was
01:10:13.380 like no it's not gonna be that good then it's surely nothing's that easy to set up and that good but yeah it really is
01:10:20.040 so we say npm installs the stand okay now let's create our first store so I'm gonna go ahead open my folder up I'm
01:10:27.360 gonna go here I'm gonna create a folder at the top level called store now the first bit of information I'm
01:10:33.179 going to install now typically what I always say is when you have something like State Management Library you should have different slices of your store so
01:10:39.659 that way you can contain different bits of information at different areas so first thing we're going to have is containing most of the information about
01:10:46.080 our app we're going to have something called a board store then we're going to have a modal store for keeping track of
01:10:51.179 if the users opened or closed a model so at this point we're going to open that up and we're going to Simply say Board
01:10:57.540 Store dot TS okay now inside of our board store we can basically go ahead
01:11:03.480 and start reverse engineering what that demo tutorial tells us so I'm going to go ahead and show you right here first
01:11:09.060 create store so I would I want you to just simply copy an example like this simply like put like that right then
01:11:15.480 what you're going to have is you're going to have a bit of a complaining issue where it's like oh no you need to set up and blah blah blah and do that
01:11:21.120 kind of stuff right so I'm going to show you how we can correct this because we're using something called typescript now they have got an example down here I
01:11:28.739 believe where it's typescript and it shows you how to do it so here you go so when you use typescript
01:11:34.739 you actually can go ahead and pass in the state but I will go ahead and make this a lot easier for you to understand so you don't have to worry about all of
01:11:41.100 that all right so first things first right let's go ahead and create our source we're going to say use
01:11:47.300 modal store I'll use Board Store sorry within the board so first okay then I'm
01:11:52.500 going to create an interface which is basically like a type definition we're going to say board state
01:11:57.659 and this is going to be everything that we basically contain inside of the board right the yeah board so in this case
01:12:03.900 we're going to have a few things inside of this we're going to have the board itself the board is going to consist of you know all of the information is here
01:12:10.199 the different columns with the to-do's inside all that good stuff so that's going to be the first thing this is going to be bored and this is
01:12:16.560 going to be of type board which we haven't got yet right I'm going to create that afterwards all right so this is gonna be out of type board
01:12:22.320 then we're gonna have the get board function okay so we're going to start off with these and this
01:12:28.440 is going to be a function which is not going to return anything okay so let's go ahead and just simplify this now so
01:12:33.900 we've got a board and initially this is going to be a uh let's just start with a
01:12:39.239 no value and I'll fix this afterwards okay we're going to say the getboard function is going to be a function that
01:12:45.300 does something okay so now you can see the arrows have disappeared except for this so we need
01:12:51.480 to Define what a board is right so in this case we need to go ahead and do command B and I'm going to go ahead and
01:12:57.000 No text
01:12:58.080 create something called a typings dot d dot TS file inside of here we can create
01:13:03.360 some type of typescript definitions right so inside of here I'm going to say typings.d.ts now here I'm going to say
01:13:09.360 interface now welcome to the world of map objects so I'm about to blow your mind if you've never used not my object
01:13:15.540 I thought it'd be cool to do that you can actually do this build probably simpler with an array like the the
01:13:20.580 library is built foreign things and change things and change an
01:13:26.100 array and map through it map through an object and in so many ways and yeah I want to make your life a little bit
01:13:31.320 difficult at times so you learn okay so in this case let's go ahead and show you the hardware right I could have done
01:13:36.600 this with a raise easily but I want to show you the harder so you understand how to do this because honestly you're
01:13:41.760 going to come to a point in your career where you need to know how to use a map right so we're going to say that a board will simply have a map inside of it and
01:13:50.280 a map you can basically specify what the key value pairs are so I'll explain this in just a second right now inside of
01:13:57.480 here you can have something like a string string right now if we were to do this all this means right is a map it's
01:14:04.020 very simple right a map consider it like a bunch of entries right so you've got basically a list so think of a list
01:14:10.080 right a really easy list each item in that list has a key and a value so the
01:14:15.239 key could be like you know sunny and inside the value could be like all the details about Sunny then it could be J
01:14:20.880 and then they could have all the details about J and I can yeah you could have whatever key you want and the best thing about map is which is kind of cool is
01:14:27.179 the key can actually be anything it could be an object it can be a hash it could be a string it could be a number it can be anything you want right so it
01:14:33.239 can even be an object the key right and the value can be anything as well and it's really cool because once you
01:14:38.400 interact with these it's quite efficient because you can just they get to this exact key see if we've got something in
01:14:44.280 there and that way you're doing a direct index check right so now what I want to do is I want to customize the two types
01:14:50.699 so the first thing is I'm only going to have three types of keys right the types
01:14:55.980 of keys I'm going to call them typed columns okay and this is going to resemble the to do the in progress and
01:15:02.640 the done so in this case the type column is going to be basically an enum so it's going to
01:15:08.280 be a to-do it's going to be either to do in progress or done and this is not going to have a space it's going to be
01:15:13.500 very simple so it's either to do in progress or done and the key is going to be a typed column so the key will only
01:15:20.880 be to do in progress or done ever done okay and then we're going to have a
01:15:26.100 column inside each value all right so this is a powerful part about typescript so let's go ahead and type out that
01:15:32.640 definition so in this case I'm going to say interface column and now this will have an ID and the ID
01:15:39.239 of that will be a typed column oops sorry type column so the ID of all columns will either be
01:15:45.179 one of these it'll be a to-do and in progress or a done and then inside of there we're going to have an array of to
01:15:51.900 Do's okay so we're going to specify an array of to-do's which we haven't specified what to do really is yet so
01:15:58.020 we're going to say the interface they have a to-do and I've defined this structure based on the response that you
01:16:04.860 will get back from upright that's why we've got a few dollar signs and all that kind of stuff here right so in this
01:16:10.500 case we can say dollar sign ID string and we're also going to get back
01:16:15.780 something called the created app timestamp and this is going to be a string we're going to go back there and
01:16:20.880 then we're going to have a few of our own values so we're going to have the title the status do remember we set this up we have the title we had the status
01:16:27.239 and we have the image and the image is actually you know it could be an image or it might not have an image right so
01:16:33.780 in this case some have images some do not have images okay and so forth
01:16:39.120 so in this case we've got our interface then we can go ahead and do interface image some people asking yo when should
01:16:46.500 you have an interface or a Time interfaces can extend pretty easily so you can say like a column extends a to
01:16:53.100 do for example and that's when you typically that's very simply put that's how you can do it right so if you want to extend something just use that but
01:16:59.460 yeah you can use either or I like to say in these situations use a type in this case for main objects I'm using
01:17:05.159 interfaces right so interface image you're super awesome sign thank you so much yeah I appreciate you for the image
01:17:11.580 each of the images are going to have a bucket ID which is basically going to be the ID of the bucket so remember that
01:17:18.000 image is storage container where we set up just a second ago and then each of them it's got its own file ID that's how
01:17:23.940 we locate the image okay and this image is actually going to be referenced here sorry I messed up the status as well
01:17:29.640 should be a typed column I went into autopilot right so the status of each studio is going to be either to do in
01:17:35.460 progress done the image itself is going to be one of these types so now you can see we've got a really nice set of type
01:17:40.620 definitions and this will protect us from making a lot of errors okay because it will scream at us if we
01:17:46.980 screw something up so now we've got the board right so let's go to our board store now now what
01:17:50.000 No text
01:17:53.280 I want you to do is inside the board store yeah what we do is we can initialize the board when we set up the
01:18:00.780 used board store so this is basically the type definition and all we do here is we say create and we pass in our
01:18:06.780 board state right and then they will know if you're setting things up correctly so now I'm giving it a value of no to begin with and it's saying whoa
01:18:13.980 whoa whoa you cannot do that because that's not a board state so all I'm going to do here is Define something
01:18:19.140 which satisfies what our board is so in this case we have the columns filled and it needs to be a new map and
01:18:26.640 remember what I said guys a map is a typed column and a column type right so
01:18:32.100 the key is a type column the value is of column type okay and then we're just gonna invoke it so this will basically
01:18:39.060 go ahead and create a new map for us with type column and column inside okay good stuff now
01:18:46.020 then we're going to go ahead and create a function for getboard this is going to be an asynchronous function inside of
01:18:51.960 here I want to go ahead and get the board so I'm going to say get constant board equals await
01:18:58.380 yeah and this is where I basically perform a fetch function okay so in this
01:19:03.960 case I need to do two things I need to fetch it fetch the information but I actually want to fetch all of the
01:19:09.239 to-do's and I want to group them so I want to actually group them by the different types okay so in this case I'm
01:19:16.199 going to create a helper function called get to Do's grouped by column and what
01:19:22.560 will this look like right what the hell would this look like well the goal here is that eventually we will have
01:19:27.840 something like this we'll have something like a map so it looks something like this okay that's horrible what am I
01:19:33.300 doing um here so we have this okay ignore me
01:19:38.940 okay that's not working yeah I'm gonna just hack this away but okay so say we've got this so one of our keys for
01:19:44.640 example will be to do and then we're gonna have each of the to Do's inside of
01:19:49.739 this this uh field right so we're gonna have all of our to-do's inside of it right and then it's going to be grouped
01:19:56.400 accordingly so you've got your to-do you've got your in progress and so forth so this one will be in progress and so
01:20:01.679 forth and they should all be grouped accordingly okay and then that way we can do the information that we want to do and we're basically going to pull
01:20:07.500 from our database to handle that information right guys we're so close to 700 likes come on let's get it to 700
01:20:12.659 destroy that like button let me hype the music up a little bit more so that way we can get really into it into his arm
01:20:18.540 all right so get to do is Group by column let's go ahead and do so and what I like to do is create a lib folder
01:20:25.260 which is for utilities friends can we create a folder in the top level sorry so top level folder lib lib is like util
01:20:33.060 folder same thing right and we're going to say get to do's grouped
01:20:40.320 Group by column dot yes um done okay and now what I want you to
01:20:46.260 do is go back to board store eventually this will give us back a value and then we're going to use
01:20:51.480 something called set board and what set will do is it basically sets the global
01:20:56.820 State here like so okay so it sets the global state for that value so in this
01:21:01.860 case it sets that that piece of information then you can pull it wherever you want okay so let's create this function
01:21:08.159 so I'm going to go ahead and go to my get to Do's groups by column
01:21:13.800 and now we're going to go ahead and set things up so the first thing I need is to basically create a function so we're going to say x more const get to Do's by
01:21:21.780 column right and then we're going to go ahead and this is going to be an asynchronous function which takes no
01:21:27.000 arguments okay cool stuff easy as yeah fairly straightforward so far now I need to
01:21:33.360 pull from the database so you see the database that we set up earlier so this database right here
01:21:39.480 I need to pull the information from here guys right so I need to pull all of that information into how the hell do we do
01:21:44.580 it well we made our life a bit easier earlier we can simply say const p and p
01:21:49.980 is basically a promise so we're going to basically return all the data let's call it and we're gonna say await right and
01:21:55.739 all I do here is I type in databases and we've previously set up our databases through our upright.ts file so I'm
01:22:02.340 importing that like so then I say dot list documents now here it's really
01:22:07.500 straightforward all I do is I pass in the database ID and the collection ID
01:22:13.260 you can even pass in queries and so forth afterwards and you can fetch the information just like that so now what I
01:22:19.500 can do is I can go ahead and say process.environment process.environment.view no way when I
01:22:25.080 use the view all right so I'm gonna go ahead and do this so I'll say process the environment next public database ID
01:22:30.179 then we go ahead and hit color and then I'm going to do the same thing for the collection ID and we set these
01:22:35.940 environment variables up earlier okay next thing I want to do is I simply want to console log the data so that way you
01:22:42.120 can see what the hell is going to be on the screen well actually you're not actually going to see this right now because this won't actually be on the
01:22:48.239 screen so what we could do to test this is we can go to page we go to board we can actually go ahead and just um just
01:22:55.199 put in hello uh we can sort of just comment this out for a second
01:23:00.840 and then we can call our get board function so I will show you how we can actually set that up right now so we can
01:23:06.420 actually test out what we're doing right so in order to get access to our board functions like get broad all we have to
01:23:08.000 No text
01:23:12.420 do is very simple hook right we just say const get bored equals use Board Store
01:23:20.940 right and have I exported it I think I have no I haven't okay
01:23:26.460 um I believe we just got to do a simple the export here which is why I have messed things up yep so we should do
01:23:32.699 export my bad export const use board stuff there we go and we're actually
01:23:38.699 gonna even go a step further so yeah we can import that there we go and then what that does is it gives us the state
01:23:45.000 and then we can go ahead and say State DOT and then you see we get the board or get board so now I'm mapping this to a
01:23:51.480 available function so in this case we can go ahead and pass it now because we are using get border we actually have to include that as a dependency but in this
01:23:58.260 case we do that now we should see is we get this right now you can see
01:24:03.000 No text
01:24:03.600 we're actually getting an error right now because we're not we haven't defined the get to Do's Group by column so let's go back into our Board Store like so and
01:24:11.159 I want to go ahead and import our helper function okay and this is obviously going to complain because we haven't got
01:24:16.500 the right value so we're just testing right now okay so at this point now inside of my get to Do's I should see
01:24:23.100 some data here logged out on so somebody says is this going to get executed on the server well actually
01:24:29.340 um we're instead gonna go ahead and I'll drop it a little bit yep no worries the
01:24:34.440 background music so in this point you can see the um we have the get to Do's Group by
01:24:40.500 column mine so this we go here and we simply are logging out so this is actually going to get executed
01:24:46.739 um on the client so you see here we've got the object and by the way this error that you're seeing I've got um oh no
01:24:52.560 that's actually fine to be honest for now that's because we've got that error that we just had set up so yeah there
01:24:57.659 you go so total and you can see this is what came back guys look at this take the dogs out for a walk hey that's what
01:25:03.719 I'm talking about sick right that's exactly what we wanted and you see what I mentioned before there was there was
01:25:09.540 actually more properties so you can feel free to add that in but I wanted to you know I just kept it very simple but you can even add in like permissions updated
01:25:16.260 that collection ID and so forth into your type definition site where you can be sure that you get it back right and I
01:25:21.420 reckon you can even go as far as to add get those exact definitions from
01:25:26.940 um the guys over Opera as well so I just didn't go that extra step right but you can't all right so I want to show you a
01:25:33.000 bit of manual stuff as well so at this point we've got the documents flowing in which is great right so at this point we've got the data now we need to do
01:25:39.540 some core manipulation to you know mess with the data that we needed so what I'm going to do is p dot documents so the
01:25:45.719 data here that comes back what I'm going to do is I'm going to say const to Do's equals data dot documents okay so that's
01:25:52.620 all my to do is now so inside of here this list will be all my to-do's easy as
01:25:59.820 now what we can do is if you actually go ahead and highlight over this models.document so you can actually extend models.document and then if you
01:26:08.400 really wanted to you could do it your typing that way so you could actually go ahead and do something like this so interface to do
01:26:15.239 extends model document and now your to-do class
01:26:20.760 actually has model document inside of it as well so if I was to do something like const a
01:26:26.520 um to do equals something like this then you can go ahead and see for yourself that to do we'll actually have a DOT um
01:26:34.620 the stuff that we wanted inside of it oh actually it didn't do it properly but yeah anyway I need to import it and do
01:26:39.900 that stuff properly I just kind of Rush that step so in this case models.document you would have to pull in correctly but anyway you could do
01:26:46.139 that right so heading back over to our yeah yeah let's carry around so
01:26:52.380 first step I want to basically map through and get the all of the so right
01:26:59.040 now we just have this list right there's no coordination here so I want to basically rearrange this this so it'll
01:27:06.179 become a key value pair where all the statuses are grouped together so all the to-do's all the end progresses all that
01:27:12.420 good stuff so I'm going to show you a nice little map function and again if you find this confusing then be sure to
01:27:18.120 join zero for zakira or just check out some tutorials online but the point is we have loads of tutorials in the course that will explain how to use things like
01:27:24.659 the map reduce functions and so forth right so I'm gonna have a quick little water break and we're doing amazing for
01:27:30.000 time right now we have a lot of work to do so I if you're finding this you know crazy fast then don't worry you can just
01:27:35.699 take your time afterwards watch your replay all right
01:27:41.340 that's my first water break in an hour and a half that's crazy all right let's keep going guys this is
01:27:46.739 absolutely crazy if you still have 300 people across platforms incredible stuff right literally 700 likes inbound
01:27:52.920 somebody somebody get it there somebody get it somebody likes let's go right so at this point we're going to say const
01:27:58.860 columns right const columns equals to Do's dot reduce and reduce is basically
01:28:06.060 an accumulator function so what it means is you basically take you know your array and you're going you're going to
01:28:11.460 reduce it down into another form so even like let's just say a very simple example you've got an array of numbers you reduce it down into a number for the
01:28:18.060 total but we're going to do a bit more of a complex object right so in this case we're going to do a reduce down to
01:28:23.219 a map okay so you're probably wondering oh I don't know how that works I know you do that right so in this case what
01:28:28.679 you do is every single time you iterate over you get a bunch of things so the first thing is you get something called
01:28:34.380 an accumulator value this is going to be the value or the previous value basically that's gonna it's gonna rack
01:28:40.380 up and build up so this is going to be the map object right it's going to slowly grow and then each time we map through we get the to do itself
01:28:47.219 okay so now inside of this function we can do a few things so basically oops
01:28:54.060 look at that so after all of this we do a comma we can give an initial value and
01:28:59.400 this is the initial value that we want to start is is with a map okay so this map is going to have again a typed
01:29:05.580 column and you can I guess you could just say you know you could actually use the the board column the Border
01:29:11.280 definition if you wanted but in this case I'm just going to say yeah new map with type column and column right so in
01:29:16.860 this case now the accumulate value starts off as a new map right so what we can do now is we can access it we can
01:29:23.520 say if there is no so we can access the um the map and we're going to say
01:29:29.639 get to do status so basically what this is doing is this is an empty map right
01:29:35.880 now so it wouldn't have anything in there so this would actually be satisfied basically it would find this first to do and it'll say is there a
01:29:42.179 to-do I might not be like no there is no to do right so in this case what we're going to do is we're basically going to
01:29:48.060 create a key inside of that map so we're going to say account.set
01:29:53.940 to do dot status so what I'm doing here is I'm basically setting the first key
01:30:00.480 inside of that right so I need to say yes and then we give it the to-do's itself so in this case to Do's is an
01:30:07.139 empty array so what we're doing is now the end goal would be you have something like this so you would have something
01:30:13.440 like a object which is going to have I'm not sorry a key value pair so every single one is going to have that for
01:30:19.800 example to do and then inside of to do you would have key value pairs so loads of key value
01:30:25.020 pairs here and then for example this would be all of your like I'll show you after this I'll map it out right it'll
01:30:31.380 be very easy to understand right but this will basically grab all the to-do's together and it creates an empty to do and then once you've done that step once
01:30:38.400 the next time it comes across the status with to do we're simply going to push it inside and I'll show you how to do that
01:30:43.620 all right so here we say ace account or like the accumulator dot get
01:30:48.900 to do dot status right to dot status to do dot status I'm going
01:30:57.540 to say that it is there because it should it will be there because we've literally would have created it here and then we're going to say dot to Do's so
01:31:04.020 it's going to access this empty array to do this dot push and then what we're simply going to do is push in we're not
01:31:10.860 going to push the entire to do in but instead I'm going to create an object out of it right so we're going to say that the ID is pushed in so to do ID the
01:31:18.900 Creator that if I do control space you can actually see we've got already got our perfect functions here as well as in
01:31:24.360 our perfect attributes so we're going to go ahead and add in the title as well so that to do title we're going to add in
01:31:30.540 the status which is going to be the to-do status this again is being pulled in from the
01:31:35.820 back end right now the final one is actually interesting so what I'm going to do here is as I'm pulling it in I'm
01:31:41.880 going to do a nice little spread trick okay and what we're going to do is we're only going to fetch the image here in
01:31:47.699 this object if it exists from the response okay so the way you do this is
01:31:53.040 simple you basically say spread right and then you have a condition so now this is exactly this is actually perfect
01:31:59.340 yeah we say to do image and and image to do image so basically
01:32:04.380 what we're doing is we're saying if the response that we're mapping through has an image because remember some things may not have an image inside right then
01:32:12.060 we're going to go ahead and append this inside so basically imagine it's doing this and then it's spreading it so it
01:32:18.659 basically pops it so you're basically taking this if there's an image you're taking it and adding it there like that that's exactly what's happening if
01:32:25.139 there's an image okay so in this case this is how it works now when we push the information into the database I will
01:32:31.800 be storing it as a Json string of wired value for the image stuff I'll get to that later but for now when we do
01:32:37.320 eventually pull it we're going to need to pass that information back into its full object okay so at that point we
01:32:44.820 simply go ahead and close things off right and then what we do is we return the accumulator function
01:32:52.260 okay so now with all that done what we can do is we can save and I will show you if I simply log out
01:32:59.340 The Columns now what you'll see is we go from this horrible looking thing right
01:33:06.659 the response to a map and you can see look the map has a to-do entry and you
01:33:12.120 can see the to-do entry has one value inside of it which is the record and it has a value with the to-do's inside and
01:33:18.840 then it has everything in so what we've done is we've transformed data so we've taken an array response and we've
01:33:25.980 transformed it into a map and I'm going to blow your mind now by adding another to do I'm going to add a few to-do's
01:33:32.040 here and show you just how powerful this really is so crush the live stream
01:33:37.260 I'm gonna say this is in progress because that's exactly what we're doing because we just broke 700 likes that was
01:33:42.600 smooth don't even realize like like that video now right and then we're going to go ahead and do next
01:33:49.440 great and we're gonna do another one so we're gonna say uh create document and I'm going to do
01:33:56.580 another thing here just like so I'm gonna say um let's just do
01:34:02.780 Finish the build Finish the build and this one will be in progress right so
01:34:08.699 we've got two in progresses one task so that way we can test this out so create Okay cool so now we've got a bunch of
01:34:13.980 stuff in there so if I refresh now you will see that we have a map of two right
01:34:19.260 but I'm going to show you what we actually ended up transforming here so as you can see this is the the app and
01:34:25.320 then what I'm going to do is I'm going to first console log the response so if you see now this is the entire response
01:34:30.719 that we get back so I'm going to go ahead and refresh so the first one is the entire response we get back you see look this is literally what we got back
01:34:36.300 right it was just a bunch of like to Do's from the database all right and
01:34:41.940 there's no you know there's no actual mapping here of really like what status is this and what status is that now what
01:34:48.000 I've done is I've grouped them all together and I've got this nice map so you see my first entry the key is to do the second
01:34:54.360 is in progress and then what we're doing is we're grouping them so now you see the value here is an array of two and in
01:35:01.620 this one there's one array for the to do and then in progress we have two to Do's
01:35:06.719 so if I go inside now you can see I can see all of the to-do's inside so this is called transmit that transforming data
01:35:12.420 and it's really important when people ask about data structures and algorithms and stuff like that this is basically how your you should be you should have
01:35:18.600 an understanding of how to transform data and don't worry if you don't again this is why I have a lot of this stuff
01:35:24.239 inside the course that's where I can teach you at like in-depth level so zero to force that curl we do this we teach
01:35:30.120 you and inside the coaching course and module content we have a mixture of ways to get you to understand this in a
01:35:36.480 really Crystal Clear way so all of this is fairly straightforward okay so absolutely killing it let's carry on
01:35:42.600 so at this point now we have our columns okay now I need to do one more thing
01:35:47.699 right I need to basically say okay now we always want to have all three columns
01:35:53.940 shown but what if I for example now I've got to do and I've got in progress but I don't have anything in done okay so what
01:36:00.360 I need to do now is I basically I'm going to create a little function here which is going to ensure that we always
01:36:05.820 have you know each of the The Columns where they're empty to do array inside
01:36:11.040 of it so it's always going to have a populated empty to do array so what we can do is I'm going to go ahead and get rid of
01:36:17.159 this now we don't need our comments here and I will show you how we do so if the columns doesn't have an in-progress to do or done add them with empty to-do's
01:36:20.000 No text
01:36:23.880 right because what happened is what might happen is you delete everything and then you need to go ahead and do it so let's go ahead and do this now so I'm
01:36:30.179 going to go ahead and create an array of all of the different typed columns so in this case to do in progress done
01:36:36.719 okay and then I'm gonna go ahead and loop through them okay so I'm going to say for each so I'm going to do an old
01:36:42.480 school map here you can do either or I'm going to say for each column type
01:36:47.880 some type of all of the column types we're going to map through you can do a four each you can do whatever you want so we're going to say if there was an if
01:36:54.960 there was no and that's perfect actually that's exactly what we wanted so that's exactly what I've got written as well so if there is no column so basically in
01:37:01.679 this case remember we had it to do we had it in progress but it wouldn't have found it done so it would have basically
01:37:06.900 satisfied here when it hit done when it looped through then it will basically set the column so there is now a done
01:37:13.139 and then it will show the uh to do it will set a to-do's that way when you map through it won't it
01:37:19.380 won't break it will be it will be able to render out that column all the time okay so now that we have this in place
01:37:25.440 what we can do is the final step is I always want to show them and this is this is kind of up to you now all right
01:37:30.960 in my tutorial I always want to show to do in progress done then you can rearrange it but when you whenever you
01:37:36.179 come on the page I always want it to be in to do in progress done I always want it in that order okay so I'm going to go
01:37:41.940 ahead and sort them in that order right so in this case this would have manipulated that array previously so now
01:37:47.520 we've got all of them so if I was to even console log The Columns now you'll find that we have a always no matter
01:37:53.280 what we will have a map of three all right so let me refresh you will always have a map of three yeah so now
01:38:00.179 even if you've got done you see inside I've done we still have a to-do array of zero so now we've always got all three
01:38:05.480 perfectly like so okay so this is exactly what we wanted now after the columns we're now going to
01:38:11.000 No text
01:38:12.300 sort the columns right so I'm going to sort them based on the initial order that you see here all right so sort
01:38:18.120 columns by the column type so I'm going to say const sorted columns
01:38:23.159 equals a new map and what I'm going to do is I'm basically going to generate so this is going to be a sorting function
01:38:29.040 again we cover all of this inside zero to full stack here because it can be a little bit scary right the first step I
01:38:34.560 want to do is I want to convert my column entries into a um so there's two
01:38:40.679 ways to do this right if you want to convert your end your your map you can do something called dot entries which will give you all the key value pairs in
01:38:47.520 an array so what we can do is we can create an array like so yeah or you can say array from there's two ways you can
01:38:53.760 do you can say array from or the real es6 way is you basically create an array like this then what we do is we spread
01:38:59.639 out the columns which basically means get all the key value Pairs and create an array from it alright so now what
01:39:06.179 it's done is is it's got all the key value Pairs and then they spread them out and then tell you what that's why I didn't do it last time yeah so array Dot
01:39:12.179 from columns dot entries all right this actually is a bit easier to understand I guess as well right so
01:39:18.300 you've got we're creating an array from all the column entries and this will give you again all the key value pairs
01:39:24.000 uh in an array format right then what we can do is we can use all that we can use array sort of mapping functions to go
01:39:30.300 ahead and do all of our stuff these are all array functions now so now we can say sort now with a sort what you do is
01:39:35.520 you get a B so a b is basically the comparison bar now A B refers to every
01:39:40.560 it will Loop through two items at a time and every single time it does the first time is a second item is B and you can
01:39:46.199 do a comparison where you basically say if this is that and blah blah and then basically you can move around you can
01:39:51.900 sort the objects in whatever way you want the what I'm going to do here is make life very simple I'm not going to do the curly brackets
01:39:58.260 we're going to do something called an implicit return so basically I'm doing parentheses and then because it's a one-liner I'll get rid of the
01:40:03.719 parentheses and what we do is we simply say index of so column types so this one
01:40:09.300 right here if the index of this right so the first value this is
01:40:14.580 the key of the first value is like basically this is doing an um like a string check so it's basically
01:40:20.880 checking if this value is less than this value and so forth and basically what it's going to do now is it's going to sort them in this order so if they're
01:40:28.260 not in this order it's going to rearrange them to hit this order okay so now for example if it fetched all of
01:40:35.100 them in different random orders now or you moved them around it will always fix the order when it refreshes okay and
01:40:41.820 then what we simply do is we say const board so we get the entire board as a
01:40:47.219 board object we go ahead and a board object simply has columns inside of it and then we give it the sorted columns
01:40:53.460 okay just like so and then we return the board
01:40:58.620 so this has been our helper function this is our helper function which gets us all of our stuff that we want so now
01:41:04.080 this will always get us all of the data and make sure that we always have those key value Fields populated with the
01:41:10.139 to-do's empty if there is nothing inside of it to do so we hit save now go back to board saw and you'll see it no longer
01:41:16.199 complains because it is getting a board back that's great now what we can do is we
01:41:20.000 No text
01:41:21.360 can go back to our board.tsx and over here what we can do
01:41:27.120 is we can control log the board and you can see now oh we don't have the board how do I get the board now how do I get
01:41:33.840 the board from the original Board Store well I need to do you could do the same line again and do you know something
01:41:40.139 like this and board dot state DOT board I guess you could do that but that's you know who wants to do that
01:41:47.040 when there's probably an easier way right so in this case you can actually combine so every time you want to get something more than one thing from the
01:41:53.699 same board store or same store in in the stand you can make an array and you can basically say I want the board I want
01:41:59.880 the state and so forth so in this case I'm on the board and I want to get bored and then all you do is on the return you
01:42:05.100 simply make that an array and you simply say state dartboard and now you can basically have this
01:42:11.940 beautiful set of uh we've got to save the HTML now you can basically pull in multiple things get it back and then we
01:42:18.119 come to log the board just to see if we're actually getting something back simply hit refresh and just like that guys now we have our
01:42:24.960 columns into initial arenda with zero because it has to fetch then we do the columns and as you can see we've got our
01:42:30.719 columns we've got our arrays being pulled through so now we have the columns to map through the objects that
01:42:37.500 will be shown on the screen okay so let's do it yes you can you can
01:42:43.980 do it loads of different ways again you really mess around and do whatever you want I'm just showing you a way to do it
01:42:49.380 right so now we can uncomment this out and we can carry on from the drag and
01:42:54.600 drop perspective so let's carry on with this so we've got the div inside right remember we are now
01:43:00.960 we're going back to the beautiful drag and drop example that we were talking about earlier so let's head back over to
01:43:08.040 this example and as you can see we've got this situations we've got the drag drop context then we've got the
01:43:14.760 dropable Zone which is this then we've got the draggable elements inside okay so we've got this thing called a render
01:43:21.239 prop so in this case we're going to render out uh every time we run through it you also get something called snapshot so here you can use something
01:43:28.139 called snapshot and that's basically if you're dragging you can change the color and so all that kind of stuff I'm not gonna go too far into it but now what we
01:43:34.320 can do is that map so that column that board sorry what we can do is we can
01:43:39.480 actually say array from right because remember we can't
01:43:44.699 actually simply map through a map as in like literally you can't Loop through a map easily you have to change it to a
01:43:51.900 bot so in this case you say board board columns uh entries so we go through all the
01:43:58.320 entries and now we can map right so now we can say map and then what we can do is Insider there
01:44:04.920 remember you get key value pairs so it's not going to just be like this it'll be like it won't be like something like that it'll be your key value Pairs and
01:44:11.280 what we can do is we can do something in es6 called destructuring so we can destructure the ID and the column and
01:44:17.820 then the second argument will always be the index okay so in this case it's always going to be
01:44:23.520 a second argument there and what you can do is you can wrap the entire thing in parentheses like so and then you have an
01:44:28.619 arrow function and then you can return something that you want to Loop through okay so again just take your time with
01:44:35.040 this step and understand what's happening with converting the board columns into an array or creating an array from them we're then mapping
01:44:41.040 through all of the key value pairs I am destructuring so that way I've got the ID which is a type column and the column
01:44:46.739 which is a column remember that map it was always type column column then we get the index which is basically a startup with zero one two three four as
01:44:53.520 it Loops through then we're going to map through a basically output a column so in this case if I was just to do an
01:44:59.820 example here and do uh let's just let's just start into it let's just do a column okay so this is where our column
01:45:05.639 is going to go now the column itself we're going to build right but it takes a few arguments it's going to take the
01:45:12.480 ID and then we're going to pass through a couple of variables ourselves so we're going to have an ID that we actually
01:45:18.300 need to set it's going to have the to Do's itself which is column dot to do's and then it's also going to have the
01:45:24.719 index itself okay so in this case that way we basically we need to go and create that right now
01:45:31.139 before we hit save and continue on we need to ensure something happens so this div here whenever we have a dropper ball
01:45:37.920 right the first child of that droppable and we when we actually put out something we have to go ahead and spread
01:45:45.179 certain props so what I can do is I can say dot dot dot provided.droppable props and then we
01:45:52.260 also have to do dot dot dot provide um sorry we have to do reference equals
01:45:57.320 provided in a ref okay and this is basically how the drag and drop is
01:46:03.060 knowing what the hell is going on okay so for this column now this will eventually have a arrangement of grid
01:46:10.800 right so we're going to have it on a mobile view be one grid so literally be all these will be stacked up on each other like going down and then on
01:46:17.280 anything past a um I guess a medium screen it will be a grid of three okay so this is where we Define that so
01:46:23.699 here we'll say class name grid grid columns one
01:46:28.800 on a medium screen you'll say grid columns two uh three sorry
01:46:33.840 and then between all of them we're gonna have a gap of five the max width will forever be a 7x on we want to center it
01:46:40.320 all right so MX Auto there you go hit save cool this is complaining because
01:46:45.360 you need a special function here called handle on on Dragon right so here let's just go ahead and satisfy this quickly
01:46:51.360 we're going to say on drag end and we're simply going to create a function called handle on drag end so over here
01:46:58.980 underneath the use effect I'm going to say const uh handle on Dragon right and
01:47:04.500 this one is basically gonna have something called a drop result so this
01:47:10.020 one right here if you in case you're confused if you hover over this you'll see on drag and responder but if you do
01:47:15.060 a little trick here and do e Dash you'll notice you get the type definition you can paste that type definition simply
01:47:21.840 import it like so and then you can get rid of the E so that's a nice little typescript trick if you didn't know so
01:47:27.480 that'll get rid of that so I'm not going to show you we're going to build out this afterwards now that's basically what happens when you let go of a drag
01:47:33.900 and drop operation okay so right now our app is in this weird State because we
01:47:39.659 haven't built the column we've got a lot of things overhanging so let's build out each of the columns now right and this
01:47:42.000 No text
01:47:44.760 is going to be the dropable and draggable elements and so forth right so I'm going to go ahead and get that done so again we've got a lot to build so
01:47:50.820 we're going to move fairly fast so again this is going to be recorded so feel free afterwards to rewind take your time
01:47:56.760 and go through this afterwards rfce okay so now the column
01:48:03.119 uh it's almost a two hour mark very good and we've also still got 250 people what the hell let's get the likes up to 800
01:48:09.900 guys the goal is a thousand today I believe we can do it right so inside the column now
01:48:15.239 we're going to start off by saying that this is a draggable right remember if we
01:48:21.300 look again at beautiful DND this is going to be one of the columns is going to be draggable right so we were
01:48:26.639 previously in the droppable which is makes sense and then the column itself is going to be a draggable which makes
01:48:32.520 sense okay Dragon Ball like so okay now inside of here we have the same
01:48:40.500 logic we have it provided and this will have a render right so this is going to render out a div
01:48:46.619 and inside of it we basically do a bit more stuff so this is basically inside of here we're going to render our dropper ball
01:48:52.920 render dropable um this is going to be the internal droppable
01:48:59.040 um section so another nested dropable section for the to Do's in the column
01:49:05.580 okay so that's basically what's gonna happen there oh thank you so much for zad you got the coffee on me I
01:49:11.580 appreciate you did awesome stuff and again welcome to everyone in the news tuning in I see a bunch of new names awesome stuff right so the Dragon Ball
01:49:19.020 now we passed in a bunch of props right when we did this you see these props key ID
01:49:24.300 and so forth so let's go ahead and firstly set up our props so it's in the correct way so those props were as
01:49:30.659 follows it was the ID it was the to-do's and it was the index all right so we're
01:49:35.940 going to Define these type definitions like this we're going to say type is props and then we're going to go and say
01:49:42.300 the ID is a typed column so you see now how typescript's starting to protect us right we've got lots of protection
01:49:47.460 happening here so we're not you know messing up on in in any shape or form it's going to help us correct errors beforehand and then we're going to say
01:49:53.880 this is going to be a type of to do and then we're going to say the index is a number cool right now we pass in our
01:50:00.300 values so this is really nice and then what we do is remember your first child of Your
01:50:06.719 Dragon Ball element should be passing through all of the required props so
01:50:12.000 this one will be dot provided draggable props and then we've also got something called drag handle props that we have to
01:50:18.300 pass through as well okay and then we've got the reference so in this case it'll be reference
01:50:24.179 um there we go Rosanna says I'm digging the podcast I love that I'm glad you're enjoying we have some awesome ones
01:50:30.119 coming up right we have the provided dot NRF so that allows us to that basically tells
01:50:35.159 the drag and drop Library what the hell is happening okay then we basically have to render the dropable to-do's so that section okay so
01:50:43.560 now we're going to do the same essential nesting as we did here but this is going to now be for the next section which is
01:50:50.820 going to be the internal bit so what we did just now before we set up a dropables on for the entire thing and
01:50:56.040 then each of the columns were a draggable element right and then what we've done is we set up a dropable zone
01:51:02.699 for the entire internal column and each of the to do cards are going to be draggable elements inside right so you
01:51:09.840 see how we're working with this now okay so inside the column let's go this is
01:51:15.600 going to have a few things it's gonna have a draggable idea we're going to use the ID that we passed through to do so it's gonna have an index as well and
01:51:22.560 we're going to pass in the index these are the two required props now let's start rendering out the to-do's dropable
01:51:29.159 zone right so here we're going to say droppable and this dropable ID is going to be the index
01:51:36.480 so the index dot to string okay so it needs to be a string value so
01:51:41.520 we can say index and this is going to be type of card like so let's render that out there we
01:51:47.280 go and then we basically do the exact same thing we have a provided oops this is gonna be a jsx block
01:51:54.239 provided and then we basically wrap this up oh God damn it yep I remember I said
01:51:59.760 you also get snapshot oops snapshot so remember when I was
01:52:05.040 dragging one of the cards over to another one notice how it went uh green
01:52:10.320 every time it went like went over it went green what we were doing is we were using a snapshot object to go ahead and
01:52:16.500 tell when you're dragging over a certain element and I'll show you how we do it
01:52:21.600 basically create a div inside anytime that you have this provided you have to pass down and connect that div so what
01:52:28.199 we do here is we say dot provided dot droppable props we again connect the reference
01:52:34.800 trust me once it's set up it's actually really good and it's it's honestly so cool especially on your project tab
01:52:40.560 and then we're going to use a bunch of class names now what I'm going to do is I'm going to give each of the cards or the background of the card a bit of
01:52:47.159 styling right so I'm going to do first thing I want to have some Dynamic values here so I'm going to do back ticks so notice I'm using back ticks I'm going to
01:52:53.880 say padding bottom of two I'm gonna say that he should have a few things like panning of two all around
01:53:00.179 um rounded 2XL so that's kind of overwritten that I guess empty round into XL then we're
01:53:06.960 gonna say shadow small now I'm gonna have a dynamic value and now here what I'm going to do is if the
01:53:12.900 user is dragging right so now I can just dollar sign Open brackets oh sorry we've already done that so I can say snapshot
01:53:19.139 dot is dragging over okay and if it's dragging over the background will turn
01:53:26.040 green yeah so this is really nice how this is going to work and then we're going to say if it's not Dragon over it's going
01:53:32.580 to be a background of white with a 50 opacity so notice how the background is normally a 50 see-through kind of glass
01:53:40.500 View and as you drag over it's going to turn green on the field that you're dropping it over
01:53:46.920 okay so then we've got that set up okay the next step is we're basically going to
01:53:52.440 Define The Styling for the to do and so forth okay so now what we can do is we
01:53:57.600 can say we have a H2 and inside of this H2 I'm actually going to have the ID itself so in this case
01:54:04.619 I'll show you how we do it we say the ID now you'll start to see inside of our app is if we go inside and we refresh we
01:54:12.000 should okay so the column is not defined we haven't saved this file let's save this one let's go over here now you can
01:54:17.940 see look we already have some stuff happening so it's not working yet but it's almost there right you see how
01:54:23.400 things are happening but it's not it's not saving and things like that right but we're actually getting to a point where something's happening okay which
01:54:29.639 is good it's very good right so now what we're going to do is we've got the ID so forth this looks ugly I
01:54:36.540 wanted to say to do in progress the correct way so what I'm going to do is I'm going to create a mapping function up at the top simply go ahead and say
01:54:43.080 const ID to column text okay and this is basically going to have
01:54:49.440 a set mapping of the key is going to be typed column and it's going to Output a
01:54:54.540 string and what I mean by this is it's simply going to be an object of mappings if it's easy to do it should write to do
01:55:00.000 if it sees in progress it should see if it says in progress it should say in progress if it says done it should be a
01:55:06.780 capital D done now what I can do is I can simply pass this through and say just like that and
01:55:13.739 now this will change to to do in progress done that's a lot nicer I prefer that right so now this is this
01:55:19.560 was already getting there it's pretty pretty nice right so we've got the ID to column text and then I want to have the length right so
01:55:26.880 I want to have you know two four three however many to Do's are in there I want to see how many to Do's are in there so
01:55:33.480 now what I can do is I can say to do's oops let's just have it
01:55:39.300 um let's do it in a way where I basically say I'm gonna span an element here so I'll spend
01:55:45.719 I'm gonna say uh to Do's dot length okay so in this case that we got one to
01:55:51.600 do improv uh one to do in the to do column two to Do's in the in progress column right all right so then we're
01:55:58.560 going to go ahead and start this out we'll say text should be gray 500 background should be gray of 200.
01:56:06.119 then we're going to say round it off surrounded full font should be normal
01:56:11.219 we don't really need that panning X I have two padding one of one and the
01:56:17.400 text should be small there we go attack should be small hit save and now we've got these nice little circles okay and
01:56:24.300 I'm simply going to make the two children inside it be flexed justify the space between them
01:56:30.000 um I'm gonna make it font should be bold the text should be extra large and the
01:56:35.460 P2 there you go and the reason why I did yeah that's why so here I did font normal
01:56:41.340 because I don't want that to be bold for normal and just like that look at that already
01:56:47.520 getting there all right looking pretty decent so far and you can obviously customize that
01:56:53.580 however you wish change it up yeah planning y should be tired one that's it I wanted a bit more circular
01:56:59.159 that's it looking good hey nice all right and you see how it look it's in this is exactly how we wanted it to look
01:57:05.880 right So eventually it'll be like really sort of clean now notice how they're sort of swiping all over the place is
01:57:12.000 horrible right this is because we haven't set things up correctly yet right once it's done trust me I look
01:57:17.460 really good okay so now what I want to do is I want to go to the
01:57:26.159 um so underneath my H2 let's change the music up and turn that
01:57:31.980 music all right so the h2 tag oh almost 800 likes let's go Zach All right so we've
01:57:38.580 got a div here we're gonna say space class name space uh y of two so this is going to be
01:57:46.380 um basically all of the to Do's are going to come through here okay so what
01:57:51.480 I'm going to do here is I'm basically going to check though so I'm not going to do the set string we'll do it afterwards here I'm going to say oops
01:57:58.679 that should be space x sub 2 Okay cool so now what I want to
01:58:03.960 do is I'm going to say return inside of here um well I'm not actually doing that yet
01:58:09.139 uh I'm actually going to be doing just the draggable elements so I need to map
01:58:14.880 through them yeah so that's right so I'll say to Do's dot map for every single to do I want to return the
01:58:21.060 following right and then here I'm going to create a component called to do card and I'll show you how we do it but
01:58:27.300 before we do that it's going to be wrapped in a draggable element so this and this one's gonna be draggable
01:58:32.400 okay he's gonna be draggable Wireless again we go back to this same logic we were
01:58:37.739 nested in another dropable element so now we have draggable Okay so we've got
01:58:43.020 Dragon Ball and then here it's going to be the key the key is going to be the to do ID
01:58:52.020 um the Dragon Ball idea is going to be the two idea and the index is simply going to be the index okay inside of it
01:58:57.840 we're going to do our traditional provided render prompt which we are we again we have to use and then we're
01:59:04.380 going to render out a to-do card which we are yet to build okay now this to do card will have a bunch of things inside
01:59:10.679 of it it will have the draggable props the inner reference all that good stuff so in this case I'm gonna just save us a
01:59:16.199 bit of time and pass in those values from that provided down into because eventually the div inside of there will
01:59:22.320 need that so we're going to pass that in as well okay now this is freaking out why
01:59:27.599 exactly because we have this this is here and then we need another one there
01:59:33.659 we go yeah so what we need to do now is go ahead and um yeah we need to
01:59:39.780 basically create a to-do card but before we do that the final step here before we carry on is after all of this what we
01:59:46.320 have to do is something called a provided placeholder now what this does is is when I drag something across to
01:59:52.139 another column it creates space for it otherwise what will happen is you're dragging it over the column and then
01:59:58.619 it's just like there's no space for you to put in the placeholder basically it says if I'm dragging over it makes space
02:00:04.500 for me so it looks like I'm dragging in it creates space it's really nice very nice effect yeah
02:00:10.199 so we got the provided placeholder and then at the end of all of that we're gonna have a button which allows you to
02:00:16.260 basically go ahead and click to add a to do and that's going to be the modal portion of this build afterwards so
02:00:22.139 inside we're gonna have a different button inside and this one is going to have a plus Circle icon
02:00:28.139 all right so in this case let's just hit save so plus Circle icon this will be class name of height and width of 10.
02:00:35.460 so height and width of 10. and in this case the text Gray I don't
02:00:41.460 want it that's fine right so the button itself will will have a few colors to it so
02:00:48.239 let's go ahead and start this up so class name bam uh like so and then the
02:00:53.460 div itself will be a centered button I just want it to be very easily it's going to be no sorry towards the end so
02:00:59.639 items end it's going to be justified towards the end as well of its section right now before you're going to see
02:01:05.280 that that's basically responsible for this so you see how that's got a little Gap and then as we justify it to the end
02:01:10.619 right so let's go ahead and create the to do card and then trust me it's all
02:01:15.840 going to come together real quick and I cannot believe the retention on this video is absolutely incredible you guys are so focused I can tell this is
02:01:22.920 incredible all right we're going to go ahead and create the new component let's go ahead and drop it in so we go
02:01:24.000 No text
02:01:28.739 and create file to do dot to docard.tsx rfce um
02:01:34.320 we'll pop that in like so and just like that now inside we're
02:01:40.199 going to expect a bunch of props so here we're going to get a bunch of different props come in so I've saved us a bit of
02:01:46.380 time I've already wrote the definitions for them and I've saved you a bit of hassle as well so in this case we've got
02:01:51.719 custom type so you've got Dragon Ball providerable draggable props and then this one drag handle props can either be
02:01:57.900 no or undefined so I've already saved you the hard work of figuring out what's what alright so these are going to be all the different types that we need
02:02:04.320 and then you simply pull your props through okay this will be all the props
02:02:10.020 that come through someone goes I'm coming along that's why I can't thank you as awesome I must have possess Sunny the tech hero thank you
02:02:16.320 man for the effort from Egypt I appreciate you do tuning in that's why I do what I do so you guys are what makes
02:02:21.480 this happen right now this is going to be a client-side component so we're going to Simply say use client
02:02:28.619 right now for this to-do card we're actually going to have a div now remember when we have a provided parent
02:02:35.820 you have to go ahead and pass down the props now like the draggable props in this case we passed it over as a prop
02:02:42.540 through right so in that case we can do it like this then I'm going to have a class name
02:02:48.000 and here I'm going to say the background should be white rounded MD so these are all the cards now by the way I'm styling
02:02:53.880 these cards yeah just so you're very sure uh oh thank you ashcan appreciate it
02:03:00.000 yeah randomly let me say space between all of the cards or all the items inside
02:03:05.040 the card and we'll give it a drop shadow of medium cool right hit save
02:03:11.699 and now what I can do is I can go back and obviously this isn't going to say I'm just gonna say H1 hello
02:03:17.040 I just want to show you for a second let's go back here and fix this up and boom
02:03:22.860 import that at the top and what we should see now oh look at
02:03:27.960 that guys now obviously right now you can see look at that look oh that is
02:03:33.599 clean so right now obviously the the logic for it to stick is not done but right now look at that it automatically
02:03:40.199 gets it over there oh man that's so cool look at that oh clean and look how smooth it is as well
02:03:46.860 guys look this is how you do like a crossover drag Drop Zone sort of
02:03:51.960 situation right I thank you request I appreciate you man so at this point looking really really
02:03:58.199 beautiful right so let's go ahead and oh I've actually okay that was fine yeah I guess I played
02:04:04.380 another thing I've done something about muscle memory all right so in this case to do card now what we're gonna do is
02:04:10.980 head over to the H1 hello we're going to replace that with the actual to do so this is the fun part right now we're
02:04:16.320 getting now we're getting somewhere guys let's go ahead and put this in so let's go ahead and now we're going to pick up some speed so we've got the div inside
02:04:23.159 of here we've got a P tag and we've got the to-do title so to do dot title and look at typescript it's just so nice
02:04:29.219 like this is why we do it because it honestly helps you prevent so many problems X Circle icon is basically
02:04:35.460 going to be resemblance of this cross that allows us to delete a to-do from the screen right so that way we can
02:04:41.580 actually Delay from the database so this is going to have a margin left of five a height of a oh this one gets me uh all
02:04:48.480 right higher rate and then we're gonna have a width of it as well right and then there you go you
02:04:54.239 can see like a little nice little thing and that button is going to be text Red
02:04:59.940 of let's just say 600 or 500 but when you hover over it I want it to be text
02:05:04.980 red 600. and this gives us this nice hover effect
02:05:10.260 yeah and then the P tag itself so the entire
02:05:16.080 div surrounding it all we're gonna say Flex justify between items should be centrally aligned with a
02:05:22.320 padding of five hit save and boom let's get in there guys again this is
02:05:29.159 good I love it when it comes together every time all right and then what we'll say is if there is an image URL
02:05:35.400 right so we're gonna basically prepare for when we set up images if there is an image URL
02:05:41.099 um which we haven't yet set um so right now we don't actually have this and I'll show you how we do that
02:05:46.860 afterwards actually we'll do the image URL afterwards I'll show you why all right
02:05:52.380 um the reason being is we have to do a use effect a bunch of stuff to handle the fetching okay so we need to add image yeah
02:06:01.280 afterwards as far as afterwards okay so that's good all right so now just at
02:06:06.840 this point we've got this down pretty good so we've got different steps that we have to approach now the first one is
02:06:12.119 we need to handle what happens when we drag and drop something on here so let's do that logic first then we'll do the
02:06:19.320 plus Logic for the modal then we'll do the delete logic then we'll do the image thing and then we'll do the search so
02:06:24.840 you see there's a lot of work right there's actually a lot more work than I expected this is what I was telling Jay I always underestimate these builds but
02:06:31.500 um I get carried away and I start building like crazy so quick little water break but we're doing damn amazing let's keep moving
02:06:40.699 we're about to hit 800 likes on the wall break that's what I'm talking about guys that's what I'm talking about let's go
02:06:47.820 all right so what I want you to do now head over to board and at the handle on drag and
02:06:48.000 No text
02:06:54.300 function this is where we go ahead and set things up all right so handle on Dragon so first things first and
02:07:01.020 whenever you drop so this is basically going to be resemblance of all of the drop interactions so if I drop here if I
02:07:07.380 drop here for example it's going to handle everything so the result contains
02:07:12.420 a bunch of information like the source the destination and the type of drag and
02:07:18.119 drop that I did so in this case what we're going to do is we're going to destructure the result
02:07:23.400 okay and if I console log this I will show you very quickly what is happening
02:07:29.040 Destination type right so now if you see for yourself when I refresh
02:07:35.480 let's go ahead and right now yeah I've messed something up there but we'll fix it afterwards right so now if you see
02:07:41.280 when I drag and drop it shows that the source the destination and the card The Source will say the index of where you
02:07:48.719 dragged and dropped it from so in this case let's have a look again so let's drag to do over so from zero to one so
02:07:55.139 in this case you see how the index was Zero from the Star and we dragged it to an index of one and the board was
02:08:02.099 dragged right if we drag this one it will be a card so you see the card was the type of drag and we're saying which
02:08:08.520 point we dropped it from so in this case if I drag from here to to done it went from droppable ID 0 so this
02:08:16.260 column to 2 over here and the index resembles which place it was in that
02:08:22.080 list right so you can get a little bit confusing but trust me just take time with this I'm gonna move through it
02:08:27.540 fairly quickly but take your time afterwards re-watch it and just really log out things and understand how it
02:08:34.080 works okay but I promise you I can't spend too long on this section but I'm going to show you how it works and
02:08:39.300 explain it the best I can in the time we have right so the first step I want to do is I want to check if the user dragged outside the box like over here
02:08:45.599 if they do that we don't want to do anything period right so Christopher Cole what's up man my G Sunny best feels
02:08:52.139 on YouTube Matt G's always dropping them sick comments thank you so much dude I appreciate you so if the user drags the
02:08:57.420 card outside the board all we have to do is say if the destiny if there's no destination return that means if you didn't drag it to any of these
02:09:03.480 destinations forget about it right so in that case we can basically now it won't do anything period okay so that's the
02:09:10.800 first easy step then what we want to do is handle a column drag so a column drag is
02:09:17.219 basically when I drag the column to the entire column when I drag this entire column like so I want to handle that and
02:09:24.420 then basically do what I need to do from it so the way we do this is we simply say if the type of drag is equivalent to
02:09:31.020 a column okay so if this is the case then what I do is I say const entries
02:09:36.380 equals and I make an array from the board columns entries so basically we did what we stepped we did before we're
02:09:42.119 converting the key value pairs to an array now what we do is we splice so this is basically what I need you to pay
02:09:48.540 very close attention so I already have the source index so where you took it
02:09:54.540 from okay so I need to take from that into that column so now what I can do is
02:10:00.060 I can say const oops okay what the hell is that cons removed entries dot splice Source
02:10:07.340 index.1 okay so trust me the logic I've worked a long time to figure this out but basically what we're doing here is
02:10:13.860 we're taking away from this so if I drag it out of here I'm basically root taking
02:10:19.320 this so this is the removed element I have in my hand okay so now we have that stored in removed okay then what I want
02:10:27.420 to do is I need to splice it into the destination so splicing means I'm
02:10:32.580 basically pushing it in to the destination to the correct destination and then it's going to be in the
02:10:37.619 position the correct position so I don't want it to be like over here like and then it randomly shows here it has to be
02:10:44.460 in the correct position right so I'm talking about the column by the way sorry yeah I completely messed up it
02:10:49.860 should be the column like the exact column that you've dropped and dropped into so the way we do this is we
02:10:55.260 basically say entries dot splice and we say destination
02:11:01.679 dot Index right we do zero which basically means we're not going to delete anything we're simply going to
02:11:07.980 push the removed item into that column all right so now we're basically taking its place
02:11:13.980 all right then what we do is we create a new map of the rearranged columns so now we say we've got the rearranged columns
02:11:20.099 from the more modified so what we've done here is we copied the columns
02:11:25.739 entries into a new variable we modified it because splice is a direct modifying uh function then we stored it into a new
02:11:32.880 rearranged column and now what we're going to do is we're going to set the board stay to that new state and what we
02:11:39.300 need to do here is go over to our board store right so now we need to create a
02:11:44.460 very special function called set board state right so this is going to be a very important function that we're going
02:11:50.099 to use a lot right so what this will do is this will take a board object and it
02:11:55.739 will basically set the state for it okay so we're going to set this date so I'm going to go to my set board state
02:12:02.520 so down here for example I need to create the function for that so set board State and what I'll do is I try and space these out so you can see it's
02:12:08.580 a step board same and this is going to be a um basically the following it's going to
02:12:13.980 take a board it's going to set the variable in a global State okay so then what we do is we basically get that
02:12:20.159 function now in our array so we say set board state
02:12:25.260 and then we basically get it all over here so we say stepboard state state DOT oops sorry guys State DOT get set board
02:12:32.400 State okay so now we have this variable and we can pass in the rearrange columns
02:12:37.860 which is in the correct state so we can say set would stay
02:12:42.900 um and basically what I'm doing now is I'm only change the columns right now remember boards have columns inside of
02:12:49.380 them so what we can do is a nice little es6 trick here we can say keep all the current now keep will keep everything
02:12:55.619 basically and then change the columns field which is the only thing that
02:13:00.780 really inside to become the rearranged columns okay so now what we're doing is
02:13:06.780 we're modifying the state and with that done we can actually persist so look at
02:13:12.300 this look at that oh look at that nice look it works and I hold this value
02:13:19.560 and then I remember when we set things up we actually had it in a way that when we refreshed it set it back to its
02:13:24.840 original state that's clean so nice right that was so clean and now we've
02:13:30.659 done the column part now we've got the more tricky part which is the nested part which is basically how do I move a
02:13:37.199 to-do into the crap one let's take this took a little bit of calculation but I'm going to show you how it works okay
02:13:43.619 somebody says how are you I'm doing really well thank you dude all right so this one I need you to to just pay
02:13:49.139 attention with me stick with me trust me I promise you the pain will be worth it okay so right now remember the source
02:13:55.260 and destination it was only numbers it only said like you went from index zero to index one and so forth so what I'm
02:14:00.719 going to do now is I'm going to basically create a copy and then basically I've slowly like left comments
02:14:06.300 all around the place to help you guys out okay so what we're going to do is this step is needed as the indexes are stored as
02:14:12.480 numbers instead of IDs with the DND library and because we're now using the
02:14:18.420 um as I mentioned because we're now using the um the map right we need to basically convert it over to the array format so
02:14:25.139 now what I'm going to do is I'm going to create a copy of my columns right so what I'm going to do is I'm going to
02:14:30.960 basically create a copy of the columns and then what I'm going to do is I'm going to say the starting column index
02:14:36.060 is the following and the finished column index is the following so watch what I do here so what I've done here is the source
02:14:43.500 dropable idea will go into the columns and get me the correct column right and
02:14:48.540 this one will get me the correct column for the finish and that means when you dragged and dropped in the correct way you're basically going ahead and
02:14:54.860 rebuilding from a zero to the object in your store and I'll show you what I mean by this right so from those values what
02:15:02.400 I'm doing is I'm rebuilding the start column and finish column okay so now if I was to Contour log the
02:15:08.940 start column and the Finish column what you're going to find is someone says suddenly step up and make a
02:15:15.599 framework I know man honestly we'll see in it we have to do it um so now you'll see if I was to go
02:15:21.239 ahead and drag this over here for example you see now how we've got we
02:15:26.400 went from in progress we went from the in progress column to the done column so you see how we've we went from the just
02:15:33.060 previously what I told you before I showed you before the source and destination of zero one two three now it's actually found the columns rebuilt
02:15:39.780 there with the correct arrays and so forth now I have the objects that I need to modify right so I have the start
02:15:47.340 column I have the finished column so now what we can do is if for whatever reason you didn't get the start column or
02:15:53.760 finish column we basically return we're protecting and then if for whatever reason you basically drag and dropped in
02:16:00.900 the same location exactly so not the same position but the same exact location we should then do nothing as
02:16:07.619 well okay so um no Muhammad period all right so Source
02:16:14.340 Disney destination that start column finished basically what is it saying is yeah if I drag and drop and to the exact
02:16:19.800 same position it was in do nothing okay so if the source index is the same as destination and the start column is the
02:16:25.199 same as the Finish column don't do anything okay so now what we do is we create a oops sorry guys uh we create
02:16:34.138 a copy as we say new to-do's equals um start column to Do's right so say
02:16:40.740 start column dot to do's okay so again this is a lot of data manipulation then what I'm going to do
02:16:46.379 is I'm going to splice the to do to move so basically what I've done here is whatever to do I take I am not splicing
02:16:54.420 it from and the reason why we're doing an array destructuring here is because it returns an array the splice function
02:17:00.540 and then we basically destructured to get the individual thing out so whenever I grab this now I've got the to-do moved
02:17:06.058 okay now we've got two cases where we need to manage how and what happens the
02:17:12.179 first case is going to be if we are dragging and dropping in the same column okay so if we do this and you can
02:17:19.740 actually eradicate this but it's more efficient if we do it this way so the start column in and finish column ID
02:17:25.500 right so if this is if this happens you're basically doing a same column task drag and you're not doing it in the
02:17:33.058 same position because we already eliminated that here okay so same column task track else
02:17:39.120 you are dragging to a different column dragging to another column okay so the
02:17:46.019 first one let's handle it so first thing we want to do is we simply splice into the new location in the same start
02:17:53.821 column right so in the same new to-do's the same column because we're not changing column we basically splice it
02:17:59.760 then what we do is we create a new column right so in this case
02:18:05.459 we splice it we create a new column object and then we basically create a copy
02:18:12.240 right so what we're doing this is basically an immutable pattern right so we don't want to always manipulate the
02:18:17.700 initial object so we create a copy of board columns I'm then going to modify so new columns
02:18:24.599 dot set and basically now modifying the start column ID so the idea basically of
02:18:31.920 where I um I'm basically so I've spliced out the to-do's create a new column based on
02:18:38.400 that value and then I'm setting I've created a copy of the map and I'm re I'm setting that ID to become the new column
02:18:45.360 and then what we do is we simply set that as the board State the new board state
02:18:50.879 so we basically say set board state and this in here will basically be the exact same procedure I did before so
02:18:57.599 board and then we say columns is now the new column so columns is now the new
02:19:02.821 columns like so okay so with that said what we've now done is we've handled the
02:19:10.080 same drag so you see that now it works inside the same column so now it's
02:19:15.478 working inside the same column it doesn't work yet for another column you see it just disappears all right so we
02:19:21.420 need to fix that right so right now it doesn't work if we go outside the column so we've done it for the same column so
02:19:28.019 let's get it done for another column now so what we're going to do now is the First Column was fine it was very simple
02:19:33.840 because we just had the start column yeah we didn't we never went to the finished column but in this second case
02:19:39.900 we have the finished column and we need to modify the start column and the Finish column okay so I'll show you how
02:19:45.540 we do it because technically what you're doing here is you're taking something from
02:19:50.760 this column and you're adding something to this column so you have to make the correct
02:19:55.920 changes in each of the columns to reflect that interaction okay so let's
02:20:01.500 do that right now so what I'm going to do is I'm simply going to say make a copy of the finished column
02:20:09.180 and I'm going to splice from the finished column the destination right so in this case now I'm saying that we're
02:20:15.780 going to basically in this one we done it to the destination but the destination was still the same place
02:20:21.300 right but in this case we're going to do to the finished column so they're finished to do sorry and then
02:20:26.700 what we do is we create a copy it's a very same like simple step here same step exactly as what we did previously
02:20:34.200 yeah so this is essentially the same yeah here and here okay and then what we
02:20:39.420 do is we just do two slight changes here so what we do is we say new column
02:20:45.120 new columns dot set the start column ID as new column so this is going to be the
02:20:50.340 new modified value and then the um previous the finished column we set
02:20:56.520 to the uh the new modified finish to Do's okay so you see the finished ID so
02:21:02.460 now what we've done is we've modified the first thing that you took it from and then the second argument here the
02:21:08.580 second one is basically changing this this area so it's changing this and adding the to do that so you see how it
02:21:14.880 removed from there but it didn't add that this is what this is going to do okay then it's very simple we just simply go
02:21:21.960 ahead and um we set the board state to the new columns
02:21:28.620 done save okay and I've also got a function here I'm just checking what I did for that one
02:21:34.979 because I can't even remember what I did for that what the hell is that that is oh yeah okay go ahead
02:21:40.979 so in the database that's changing the value yeah so here we need to update in DB
02:21:47.520 I'll show you all right so I'll explain that so now firstly let's check the Logics we save and we should have
02:21:52.979 everything working if we have I want you to destroy that like button so ready for
02:21:58.500 this yes look at that and it changes the done as well look at that guys absolutely
02:22:06.300 beautiful and look it works just as we expected great stuff as I mentioned before that
02:22:13.500 can be a little bit confusing what we just did but what I want you to do is when you watch your back and code this along I want you to stop at certain
02:22:19.439 points and console log it and really listen to what I was saying and then see for yourself the exact changes that are
02:22:25.200 happening again all of this stuff is really about getting dialed in with the fundamentals of different data
02:22:31.260 structures arrays Maps objects all that good stuff again if you want to go ahead
02:22:36.300 and really learn and master all these things I Do cover it inside of zero to full stack hero so make sure you check
02:22:42.300 it out over at papareact.com and then you can see for yourself why it's
02:22:47.520 basically the place to be for learning all of this kind of really intense stuff right so I want to go ahead and Shameless plug but I want you to go
02:22:54.060 ahead and you know if you do get stuck and you really want to dial in then that's the place where you're going to go ahead and cover the gap of maybe
02:23:00.540 feeling really lost in what I just said versus feeling really comfortable and confident in what I just said okay so
02:23:07.620 let's carry on strong we just finished off really nice with that okay that's really great so now what
02:23:13.080 we're going to do is we are going to um we've got this done so now we've done
02:23:19.500 all the drag and drop stuff hey great stuff all right so now you can see you can drag over here oh that's actually because I've got the horizontal that's
02:23:25.260 fine we'll fix that layer so there you go boom that works really nice I've got a little arrow here because the stock
02:23:31.020 column index of zero I believe I messed that up here where is that start column
02:23:36.660 index board 43 was here
02:23:43.100 so Stockholm index.43 [Music]
02:23:49.080 okay so I think I got an edge case there to be honest with you zero zero one zero
02:23:55.380 one yeah that's fine okay it's okay okay so at this point now what we can do
02:24:02.399 is I want to go ahead and do one more step there which is updating the database so if you notice when I refresh
02:24:08.460 it's not remembering where I put it right so what we need to do is simply make a function that will basically
02:24:13.979 update the database so let's do it right now very simply all we gotta do is go to our board store and this is what I like
02:24:19.380 about the board so as you can actually have more than just State Management you can do other stuff inside there so
02:24:26.700 here I'm going to create a function called update to do
02:24:31.740 in DB update to do in DB okay and this is
02:24:37.859 going to be a function which takes the following it's going to be a function which takes
02:24:44.460 e to do and the column ID and then it's basically going to set the to do to that column ID when you when you pass in that
02:24:51.180 function so I'm going to say update to do in DB and that will take a to-do on column so where am I right now I'm
02:24:57.840 getting so lost okay yeah so update this oh
02:25:04.020 I'm gonna make it an arrow keep it consistent
02:25:10.560 okay and this will be an asynchronous function and then here what I'm going to do is I'm going to say await databases
02:25:17.399 so I'm going to pull in my databases object from upright the one that we initialized earlier and this is where I
02:25:23.399 do something called update document okay so what this will now do is it will update the document and all I need to do
02:25:30.359 here is pass in a few things so the first thing is if you look at this it's the database ID The Collection ID I
02:25:35.880 already have them and the final thing is the document ID so what I can do is Luca says hey Sonny is this report available
02:25:41.939 yes right off this build I'll be pushing it into the repo Jay just dropped the link in the group chat or it's the papa
02:25:47.880 gear repo over at links.popperreact.com forward slash GitHub so all the links are in the description as well so here
02:25:55.080 I'm going to go ahead and pop this in so to do ID and then you pass in what the updated information is so here I'll say
02:26:01.260 title is going to be the to-do title that I want to change and the status will be the status that we passed in so
02:26:09.540 it's going to be the column ID okay so now we've got the correct function done so that's basically the
02:26:16.500 update set then we go up to our board and we basically pull that function in so now
02:26:22.319 what we do is we simply pass that in so update to do and we say State DOT update to doing DBA and then at the point where
02:26:28.859 I had my comment all I want to do is if you were to go ahead and drag to another column that's
02:26:34.800 also why I split it up because if you drag in the same column I don't really right now I haven't persisted the order but you can you can extend it if you
02:26:41.700 want to but I'm only basically updating the DB or making a request to DB if you cross to a different status right so
02:26:49.800 let's go ahead and you could honestly just set it based on updated that you can move it based on that if you really want to do that
02:26:55.620 so now all I do is I simply say update to do in DB to do moved to the Finish
02:27:00.960 column ID done and now a quick check to see if you've done it correct when you get to this point what I want you to do
02:27:07.500 is refresh and to make sure that you've actually changed the state in the database you see this is loaded from the
02:27:14.220 database so if I grab this and take it to done what we should see now if I refresh this should be in the done
02:27:19.560 column and just like that it's done perfect so if we move everything over here now you'll see everything is in the
02:27:25.979 to-do column perfect so that's actually changing on apprise database yeah amazing stuff and also remember
02:27:33.000 what I said about the placeholder you see how it's creating a placeholder for me that's really nice right so it shows
02:27:38.760 you what it's doing uh nice good stuff guys this is awesome now what I want to do next I want to actually go ahead and
02:27:46.500 maybe implement the search functionality before we then do the modal and then we
02:27:53.939 focus on deployment and I think we're golden at that point right so let's go so the next step is let's do
02:28:00.000 No text
02:28:01.740 such so right now inside of the header.tsx I want to go ahead and because now we can really like Elevate
02:28:08.640 the speed on what we're doing so at this point inside of the header I want to go ahead and set up something called a
02:28:14.880 search string and again this is going to be something which we're going to set up in our board store so let's head over to the board store and we're going to have
02:28:20.939 two new pieces of data the first one is going to be called a search string so in this case let's go ahead and add that in
02:28:26.700 this is going to be a search string okay and the second one is going to be set search string which is the function
02:28:33.479 to modify the search string okay now the search string is simply going to be like
02:28:38.880 we're going to initialize it with a blank value so over here we're just simply going to say initialize with a blank value and then the search string
02:28:45.000 itself is just going to be a very straightforward search string that we pass in and then we set it as
02:28:50.760 straightforward very easy to do okay now what we can do is we can go over to our
02:28:55.800 header and as we type in here just like we would do with something like State we
02:29:01.560 can do the exact same thing with the stand except now we're modifying at the global layer okay so over here now what
02:29:08.880 I can do is I can say const and I can say something like the search string and set search string
02:29:16.680 set stream equals use board store and I basically get the state like so I will
02:29:23.520 go ahead and get my parentheses like so and then here I can say state does search string and state DOT set search
02:29:29.040 ring I can then go to my input field and I can set the value here to that and
02:29:36.540 I can say on change so every time the user types in you can simply set the E dot target.value2 set that Global State
02:29:43.920 instead of something like you stay so to test that this is all working all you need to do is simply start typing in and
02:29:49.140 if you're still typing in you've done it correctly right otherwise it would freeze there and it wouldn't work
02:29:54.300 so now we're setting up every time I type in I've got access to this at the global level now so if I need it
02:29:59.819 somewhere else I can actually go ahead and change that accordingly right and we also got to do API GPT stuff so it's
02:30:05.760 crazy we're almost not a thousand likes but I've always a 900 just go honestly we're going to hit a thousand ten I know
02:30:10.800 it right so now what I want to do is implement the logic to filter out okay so where I do this is the board I
02:30:18.120 believe it's the board or actually I think it's a column uh I do out I think I do at the column level yeah I do at
02:30:24.359 the column level so each at the column level so what I want you to do now
02:30:31.760 yeah column level I thought so makes sense all right so at the column level now I am going to go to my column and
02:30:38.160 what I want to do is I need to basically first get those values right so I need to get the search string itself
02:30:44.939 so let's go in there right now so I'm gonna say const search string
02:30:50.399 and I've done an array here because I'm going to need that afterwards use board store and I'm going to get this state
02:30:55.979 DOT search string there we go
02:31:03.060 and then we've got the search string here and then what I can do is when I actually render out the to-do's there's
02:31:09.240 a lot in the end of the day there's loads of ways you can do this I'm just showing you one way okay so we're here
02:31:14.700 we're doing an implicit return all I do is I simply add parentheses around the entire thing
02:31:19.859 and all that was doing is basically that right so that fixes it if you don't do that but then what I'm going to do is
02:31:25.080 I'm not going to render it if how can you learn notification via Squad I'm not sure what you're talking about um the
02:31:30.660 hero I'm gonna say if the search string exists and if the to
02:31:37.859 do title includes the search string okay and what I can do is I can actually do
02:31:43.680 title dot to lowercase to lowercase uh to lower case there we go includes
02:31:49.680 the search string to lowercase that way you never get some annoying Edge case then I want to return no okay so if I if
02:31:56.819 that comes across then I would simply return no so this is basically not showing it if
02:32:03.359 it's there right so now what I can do is if you see live look at that oh dogs
02:32:09.420 and build nice but you can see how each one is still saying one one one so I'll
02:32:14.700 show you how we can get rid of that so already we've got that bit done so that walk there we go stream done right
02:32:20.340 because this is local there it's fine to do it this way it's really not that bad right so now
02:32:25.920 for the count again I'm gonna do an inline I'm going to show you a relatively cheeky way of doing it I'm
02:32:31.920 going to say here where we show the length and we're going to expand this and say if there is no such string okay
02:32:38.120 then you should show the to-do length so very simple if there's no search string show the to-do length else
02:32:45.359 I want to show um the follow-on let's say to Do's dot
02:32:51.060 filter and then I basically I'm going to map through all the to-do's so to do
02:32:56.880 to do and I'm simply checking if to do dot um let's see to do title so basically
02:33:04.020 the same thing that I just did before yeah to lowercase there we go so uh why have I got this issue now so to do a DOT
02:33:11.040 length yeah that's right okay one second let me just write this
02:33:16.439 out so we've got the two dot title Dot includes
02:33:21.840 search string there we go I don't need this part and here I'm going to do the same to
02:33:28.800 lowercase check to prevent it from happening and yes you can honestly go ahead and you know make this all like
02:33:35.460 refactored and really clean this over this Amazing Project man thank you so much dude
02:33:43.020 so now you can see we've got the so if you pay attention to these ones if I go
02:33:48.540 and say live right so you see that it shows only the the number only counts up
02:33:54.359 for the one where it's in so build and so forth you see now it's a zero zero but one all right it's nice perfect
02:34:01.319 right um yeah I'm not sure but I think it means you shocked yourself like on this
02:34:07.020 project uh Germany announced what is up so this is looking good so far so we've
02:34:12.359 done the search so just like that we've got the search right so yes um ashcan it's a very good point and I was
02:34:18.180 literally thinking as I was building um but it came to the point where it came in my head today so yes ideally
02:34:23.700 what you would want to do here is do something called a debunk right debunk sorry a debounce
02:34:28.800 um well basically as soon as the user stops typing like after like 500 milliseconds or 200 milliseconds then it
02:34:34.439 executes search right now it's on every letter which can be very intensive but you're just not seeing it but yes you
02:34:39.960 would want to do something called a d bouncer on the search that way it doesn't always happen or you can do it on search where you hit enter yeah but I
02:34:46.920 just wanted to show you now I'm doing it perender which probably isn't the most but very good for noticing that yeah so
02:34:53.040 at this point um but that's why it's good having this community chat honestly it's amazing right okay cool so next up let's move
02:34:59.000 No text
02:35:00.000 swiftly on let's do GPT and then let's do the modal okay so GPT is up next and
02:35:07.620 then we're going to go ahead and do this modal for adding a new type mask and then we're going to add the images and so forth right so we've got quite a lot
02:35:13.920 to do so I want to move fairly quick okay so GPT let's go ahead and do it so
02:35:19.560 first things first I want to prepare my endpoints so that way we can work in a fast fashion fashionable way so at this
02:35:25.800 point inside of the app folder I can create the new API folder right so this is a new nicer API that we can use right
02:35:33.180 and don't worry if you're confused it will take time you know you can watch us back in the replay and everything right so in this case we're going to say right
02:35:39.420 now we're going to create this bit where it says hello Mr Sunny welcome to the to-do app here's your summary you have four to-do's two in progress three done
02:35:45.780 and so forth right tsuki Singh says I'm a full stack developer Australia you're doing an amazing software thank you so
02:35:51.060 much dude I appreciate you guys to the moon and back so thank you so much for that all right
02:35:56.399 so inside of here I'm going to create an API endpoint called generate summary and then inside of there I'm gonna have
02:36:02.819 a root.ts file this is the new syntax for um the new root in the next
02:36:09.800 js13.203 I believe right it came in right but that's how we're basically doing it now so we've got this really
02:36:15.240 nice and you can basically choose if you want to have a post or a get or whatever case right in this case we're only
02:36:20.340 accepting a post at this endpoint so this will be forward slash API forward slash generate summary okay so now 13.3
02:36:27.960 there you go thank you papicha right so what we're going to do is we're going to basically pass in in this request the
02:36:35.040 to-do's in the post right so this is going to come through here then what we can do is you can log out for you know
02:36:41.640 if you're debugging it you can log out there for example and then we're going to we're going to basically communicate with open AI
02:36:48.380 communicate with open AI right so GPT so
02:36:53.760 in this case I'm going to show you how you can do it now you can use gpt3 for Turbo all that good stuff
02:36:59.460 um and in this case so we're gonna actually go ahead and install open AI right now so what I want you to do is
02:37:05.580 basically go here go to open AI API
02:37:10.800 and then go to the API reference okay so what I want you to do is you have to create an account right with open AI I'm
02:37:17.760 going to do npm install open AI into our project so let's do this command J go to
02:37:22.859 the second terminal npm install open AI I've now installed it into the project then we have the authentication and all
02:37:29.340 this good stuff so you can ignore this for now what I'm going to do is we simply now we have to add in a
02:37:35.120 process.environment.openai key so I'm going to show you this one all right so what we need to do is go to our
02:37:40.880 environment.local file and I'm actually gonna add in something here so let's go to our environment look file I'm not
02:37:47.580 going to show you the screen because I have all my keys here right but what I want you to do
02:37:53.640 because I don't trust everyone on stream that's the truth I'll be honest I've learned my lesson in the past so I've hidden all my keys for a second so keys
02:38:02.399 are down here we're remaining keys are down here so I've hit another keys for a second oh
02:38:09.540 papa found that deserves a like all right oops okay so now in the open
02:38:15.960 AI this is so stupid I have to do this but the keys are down there right they're all down there but the open AI
02:38:21.899 API key so I need an environment variable here so what I want to do is I'm going to go to our personal view API
02:38:29.220 Keys now I've already I've actually set a billing account here so I'm actually using this for a few things pay as you
02:38:34.260 go I believe you can use a free amount on the turbo 3.5 gpt4 is paid
02:38:39.960 um but I believe you can use a free one but in this case I've added a billing account you can do it for yourself it's very simple and honestly I think I was I
02:38:47.280 was like going to town on this thing and I think I spent like what was it
02:38:52.380 yeah 49 cents so honestly it's really not a problem right so I was going crazy on this thing and then I did that so
02:38:58.920 yeah 49 cents is honestly after going crazy at the thing so I'm going to create a new secret key here so I'm
02:39:04.500 going to click this and I'm going to name it so in this case I'm going to say this is called it Trello YouTube Key
02:39:11.040 YouTube key and I'm going to create a secret key all right so I'm gonna basically go ahead and do that right now
02:39:16.859 and I'm not going to use this key but I'm going to show you what we'll do right so you can create a secret key here and copy it right so you can copy
02:39:23.640 that key now I'm going to delete this key because you guys just saw it but that's basically once you've copied that
02:39:28.979 key I need you to go back to your code and paste it in now okay so I've already
02:39:34.500 got a key that I'm using so I'm going to go ahead and paste it in right now and then I'm going to pull all and I'm going to pull up my my environment my
02:39:41.399 variables and then there's so far so I'm pulling on pulling that in off what I just had it on the screen it gets tricky guys trying to hide all
02:39:48.120 this stuff all right so now I've added in my API key so you should do the exact same thing so you should have four open
02:39:54.479 AI key open AI API key and so forth okay save and close okay now I have my key
02:39:59.880 like everything's up cool so now what I need you to do is go over here and create a new file called
02:40:06.899 open AI dot TS at the top level at this level I'm basically going to create a
02:40:12.359 config for our environment right so in this case this is how we're going to go ahead and configure our API so we do a
02:40:18.899 very simple import we do configuration equals new configuration pass in the API
02:40:24.000 key like so then we basically create an instance of open Ai and we definitely we export it so now we're using the same
02:40:30.359 instance every single time yeah
02:40:35.479 that's exactly how I felt and then here we're inside of the generate summary
02:40:41.819 now what we do is we say const response cons response equals await open AI
02:40:50.520 okay so we do the import from our open AI dot create chat completion all right
02:40:57.000 create chat completion and then here what I want you to do is you can pass in the following
02:41:03.120 information right so the first few things are I'm going to use GPT 3.5 but you can so
02:41:08.340 I can right now I've got access to gpt4 so you could do that the reason why I recommend you don't is because it costs
02:41:14.340 a lot more to run gpt4 and that's my honest truth and if you're doing this as a portfolio piece I'd highly recommend
02:41:19.920 you don't unnecessarily add yourself that spend there's no point really unless you're really demoing this to
02:41:25.859 like a bespoke user or something and then you have the messages array okay so these are the messages that you
02:41:32.819 want to go ahead and send to GPT so the first one is going to be a system message Indonesian house was up so the
02:41:40.979 first one is a system message and this is basically telling gpta I want you to always do this so when responding
02:41:47.819 welcome to user as Mr Sunny so you can say welcome to use as Mr Jimmy Mr J Mr
02:41:53.340 Noodle Mr Sota all that good stuff yeah and GPT is also slower yes and say
02:41:58.680 welcome to the Papa Farm to do app limit the response to 200 characters okay so that's fine and then your second one
02:42:04.979 is basically I'm pretending to be the user okay so I was like Hey provide a summary for
02:42:11.760 the following to do is count how many to Do's are in each category such as to do in progress and done then tell the user to have a productive day here's the data
02:42:18.180 and then we do basically Json string of Fire like so okay now once this comes
02:42:24.479 back you get a response from chat GPT right and what we're going to do is we're going to destructure the data from
02:42:31.560 the response so from the response okay oops from the response so that's
02:42:37.560 great right so once you've done that step what I then want you to do is you can actually go ahead and log it out so I'm going to show you what I would do
02:42:43.620 for debugging purposes is you basically want to go ahead and pop it in like so right so I'm basically
02:42:49.680 say there is there and this this is what I would recommend when you're getting started because it can allow you to debug see what the hell is going on and
02:42:55.740 basically the first response that comes back from GPD remember I'm only doing n equals one so it's only giving me one
02:43:01.560 response back data choice is zero message in this case it will return the message back to us
02:43:08.700 okay so now we have the API endpoint done so the API end points down we have
02:43:14.040 our API key right so this entire route is pretty much set so now all we need to do is make a call right so I actually
02:43:20.460 forgot how we did where I did that so it was in the header I believe yeah so the header is where we're going to do this
02:43:26.280 so inside the header what we're going to do is we're basically going to have a fetch suggestion right so you can use
02:43:32.640 use that subur as well you can use anything here I'm just going to show you how you would do it in a typical use effects fashion okay so here we're going
02:43:39.899 to go ahead and say I firstly need access to the board all right so I need the board here so I'm going to go ahead
02:43:44.939 and get the board so I'm going to say state DOT board and again you see how nice like the stand is right it's really
02:43:50.100 easy once you get the hangover so we're going to go and say use effect right I've imported it from react and
02:43:57.000 then we've got the dependency array and inside of it I'm going to be using the board so I need the board now I'm going
02:44:02.160 to protect so I don't want to fetch a suggestion from chat GPT if the board
02:44:07.500 columns are zero so if board dot columns dot size
02:44:12.660 is equal to zero and you're probably wondering its size well since when was that in there already well no this is a
02:44:17.760 map remember right this is a map so it tells us the size as a function so if it
02:44:22.800 the size is zero then we're simply going to return yeah and then what we're going to do is we're going to set loading to
02:44:29.939 true so um in this case I'm going to have a local piece of State here for the loading okay now because I don't
02:44:37.020 necessarily need to have Global State for the suggestion in my instance I'm
02:44:42.240 going to have a loading piece of stay which is going to be a Boolean so this is basically just preparing it I'm also
02:44:47.819 going to have a local suggestion now if you want to you can lift this into you know a used AI state or AI store or
02:44:54.540 something but in this case I'm just doing this it's local it's fine yeah so I'm going to set the loading to true and
02:45:00.000 this is again a reason why you can use user use SWR would eradicate this for you so yes you can use it
02:45:07.500 um and we'll say const fetch suggestion Funk right so if you want to do anything
02:45:13.740 asynchronous you have to wrap it in a sort of asynchronous wrapper function so then what we do here is we say const
02:45:20.220 suggestion equals a weight and we're going to create a helper function called Fetch
02:45:26.160 suggestion which would take oops no that's a recursive we're going to take the board right so we're going to make
02:45:31.500 this function which accepts the board as an argument and then when we get the suggestion back we'll set the suggestion
02:45:36.840 and we'll set loading to false and then what we do is we simply execute that function okay so let's go ahead and
02:45:42.780 create this function now so inside of our lib folder I'm going to go ahead and create a file called Fetch suggestion.ts
02:45:49.140 right good morning from Mexico Papa Farm a Nigerian house as well let's go uh
02:45:55.020 negoian says let's go another detailed tutorial huge thanks from France I love you guys honestly international Man
02:46:00.899 it's so cool guys we're so close to 900 I really want this build to get over a thousand likes in this life so let's go
02:46:06.540 let's get over a thousand right so um I'm gonna go ahead and create a
02:46:11.819 function yeah we've done it so here what I need to do now is I'm gonna go and do the pharmacy const fetch
02:46:19.460 suggestion equals an asynchronous function like so and it takes a board object
02:46:26.460 sorry so it takes a board like so okay
02:46:32.100 now what we're going to do here is I'm basically going to do the following so I'm gonna get the to-do's from the board
02:46:38.399 but in a way like so so I haven't created this function yet but right now we have a map object now I want to make
02:46:45.660 gpt's life easier I want to format it before I send it to the API whereby I literally strip it down to the amount of
02:46:51.600 to-do's in each so it basically is very easy for GPT to figure out you can go ahead and ask GPT to figure out itself
02:46:57.060 but it sometimes messes it up and I'm just going to show you a lot of transformation in this in this video okay so what I want to do here is I
02:47:06.060 basically will create this now this will do an a API call afterwards and we're basically going to pass the to-do's that
02:47:11.880 we have formatted after in the body right once we get that back we're going to go ahead and do the following we're
02:47:18.420 going to pass the response with reds.json that's the GPT there we're going to get the content from it which is the response the GPT shouts us and
02:47:26.280 then we're going to go ahead and Export default um first suggestion now we need to create this helper function format to
02:47:31.560 do is for a AI so inside of here format to do is for AI dot um TS
02:47:37.020 and this one is basically going to be a function that looks something like this right we also have um Hassan says hello
02:47:43.620 from the UK currently working whilst watching the awesome stuff you can ask akil's got the positivity because you
02:47:48.660 get a million views for sure I hope so that's it exactly man um I was thinking somebody's taking you
02:47:54.899 add subscriptions and stuff yeah I will definitely do that in a in a different build thank you for the suggestion all
02:48:00.000 right Jay's always taking note of them as well so it helps out so we say const to do's
02:48:05.160 what I'm gonna do here guys is very straightforward I'm basically creating a copy like we've done previously from the
02:48:12.420 board column entries right so I've got an array now version that I can go ahead and do it now remember what I said right
02:48:18.060 what we want to do is so I you can do it two ways right this first function will
02:48:23.399 reduce it down into a flat array so it will basically this first one will reduce it down I'm going to keep it very
02:48:30.180 short to kind of keep it simple but this one will go ahead and make it a flat array which will basically have the key
02:48:36.960 so it'll be like to do in progress or done with the to do array attached to it
02:48:42.359 or array of to-do's attached to it that's good and you can send that that itself to um to uh GPT right you can do
02:48:50.340 that I would recommend you make it even easier for chat GPT and you basically do
02:48:55.859 the following where you basically reduce it to Key and length right so in this case
02:49:01.800 what I've done here is I've taken the flat array and you can probably do it even simpler than this right you can do it simpler than sorry you don't have to
02:49:08.520 have this intermediate step but what I've now done is I've just made it so you've got your key so this will either
02:49:14.220 be to do in progress done and then it will literally just be so imagine you've got an array of three here and it'll say
02:49:19.859 to do two in progress one done zero that's gonna be the arena so it's a
02:49:26.040 flattery right so it's a very easy array for chat GPT to figure out the hell's going on right so that way it's less
02:49:31.620 likely to make errors because I did trust it initially to be like oh yeah you know figure it out and it kept making mistake so I was like ah it
02:49:37.560 right so screw it okay so in that case um so I'm gonna go ahead it slips out
02:49:42.600 sometime my bad all right so let's go ahead and import this and now we've got the to-do's like so so if I console log
02:49:47.939 the to-do's what we will see when we do this I'll say formatted
02:49:53.880 to Do's to send well I'm just going to go ahead and do something like that for now
02:49:59.040 and just as a debug message okay now after that's done we go back to our
02:50:04.200 header and we simply import the fetch suggestion okay and now we have our suggestion here so what I can do is
02:50:11.280 actually inside of my header where we previously had
02:50:16.640 summarizing your tasks for the day I am now going to basically extend this and modify this so I'm gonna basically
02:50:22.920 firstly make this class name um back ticks and then all I need to do here is
02:50:29.460 basically say if it's loading I'm gonna say if loading if loading and animate Jay's laughing
02:50:36.660 yeah I know Clips so if loading then I'm saying anime spin
02:50:42.180 okay and this is freaking out why exactly um oh yeah
02:50:49.620 so in this case loading animate expensive Wireless loading it'll spin the little head all right and then what
02:50:55.080 I'll do is I'll say if it's now got a suggestion it was it will show the suggestion otherwise it will simply say
02:51:01.280 summarizing your task for the day so now what we should see is it all come together
02:51:07.140 nicely right so the GPT is summarizing your task for the day oh there we go
02:51:12.960 and then wait for it let's see if it comes back with a summary is it gonna work first time is it gonna work if it
02:51:19.080 does smash that like button guys they even done a quarter to the back end let's see
02:51:25.560 uh let's go to this one you can see hello welcome Sunny oh it is but it's not saying it
02:51:32.120 so let's debug what the hell is going on so let's go ahead and refresh and let's see for ourselves for my
02:51:39.180 attitudes to send you can see like this is what I was talking about it makes it very easy so it sends back that in that object
02:51:47.280 and then we can debug it I'll show you how I debug so that so now oh yeah look at that hey welcome Mr Sunny welcome to
02:51:54.240 about you're currently have one task to do one thousand progress and one task is already done thank you for keeping track of your tasks have a productive day and
02:52:00.600 if I go ahead and do this because it's attached to board it will go ahead and regenerate the query so GPT is
02:52:06.300 summarizing your thoughts it's an example guys right so now it says there is one task typically a zero toss in progress and two tasks already done nice
02:52:13.800 if I go ahead and pull everything over there so in this case we've got this one let's see if I dupe it up it's basically
02:52:21.060 going to make several requests but it's fine man you've got two in uh two to Do's in progress zero and down one keep
02:52:26.760 up the good work and have a productive day ahead and if I go ahead and do this we should see three interviews and none
02:52:31.979 in in progress and done look at that guys pretty cool right pretty cool right
02:52:39.000 so let's go and see obviously you can make it whatever loader you want I've just done it very
02:52:44.880 simply for now uh one I'm live I guess it's always being a bit of a headache but in this case dizzy gonna see it
02:52:50.399 where is it so that you see where we're logging out right you can actually see for yourself where it's happening
02:52:57.000 honestly the demo gods are just against me right now but it does work I promise you uh okay so that actually was a weird
02:53:04.200 failure let's try again
02:53:09.500 there you go okay so it's a few edge cases but for the grand scheme of it it
02:53:15.240 works right so in this case there you go so now what I want you to do is go ahead and obviously you can handle negative
02:53:21.420 cases if that was to ever happen sometimes GPT can you know it can error out for some reasons right so um five
02:53:28.800 fat French initially has an auto deduping function built in it does you're correct yes so
02:53:35.040 um yeah you're right actually but I'm saying if I was to do this like drive it crazy now it's making several requests
02:53:40.800 all over the place and what you'll find is it will it will pop in in a second so you see that it pops in so that it pops
02:53:48.240 in Pops in Pops in so it actually I mean it came to the right right end point but that's what I mean right the spinning
02:53:55.080 user icon is everything I know it's so good so in this case look we're making good progress guys right so I guess the
02:54:01.680 next thing that we have to naturally do is to delete let's do the delete first then let's do the modal and then we are
02:54:08.700 virtually at the end and we're going to deploy this thing so Jay I thought this was going to be a two-hour build definitely definitely more than I
02:54:15.600 anticipated we got this right quick water break and then we're gonna power through headless UI
02:54:22.939 is this build like you know is this gonna excite them I'm I was wrong you
02:54:28.380 guys love this stuff I love it all right so let's go so at this point now for the
02:54:34.560 delete function right so we're gonna go over to the
02:54:39.779 to do card boom like so and then here so the to-do card let's go ahead and do the
02:54:45.240 X Circle icon so I want to make it so that way when I do the X Circle when I
02:54:51.779 click on it it should delete the task right so I'm going to create a delete task function inside of the board store
02:54:57.779 and as I hope you can see that you can do a lot more in the board store than just simple manipulation in your data
02:55:03.000 right you can actually have like fully functional things happening here so what I'm going to do is oops
02:55:10.020 is I'm gonna go ahead and have the
02:55:15.600 um thank you so much you're welcome dude so in this case delete task I'm going to create a function for it so here
02:55:22.500 delete heart script so this one here is going to take a task index a task to do and the ID itself
02:55:29.640 and then what we're gonna do is we're going to manipulate the the database in such a way so in this case
02:55:36.060 I'll show you how we do it so we'll create a delete task function
02:55:42.240 and this will be an asynchronous function so I've got the signature here to save a bit of time
02:55:47.700 so delete task is going to be this like so
02:55:52.859 oops like so and then inside of here I'm
02:55:58.080 going to make a copy of the current um current map and this basically get a getter will give me access to the
02:56:05.760 current state and the way we get that value is you actually go up and up to the point where we had set and you
02:56:11.939 actually get a second argument here called get simple as right so here we have two columns
02:56:18.899 yeah and then once you have the two columns we're going to say we're going to delete from The Columns right so it's
02:56:25.680 very simple actually all you do is you've already got the ID of the the tasks that you want to delete so it's
02:56:31.319 fairly straightforward so we go into the column itself the ID of the column then we go to the to-do's and we splice the
02:56:38.819 task index the current to do out of it so what we're doing here is we're changing the existing state we're then
02:56:45.899 going to modify it so it seems like an optimistic update if that makes sense right so basically what we're doing here
02:56:51.120 this is all on the front end so we're basically just spicing it and then we're replacing the board with the new columns
02:56:56.340 so this will basically show on the front end there's a media okay and then what I
02:57:01.859 will do is I will basically have the following involved so I'm gonna have a delete uh
02:57:07.800 for the image as well right so if there is an image so I'm going to import this from store storage that we set up
02:57:13.859 earlier from approach if there was an image inside the to-do it will delete it from the storage bucket so this is how
02:57:19.560 you delete from Storage bucket so if there's an image on that to do it we'll delete that image as well and then I'm
02:57:24.720 deleting the actual document itself so this is how we do it okay keeping it locked Nairobi Kenya Alex thank you I
02:57:31.620 appreciate you dude all right so we've got the delete task function done so now we go to our to-do card let's go over to
02:57:37.920 the button here and here we'll say on click right so on click equals and this
02:57:42.960 will be delete task right so what I can do to make this actually a lot smoother
02:57:48.319 is I'm gonna have a uh the following so I'll have
02:57:54.680 forensic parentheses like this Arrow function delete task and then this will
02:58:00.060 take in the index the to do and the ID okay and the delete tasks we have to
02:58:07.500 pull in from our board store so this is going to come in from we only need one
02:58:13.140 thing so I'm basically just going to make it a simple straightforward pull in like this so we import the board store
02:58:19.200 and we don't need the array because we're only ever going to use the delete task inside the to do card at least okay
02:58:24.779 so now with that said what we're doing is we should see so I don't have to go
02:58:29.819 to Upright to show you how this is going to work basically if I delete this you should see a UI change so that UI change
02:58:36.600 was the local state now if I go ahead and refresh you'll see that it's no longer there from the get-go which means
02:58:43.020 I actually deleted it from upright right and I can promise you it did it because if I go to Opera and I refresh we should
02:58:49.979 see two to-do's here instead of three and they should only be in progress there you go perfect right so as you see
02:58:56.340 everything is working really nicely the way we want it uh this is a an old localhost window that's why I said right
02:59:03.600 cool so now the next up what we're going to do is the Headless UI integration so headless UI is this beautiful pop-up and
02:59:05.000 No text
02:59:10.920 this beautiful pop-up is going to have a bunch of things involved in it so headless UI is actually a really great
02:59:16.380 Library it's basically built by the guys from tailwind and they're fully accessible UI components which means
02:59:22.560 when you're on this screen if I click outside it closes it if I if while I'm typing in here if I hit tab I go to this
02:59:29.279 part if I hit down and up on the Arrow key it goes through and then if I tab through it goes to the image if I hit
02:59:35.460 enter it opens up the image picker then it will go ahead and show this I can tap hit enter adds it to do so you see the
02:59:41.279 point if I hit Escape at any point it closes the model so this is what we call accessible right so this is what we're
02:59:47.279 going to basically be building so what I want you to look at is the dialogue the modal that's what we're going to be
02:59:52.500 doing so this is exactly what we're essentially doing here right so we're going to go ahead and npm install
02:59:58.200 headless UI react okay so we're going to go ahead and install this command J bring this in
03:00:03.960 goes like this and do the following and then while that's happening I'm going to go to my API generate summary and I'm
03:00:10.319 just going to stop logging everything out because we don't we know it works now I'm going to keep our code a bit neat
03:00:16.080 there we go that was more of a debugging step okay and then what I want you to do is
03:00:21.899 you can see the example here now I don't need to basically dive so far into this
03:00:27.300 because their documentation is actually fairly pretty like it's pretty good all right so what I want to do instead is I
03:00:33.300 want you to look at this example and as you can see they've got this dialogue and then you've got dialogue panel title
03:00:38.760 description and then you can basically build it out accordingly now I want to go ahead and use something called a
03:00:46.319 transition so there's actually a transition here so this one right here so you've got Transitions and then
03:00:53.340 you've got dialogue panel and so forth right so we're actually going to be using the transition and we have the
03:00:59.460 transition child as well so it's this example right here so if you scroll down to Transitions you'll see this block of
03:01:05.819 code and again the reason why I'm showing you this is because it saves you time because you don't have to do it all yourself right so what I'm going to do
03:01:12.180 is as a step one I need to make a new function called a modem what I'm going to do here just to make life easier is
03:01:18.420 pop this onto a new screen like so so we can kind of scroll between it so I'm going to create a new component called
03:01:24.620 modal.tsx rfce to pop open our model guys we just blew over 900 likes Jayden
03:01:30.180 tell me what the hell that's crazy oh my God we're near a thousand likes there's goal that's so sick oh my God right so
03:01:38.160 now we've got the model so what I want you to do is I want you to basically grab this block okay so grab the entire
03:01:44.399 block right so we're going to be used to using so I want you to pop that in and also at
03:01:49.800 this point you can really yeah it's okay I'll show you pop it in go to here my dialog will become modal okay and as you
03:01:56.040 can see that this is going to be a client-side component so this is going to be used client okay so to save us a
03:02:03.120 lot of time right because that is honestly we're basically doing the exact same thing that they're going to be doing except we're going to refactor it
03:02:09.779 so the state of the modal is stored in the uh use modal store which you haven't
03:02:15.359 yet set up okay so right now we can't determine when this is open or not right
03:02:20.399 right now it's just a random bit of stuff that's going to be there so I want to basically refactor this a little bit so we can do something cool with it so
03:02:26.819 right now I need you to export default model so we can access this object that's cool and then I'm going to create
03:02:32.160 a new store now which is basically going to keep track of the modal stuff so in this case we've got broad store but we
03:02:39.060 can do another step and we can have something called the modal store so here I'm going to say
03:02:44.660 modalstore.tsx.ts sorry and then I'll show you in short what we
03:02:49.680 are going to do this is the entire store we've got the state there's three things inside of it is open and then we've got
03:02:55.680 like uh open model closed model Master oh my God how are you able to go for three hours non-stop honestly it's
03:03:02.340 practice it'll come with practice sorry yeah then we've got the use modal store here create the model state so it
03:03:08.100 basically pops open here and then we initialize is open by default with false because we don't want the bloody mode to open straight away then we've got
03:03:14.040 openmodel which basically sets it open and we've got closed models it's just to false right so basically in a nutshell
03:03:19.500 that's how we're doing it now I can use this the exact same way as we were doing it previously right so honestly I'm not
03:03:25.380 joking if you want to learn how to do all this and kind of you know get on fire like that level we I honestly ask
03:03:31.500 people in like by picture in the community chat they're trying they're literally in the chat right now this is how it is inside the papa Farm in the
03:03:38.160 coaching course in the community I'm teaching you this stuff every single week on coaching calls so there you go
03:03:44.760 guys all right so ask yourself that's why I recommend you join zero to full stack hero second link in the description join us at the best your
03:03:52.380 best family period of developers right lifetime access is amazing all right so
03:03:58.140 now here we're going to refactor this from that Year's open to we're gonna say
03:04:04.979 um const and yeah we're going to say const I'm gonna say hey is no sorry uh
03:04:11.220 I'm getting so blank here one second yeah cons is open
03:04:16.620 is open and we also have a closed model inside of here close model
03:04:22.859 from use modal store State and then we basically need to get
03:04:28.200 the two things whether it be state DOT is open and state.close modal parentheses close we can then get rid of
03:04:34.740 this and as you can see is open is already working the way we want it but on close all we need to do is simply say
03:04:40.740 close modal and that simple refactoring allows us now to basically use Global
03:04:46.800 State instead of the state that they've used right you can feel free to take a look at all their Transitions and stuff
03:04:51.899 but right now we're just going to get this set up right quickly yeah so on the to do on the column now we have the plus
03:04:59.340 the green plus which was here plus Circle icon so on that column I want to
03:05:04.920 be able to open the uh the column when you click it okay so what we're going to do is we're going to go up to the top
03:05:10.200 where we have our Imports and I'm simply going to go ahead and pull in the open modal from or use modal store now simply
03:05:17.640 put all I have to do let's go over to my plus Circle icon and on click I simply
03:05:23.520 pop in open modal so what this does is when I click the green button now it
03:05:28.560 will open up the model now as you can see I think I need to just change one more thing I believe I think we're good
03:05:34.740 actually yeah so let's go ahead and try it out okay so let's go back over so now when I press my green button so let's go
03:05:42.840 ahead and make this full screen green button let's refresh I don't think I'm rendering my Moto
03:05:47.939 anywhere though that's the thing yes I'm not rendering the model anywhere so I think I have to play it yep yep there we go so my bad uh don't do that
03:05:56.100 uh of course the model is not actually rendered anywhere yet so what we've got to do is where we render the children at
03:06:01.979 the top top level I want my model to appear right so modal like so you can have nested models whatever you want to
03:06:08.340 do I in this case I'm doing it like this C1 modal okay and then
03:06:13.920 now what we can see is if I click on plus oh we get a deactivate account right and obviously that's not looking
03:06:20.460 very pretty so I haven't got the styling here so I'm going to show you but as you can see it's almost something it's
03:06:26.760 something it's almost something right but you can see here like I've got if I press Escape my model is opening and
03:06:32.580 closing so if I click I can click out I can press escape and it's there so let's get the styling done now as well right
03:06:40.439 so let's get the The Styling sort of nailed in so we can make this look beautiful okay so I'm gonna go ahead and
03:06:47.220 show you how we can change this entire thing now so the transition we're going to say up here oops sorry
03:06:54.420 um so a few changes need to happen so transition should be up here okay the dialog is going to be
03:07:02.580 um on close sorry that's my bad and then we're gonna have a uh This is Gonna render as a form
03:07:08.700 okay this will be a form that we're going to basically pull up right and then we've got a class name
03:07:14.819 this is going to be relative relative and this one's going to be Zed
03:07:21.960 of 10 because it should come in front of everything okay we've got all of our Styles accordingly
03:07:27.540 we've got the fixed in the set and I'm going to change the div style here right
03:07:33.720 so this div I'm going to change it to be the following so I want to have that one instead fixed instead black background
03:07:40.080 black with the opacity 25 so it basically dims out the background a little bit yeah the background and then where we've
03:07:47.580 got transition child so here so this is where mine's different to this yeah so I I can't remember where I got my example
03:07:54.120 from but I modified it heavily um I believe it was styling the dialogue
03:08:00.660 yeah it was a mixture of this so if you go to styling the dialogue you can actually get the Styles right
03:08:07.680 so yeah I actually had this in there as well so what you can do is on styling
03:08:13.620 the dialogues I kind of want to show you so you can just copy this as well
03:08:18.779 so right here so I want you to grab
03:08:24.240 this one with tech center P4 I'll tell you what I'll tell you what I
03:08:30.180 did I'll do it this way so let's have I'll show you what I've done and you can just pause the video and
03:08:35.939 just add it in yourself that's that way you can you won't miss out okay so on the transition child fragment I want you
03:08:43.319 to go ahead and just pop in the following so see this div so we've got a fixed intercept and then I need to go to
03:08:51.300 the surrounding transition child so when I mean surrounding transition child I'm
03:08:57.720 talking about here we've got two why have we got this we're gonna need this one we get that one get rid of that
03:09:03.540 we're gonna have a div after this one so after this transition chart we're going to close out the div we're going to
03:09:09.420 close out this div hit save okay and then inside of the transition child
03:09:17.040 we have the following so yeah that's correct no
03:09:25.279 dialogue form yes okay that's correct okay I now know what we're doing yes all
03:09:31.979 right so mixed up for a second so you want to have a transition child for the backlog backdrop yes that's right so you
03:09:38.100 wanna one transition child with that background opacity and then your second one is for your container which makes
03:09:43.620 perfect sense now because this one will be the one where you basically have the
03:09:49.200 panel and everything displayed that's right so then we have the dialog panel okay so the dialog panel now is going to
03:09:57.720 be so what what I would suggest you do is I'm trying to find the best way to explain this to you so
03:10:03.600 let's have the dialog panel first okay so this is a dialog panel and I've
03:10:09.779 I've applied a bunch of styling here you can feel free to just take your time and copy out then we've got the dialogue
03:10:14.819 title and I've started this out for you A lot of it is all around making it centered all of that good stuff okay
03:10:22.020 so here at the top so I just want to show you we've got the ad exhaust button and so forth and then I'm gonna have a
03:10:27.420 div with the ability to add some information inside as well I'll add that one after this but right now let's just
03:10:33.420 test this up so let's go to Trello 2.0 clone let's go ahead and refresh and that's hard add in
03:10:39.960 so you can see there we go there we are that's another spell so one of the transition chart was for the backdrop
03:10:45.779 the other one is for the center that's exactly what I wanted yeah and now we are basically gonna go
03:10:52.080 ahead and add in the input field and all that good stuff so what we're gonna do is we're gonna have
03:10:58.380 a input type of um set task so new task input so this
03:11:06.300 one is going to be the task input and this is going to be in the global store because we need to know that beforehand
03:11:11.700 we need to have access to that so I'm going to add that in Here and Now new task input we're going to create a piece
03:11:17.279 of State inside of the board store so let's go into Board Store
03:11:23.340 and let's do it here so set task input so new task input is going to be here
03:11:30.420 like so and initially this will be a blank value
03:11:36.000 and then we have set new task input and set new task input there's no reason
03:11:43.380 why I'm putting it wherever I am you can honestly mix and match them so I'm going to put this one down here just separate
03:11:49.020 some of it as you can see yep sent new task input and then go down here and this one is basically going to
03:11:55.500 be a function like so so it'll be just pop it in there
03:12:01.080 so this one's basically takes input sets the new input done okay then we go here and we need to import them in from the
03:12:07.680 board store so that's the modal store so now we need to go ahead and grab it from the
03:12:13.859 um board store so uh I need to get a bunch of stuff actually from there so let's go ahead
03:12:19.979 and just add it in one bonds with your coins new task input new task input set new in
03:12:26.460 task input and we basically map it accordingly like so uh it says it's not there that's
03:12:33.120 interesting what have I not done so oh okay use a board store
03:12:38.279 see typescript Saves the Day and then that will know
03:12:43.620 all right so this is looking great guys we're almost at a thousand likes let's go oh my God right so now you can see as
03:12:52.200 they enter a task so that's great if I go ahead and do at oh look at that nice if I type out now you'll see it's part
03:12:59.040 of the global store so it's still there right so this is looking great Marcus says
03:13:04.680 goat that's what I'm talking about dude all right so now we've got that that's looking perfect
03:13:10.560 so the next thing is we need to create this radio group right so this radio group being here I need to have this
03:13:16.680 really nice group yeah so we're going to create a component to handle all of that right and that's going to be in global
03:13:22.380 State as well so it's gonna be a radio group radio group I'm gonna call it the task type
03:13:27.840 radio group okay and again these are all coming from headless UI so I've got
03:13:33.359 examples and all that good stuff so again if you're wondering how did you get this code blah blah blah one it will
03:13:38.520 be in the papa repo and two the documentation and have this UI it literally has these examples so you can
03:13:43.560 take them okay so I'm gonna go ahead and make a new component air called task type
03:13:50.240 radiogroup.tsx sorry my bad or TSX right rfce
03:13:57.540 and then what we want to do is basically go ahead and create this so uh I've
03:14:05.580 actually got an example let me see if I can show you the example so if we go to headless UI and we go to Radio group
03:14:12.779 here so you see this right this is an example very similar to what I've done right so here you've got your example
03:14:19.920 and so forth so I want to actually go ahead and change it to what we have so
03:14:26.700 uh you know that's great I'll show you my one instead let's do my one um
03:14:33.800 [Music] so what we have is I need to create a
03:14:41.279 type of all the different options are going to be available to us right so the first thing is we've got the three types
03:14:46.620 we've got types is an array and it's going to be id2 to do name description and the color the color will represent
03:14:53.520 the color and you've got the title description and then the ID and that's going to ID is going to correlate to
03:14:59.399 what we go ahead and map okay you can you can go ahead and do that
03:15:04.979 yeah so the UI looks seamless yeah it's really nice honestly yeah so now we've
03:15:11.220 got this looking pretty soon like solid and then this will actually be a used client component because it's already
03:15:17.819 rendered but by default it will know that because it's being rendered in yeah the first the rafc does a react
03:15:25.740 functional component okay then what I'm going to do is pull in the use board store so the task type
03:15:31.439 but now what we're going to do is we're going to store the user selection so this we're going to refer to in the board store as task type right so new
03:15:39.479 task type so what I'm going to do is I'm going to set it up for us so we're going to use board store so I need to create a
03:15:45.120 set new task type and new task type inside of our board store so let's go over to board so
03:15:50.340 go to the top both a new task type will basically be I
03:15:56.700 believe it is a typed column yep so it's going to be a typed column and then we've got this set new task type which
03:16:02.640 is going to take a column ID like so okay now for the set new task
03:16:08.939 type we're going to have a very similar approach to what we previously did was the other one just put under there
03:16:15.960 okay and now you can see we're good so what's freaking out here new task type oh yeah I need to give an
03:16:23.939 initial value so if we go to the top here boom like so new task type sorry
03:16:31.920 there you go and now this one's freaking out because we do not have a new toaster oh that's because it needs to be my bad
03:16:37.800 it needs to be one of these so to do so we'll start off with the to-do Top Value so
03:16:42.840 that's great now we've got the values working over here so now we can hook it
03:16:47.880 up in the way that we expect it to so what I would recommend is you can honestly go ahead and take this and like
03:16:53.340 basically change it up as you need it but what I've done is made your life always easier so we've got a I'm gonna
03:17:00.660 have two divs so let's just take this out the equation and I'm going to have two surrounding divs
03:17:08.180 and then I'm gonna have another div here okay and then in that middle div it's going
03:17:14.520 to be where we basically Nest all of these options right now inside that
03:17:19.560 middle div what we do is we have something called a radio group right so in that radio group I'm just going to
03:17:24.840 keep listing out so radio group we have like so we import radio group from let's go here
03:17:30.899 from headless UI and as you can see we've simply on the change of the radio group selection it will modify it okay
03:17:36.840 and then headless UI handles all their complex stuff there you know they're really kind of cool quirky stuff so
03:17:42.120 inside of there we're gonna have a div yeah and this div will have a space so class space y of two
03:17:50.700 now here we're going to map through all the types okay so all of the different types here we're going to map through so
03:17:57.420 this is quite a big chunk to be honest um what I will do is I will show you the
03:18:04.620 entire I have two options here I want to show you I kind of want to just dump it in and show you because a lot of it is just
03:18:10.560 styling yeah I think we're going to do that I'm going to show you all right I'm going to chop it in because honestly it's just a
03:18:17.340 bunch of styling and I can explain the whole thing so between these two divs I'm just going to add a bunch of cards here so I'm literally just mapping
03:18:23.640 through with a bunch of styling okay so I'll show you exactly what we've done here so we're mapping through all of the
03:18:28.800 types we're mapping through all of these three types this one this one and this one each one is a radio group option the key
03:18:35.880 is type ID the value is type ID and then it's got a class name and you get these render props called active or checked
03:18:41.819 which allow us to know if that group or that selection is active or if it's been checked or not okay
03:18:47.819 so what we've done is we've dynamically started accordingly if it's active it will have like a ring around it a bit
03:18:53.580 just a bunch of styling and then we've got a relative bit of styling around it okay and then what I've done is I've
03:18:59.819 rendered a inner thing so this is that's the actual option itself then inside of
03:19:05.160 the option I've rendered the actual label so this is going to be the name the description all that good stuff and
03:19:12.060 then the circle icon I'm actually going to go ahead and pour this in as well so now if you basically go ahead and
03:19:18.000 checked it it will have a circle next to it okay so now we can go ahead and enter that so in a nutshell you can pause it
03:19:25.080 take your time over that but I'll be honest with you that's just styling and a bunch of other stuff and it renders out as a P tag as a span and so forth
03:19:32.100 okay so I didn't really want to spend too much time on that but you can get the access to the code in the public get our Repro and we literally show you all
03:19:38.700 of it okay now inside over here I'm gonna go ahead and just bring my
03:19:43.920 lighting a little bit up because it feels really dark there we go
03:19:49.020 that's about now what I'm going to do is I'm going to go to my
03:19:55.160 modal and I'm going to basically pop it in all right so this one right here import
03:20:01.080 from our thing and now if we go over to our trailer 2.0 oh look at that oh my God it just surprised me with Beauty
03:20:07.260 look at this wait for it so we go ahead and press this oh lovely yeah and look
03:20:12.840 if I Tab and I press down look at that guys so beautiful and if I hit enter it might
03:20:19.800 not nothing's happening because I'm going to submit yeah but we can type in this file you saved and just to show you you see that it's actually saving that
03:20:26.819 value we wanna we're eventually we're gonna do it so if you click to do it or what I'm actually be on to do if you click done
03:20:32.460 it automatically undone and so forth so I'll show you how we do that as well
03:20:37.740 right so yeah that's cool that's that bit done which is sick
03:20:41.000 No text
03:20:45.000 um we can go into the modal and we're simply going to have the file input now as well so the file input so here this
03:20:52.140 is where you can have a file picker option okay so here this is crazy it makes me think how much code do I write
03:20:57.720 sometimes damn okay so here we're gonna simply have an upload button for the file so this one is basically going to
03:21:03.540 be this upload image button okay so what we're doing here is we're actually going to go ahead and hide a um
03:21:10.680 an upload button so like an input field right so there's a special input for like a special trick to going ahead and
03:21:17.939 hiding something so what you do is simply pop an input fill it in like so and we need to create a reference to it
03:21:24.359 we make it hidden but we make the type file right and then what you do is you say on change and then you can basically
03:21:30.300 do a bunch of stuff with it so I'll show you exactly what we're going to do here firstly we need to have an image that we
03:21:35.880 store in the global State and we need an image picker ref locally that we can attach to but basically the goal is that
03:21:42.000 this is essentially a UI element when you click here I'm tricking it by using the same ref to click the input so it
03:21:48.960 thinks it's clicking so basically you're clicking up something else but it's reference is clicking the input the
03:21:54.660 hidden input right and then it basically opens the file pump so it's a very nice little trick inside of this right so
03:22:00.180 what we can do is just firstly handle the reference picker so you can go ahead and do the following
03:22:05.520 we import use ref like so go over here handle elements trigger we've done and
03:22:10.800 then set image is we need to go ahead and do so in this case we're going to go to the board store and we're gonna add our image we're
03:22:17.460 gonna say image and this one I believe we do have an image no so it's a file or no it's not a
03:22:24.420 cleaner way to do that to do what part sorry
03:22:29.520 oh to do the hidden the hidden image thing uh the input no I mean that's the
03:22:35.040 way I would say do it but you can do it in many I'm sure there's another way but like I've seen that in production builds
03:22:40.979 a lot like people do that because then it's also web scrapers are seeing that as an input which you can select right
03:22:48.300 so that's why sometimes it's kind of good to do that um
03:22:57.300 so let's go ahead and pop this in here and then for the set image I'm going to go ahead and make it very simple it does
03:23:03.899 make sense now no problem dude good question so in this case I'm going to pop it in here
03:23:09.060 and uh set image and then the image needs to have a default value the image can be null to begin with this is a file
03:23:15.779 so it's fine with no value there you go save um
03:23:21.899 that wasn't oh that's that's strong thing as uh we've got some strong members in
03:23:28.620 the course that would highly deny that so in this case
03:23:38.100 um I don't like the negativity here out out of here all right so in this case we've got this
03:23:45.420 we've got members in the course who love it right so honestly Drives Me Crazy Jay keep on it
03:23:51.840 so in this case we can add a task you're always gonna get haters in any
03:23:58.020 and any thought you're gonna get here so here's what it is but we don't tolerate it why all right
03:24:04.380 in this case we're gonna go ahead and do uh I've lost track now while doing set image yeah so set image
03:24:11.760 we're gonna go ahead and do uh use Board Store we're going to say image set image
03:24:19.739 State your image um papizzi because it's funny to see
03:24:26.100 honestly I know right it's crazy because Papito is a proper member in the bubble fam so me is remember like it's crazy to
03:24:33.479 see like as in speak to real members guys it blows my mind when we hear stuff like that but yeah
03:24:39.540 I don't I've never even heard of that guy right Sunny is one of the few YouTubers that
03:24:45.180 can actually survive as a Dev that should say oh thank you Ed Harris I appreciate that that is what I'm talking about
03:24:51.060 you know as in I've done production we do production work that's what I'm saying like because I I my teaching
03:24:57.479 comes from a lot of real pain like a lot of pain in the production environment so I am literally talking from the stress
03:25:03.840 of day-to-day coding so yeah it's funny but yeah we're popular way stronger than
03:25:09.660 that right so now we basically set the input so this is a hidden input now so now we can do some magic around it so if
03:25:16.979 we go to the modal and we do the following
03:25:22.890 [Music] um import what is it yeah so now I'm gonna
03:25:30.000 basically say where we have the button
03:25:36.600 in the UK we call people like that a waste man
03:25:43.279 so I'm gonna pop this in there and then I've got my sorry I'm gonna put it
03:25:48.840 inside the input there we go so this div right here we are this is
03:25:55.739 why I basically check and say if I've got an image then I want to show like a preview of it right so I'm going to use
03:26:01.020 the next JS image tag to do that so I'm going to say next year's image tag source and I'm going to basically use a
03:26:06.840 URL create object URL from the image now this is going to be important because we're going to basically
03:26:13.439 we are going to use the image that we set later I'm going to still set
03:26:18.960 fix that step up but um yeah this is going to be something that we need to do in a second but I'll
03:26:24.120 show you that in a sec right so we've got the image here and I need to go ahead and do this
03:26:33.300 hit save thank you so much Evan appreciate it all right Ed Harris you can tell you've been
03:26:39.359 through the pain during honestly man I'm one of us exactly dude I love it that's that's the true you know you know you're
03:26:45.540 speaking to devs when you uh you can relate on that level okay what's happening here why is why is
03:26:52.739 this freaking out what is missing all right yes because now I've approached property is this okay there you go bam I didn't
03:27:01.380 import the right thing so that will obviously break because it will be asking me um you haven't whitelisted you know at
03:27:08.040 the Domain so I'm gonna do on click here and then I'll say this one should set so basically what I want to do is if you
03:27:13.979 have an image here selected it's gonna when you hover over it it's gonna become grayscale with like a no cursor not
03:27:21.000 allowed icon but I've basically done any UI sensor if you click it and then it gets rid of it right so
03:27:26.220 that's how we're doing it so set image of null
03:27:34.500 and then um yeah that's it yeah cool that's good yeah so basically when you click that
03:27:40.260 image it's gone yeah that makes sense we're done then I think I haven't got
03:27:45.300 the current fancy looking upload image button that's what I was missing so my div here above
03:27:52.319 my yeah here there we go this this bit was a bit of a tongue twister in my head
03:27:57.779 to get around so there we go so upload image upload image I'm also gonna have a photo icon next to it so photo icon and
03:28:06.540 this one can have a class name of height of six width of six and margin on the
03:28:12.000 right of two so it's not touching inline block now you're probably wondering is it touching because this I'm gonna make a flex
03:28:17.640 so this one's going to be a table I'm Gonna Save myself a bit of time here because we've got a lot left so it's a bit of standing for the
03:28:24.420 button to get to look like you see here that right there
03:28:30.359 so uh that's good now when you click this fake input button basically what I'm
03:28:38.100 going to do is I'm going to say on click right and this one is basically going to say the image picker ref so image pick a
03:28:45.000 ref dot current dot dot click right so basically what this will do is you can
03:28:51.000 basically protect yourself with this optional chaining but now what this does is it essentially clicks that hidden one
03:28:56.460 that hidden file picker so that way you don't get the ugly file picker you get this one right after episode how do you
03:29:02.880 do so much coding that's what I'm saying it takes time and practice right like man if I was faking it I swear to God I
03:29:09.600 would be so that would be so much effort for the gain right all right so in this case there you go so now if I click the
03:29:14.819 upload image we should see a file picker I'm not gonna show too much there we go I'm just
03:29:20.279 gonna hide it a bit um so I don't want to show something I
03:29:27.359 shouldn't show okay but the point is it works okay so
03:29:33.600 if I was to go ahead and show you that so if I click into this trust me that works I just did it right so I'm going
03:29:38.880 to do it and now and you show you'll see it that it okay anyway the point is at least it's there it's it's there all
03:29:45.899 right we have it right so you can see a file picker I just don't want to show my my stuff and it keeps going to the same
03:29:52.800 folder which is been annoying so in that case that works right the file picker so let's go ahead and I'm just going to pick a image right now so screw it I'll
03:29:59.520 show you something once again um so I'm just gonna pick the Trello clone which is a thumbnail and you see
03:30:05.460 it closed right the reason why it closed is because it was submitting because that's the only button there so what it
03:30:12.120 does is it by default thinks that that's the submit button so you say type a button and it does it that way right oh
03:30:18.500 Christopher's first live show glad I could make it I'm glad you can make it too um
03:30:24.800 yeah man live streams are hard I'm telling you like that you gotta it takes a lot of time man yeah I mean it takes a
03:30:30.180 lot of time to get this down um and it takes practice and yeah but I appreciate you guys that's the main
03:30:36.120 thing all right you guys are absolutely awesome so close guys so close so let's go ahead and check out so in this case
03:30:41.939 now if I was to upload so in this case if I upload Trello clone you can see now look I have this and if I click it it
03:30:47.040 goes away so that way you've got this um they're all the thumbnails anyways it's fine yeah so in this case it pops
03:30:53.100 up and as you can see now we've got that so my decision now is if I've typed in a title I wanted to go ahead and show add
03:30:59.760 task right um thank you Ed appreciate it so in this case we've got the underneath the div
03:31:07.859 I'm gonna have another div with a button inside of it and in here I'm going to say add task Okay add task now this one
03:31:16.200 I've got a load of styling on it because it's got different states and focuses and everything so I'm just gonna show
03:31:21.840 you what I end up putting in but it's fairly straightforward like because then if you actually just take your time and
03:31:26.880 read it it's inline Flex just five seconds with a bunch of basic styling here but when you hover over it it's got
03:31:32.399 an outline and when you focus means when I basically have like when I highlight it so now if I show you this you see
03:31:38.580 like if I tab tab tab you see when I tab it's got the focus ring that's what the focus visible ring part is okay now for
03:31:46.080 this part this button should be the submit button so if I wanted to submit it should be that one right and then we
03:31:52.800 want to say disabled if I do not have any task input okay now you can see if I don't have any
03:31:59.939 task input it disables that button okay so what's awesome about this now guys is
03:32:05.399 not only is this looking pretty good right so if I go to the top div something's bothering me one second
03:32:12.060 you get you know you get OCD about things when there's things like this like that you can spot from a mile off
03:32:17.399 so class name margin top uh two and there's also
03:32:24.560 yes I want to see some unit tests oh God damn it you sound like my um my old uh
03:32:30.600 my old project manager now I I will I'll make a video on on unit testing Cyprus I do it in the
03:32:35.880 course actually to be honest with you you know so in this case now so you can see if I was to type in like sun that
03:32:41.939 take dogs for a walk and then if I do tab the up and down arrows tab upload
03:32:49.620 image Enter key click on something tab Enter key bam you see what it did it's
03:32:55.319 submitted which is wrong I'm gonna change that logic but the point was is that it's fully accessible I'm using
03:33:00.899 keyboard shortcuts to navigate that so this is why headless UI is really good um just as a heads up okay
03:33:07.200 heads up okay so that point people are like Sonny you've been coding too long
03:33:12.899 so what happens when you go too long you get weird all right so at this point we've got the dialogue and then I'm
03:33:19.200 gonna have the on submit that's the final part here so we've got the on submit so as form here I'm going to say
03:33:26.220 on submit handle submit now this one handle submit I'm gonna go ahead and make a function at the top say const
03:33:32.340 handle submit equals e and then basically I've got a nice trick here so and this is my coaching students love
03:33:39.540 distance zero to full stack hero where basically if you don't know the type definition here's a here's a trick
03:33:45.779 though I promise you will change your life yeah so look go to here type in e because then make an arrow function
03:33:52.439 hover over it and now that's the perfect on submit as in like every time you
03:33:58.260 don't have to do the manual work and headache of it and all that stuff you just grab the form event and now I'm comment this out and boom
03:34:06.840 do the relative like the appropriate Imports and now you have the perfect type
03:34:12.060 definition you don't prevent default to make sure it doesn't you know do anything like that we're going to do some defensive coding so if there's no
03:34:18.600 inputation do anything anyway and then we're going to have an add task button set image to no and we're going to close
03:34:24.239 the model so I'm going to go ahead and pop in the final part there set image to know and close model but here we're
03:34:30.720 going to do an add task now I need to create the add task which is fairly straightforward we just don't have it
03:34:35.880 yet so what I'm going to do is I'm going to create eventually it'll be something like this it'll say add task
03:34:42.359 and then this one will be something like add um let's do it here so state DOT add
03:34:47.819 task groups add task okay why is that freaking out now
03:34:54.060 um yeah there we go okay so State the add task use board store I'll go into my okay no that one or store
03:35:01.380 and here where we have delete task I'll edit here so add task is going to be
03:35:07.760 containing the following so it needs a bunch of data and this is basically going to push it into the database so
03:35:13.620 you can see we've got the add task function here that's the signature I want to use and
03:35:18.840 then we're going to have a bunch of data to basically push this in so this is probably the bigger the bigger chunk yeah this is
03:35:26.160 definitely a bigger chunk of what we need to do so let's go into the the bottom I'll play right at the bottom
03:35:32.580 so here I'm going to say add task now inside of here is basically going to be responsible for quite a lot right so
03:35:39.060 this is going to be responsible now for the image uploading because basically if you have selected an image now we need
03:35:45.180 to upload it to the correct storage bucket and then we need to get the URL
03:35:50.300 and put that inside the image and then we need to upload that then we need to update all the UI in the on your Global
03:35:57.000 state so I'm going to show you how to do all of that it sounds really complicated but I promise you it's not actually that bad all right so at this point we've got
03:36:04.920 um that file equals image or undefined so when you've
03:36:10.859 got a file here and then basically I'm going to say if there is an image we need to do an image upload so I'll show
03:36:16.800 you this and I'll explain each chunk okay so if there's an image file uploaded equals a way to upload image
03:36:22.979 now this upload image we need to go ahead and actually create this function all right so I've created this helper
03:36:29.520 function for us so we're going to pause here I'm gonna go into our lib we're going to create a upload image TS uh oh my God
03:36:37.979 we're nearly uh firstly how can so many people store what is it's not yeah secondly we're like nine likes away from
03:36:44.880 from uh damn uh somebody says don't forget to add to the end of the function that you assigned to click listener
03:36:50.220 Sunny uh which which function was that by the way let me know let me know because I might have slept yeah
03:36:57.060 um upload upload image let's do it here so upload image
03:37:03.060 you're right actually yeah you're right um that was in
03:37:08.100 um where was I just at I've completely lost it if you can tell me it'll help me out all right so at this point I'm gonna
03:37:13.739 pop in the function and explain it so this all this is doing is it's basically a function that will oh guys I have to
03:37:21.120 say it I need to say a thousand likes that's what I'm talking about I have to celebrate every time because it's just
03:37:27.300 it's so nuts like I honestly can't believe you guys I thank thank you so much you guys are awesome honestly I say
03:37:34.080 I haven't bought my own heart all right so this is actually that is a huge a thousand likes in the Stream I didn't
03:37:39.420 expect that that's huge thank you so much guys all right so at this point this file uploaded is actually the I
03:37:45.779 forgot to make this a environment variable but in this case I'll show you like I don't mind showing this one so I
03:37:51.600 mean you would set this as an environment variable to be honest so let's just rather than do that I'm just going to set this one manually
03:37:58.020 to save us a better time to be honest but here to do storage what you do is you go to your storage
03:38:04.800 and all we need is um yeah I I got your idea so you copy
03:38:11.220 the bucket ID okay so this one if you hover over it you'll notice it says bucket ID so this bucket ID in this case
03:38:17.460 was that then what I'll do is ID unique and then we pass in the file so I wanted to have a unique ID which is passed in
03:38:23.520 from upright and then it will return us the file after it's been uploaded so it's fairly straightforward inside of
03:38:29.399 here this is where it was so it was here thank you dude there you go my guy thank you that's what we're
03:38:35.939 talking about that's how I know you guys are focused so in this case upload image
03:38:41.520 and now you can see what happens is if there is an image cons file uploaded this will basically go ahead and upload
03:38:47.399 the image now what will happen is um oh dude that's huge Peter Wilson says thank you for these videos I'm finishing
03:38:54.060 my unit my software University and software engineering degree but your videos have taught me more about industry knowledge than five years of
03:39:01.020 University have a great stream Jay screenshot that that's huge thank you so much dude that's an amazing comment I'm
03:39:07.620 blessed that I could help you out of that way so thank you so much for tuning in man that's huge if a fire was uploaded
03:39:14.279 successfully we're gonna basically take our variable which was either an image or undefined and we're gonna set it up
03:39:20.580 in this way remember bucket ID file ID that's what we went ahead and set up right so that's basically handling the image
03:39:27.479 uploading section and now what we do is we can handle the next part so I would
03:39:33.120 have uploaded an image then what you want to do is you want to create a document okay so creating a document is
03:39:39.660 fairly straightforward right so the next part is we need to add it to do what we
03:39:44.700 do is we pop it in like so away databases create document we can import the ID from app right and we've got the
03:39:50.160 database ID collection ID this is the to-do's collection we're saying add a new document with a unique ID
03:39:56.700 this is going to be a title status and remember we did before the same trick with the file we're saying if it exists
03:40:02.220 then I want you to add in the file the file being the image all right so this is actually the image here okay the
03:40:08.160 image is it the one that we passed in but I didn't want to mix it up so it said file so then that way you basically will get an image attached to and we're
03:40:15.540 stringifying the image remember so this will be like if there's an image we're stringifying the backyard IDE the file
03:40:21.540 ID all that kind of stuff because it's just text right so it's easy to do now what I'm going to do is I'm going to destructure the response to this
03:40:28.680 with the following so we should get the ID back so I need the ID right so once we've added that now what I can do guys
03:40:36.180 is I can go ahead and set the new task input as blank firstly so that way uh
03:40:42.120 when you open up another modal it's set in the right way then what I want to do
03:40:47.279 is basically have the um the front end react accordingly okay so what I'm going
03:40:53.880 to do is I'm going to set the state to be the correct um the correct yeah the correct thing I need so basically
03:41:01.979 I'm going to do a big set statement here so we'll do set like so boom and inside
03:41:07.380 of here what I'm going to do is I'm basically going to make a copy of the columns remember a mutable pattern we
03:41:13.500 don't like to modify existing objects we should always do a you know a better way then we're going to grab the to do that
03:41:19.260 we would have added so this is basically making our own optimistic update so this is where the front end is going to go
03:41:24.720 ahead and update and so forth right you Camille said yes and remember I remember learning with you dude I remember as in
03:41:30.420 I remember Camille popping up on stream uh three years ago and now I'm a senior there that's huge man thank you so much
03:41:35.700 for sharing that that's awesome Jay Jay screenshot that that's cool I actually remember a camel popping up
03:41:42.540 on the chart um so what we're going to do is we're going to get the column that the person has entered the to do into so in that
03:41:50.340 case if it was in progress or so forth and then if there was no column then it's going to set the column ID and
03:41:57.120 add the to-do otherwise it will get the current column and push in okay so in this case we actually already do this to
03:42:03.300 be honest with the first set but it's like a it's like a a backup if that first step failed right
03:42:09.779 so when we fetch the to-do's we actually were fixing this Muhammad thank you so much for the five dollar donation
03:42:15.359 appreciate you man that's huge so once we've got the new columns all set up we're simply going to return the board
03:42:22.319 itself there you go it's coming in there nice
03:42:28.080 and then we will pop in the new columns and themselves okay so now what we should see is the ability to upload an
03:42:34.800 image is successful okay now before I test this out I want to make sure that
03:42:41.279 we um because I want to do something like I want to be very ambitious here make sure that it kind of all works in one go
03:42:46.620 basically we've got the ability to add the new task so first things first I
03:42:51.779 need to actually go into the modal and I need to enable as in I need to
03:42:58.020 connect it up so add a new task is basically here so now it's going to add the task like so
03:43:03.660 so we're basically pass in the new task type the new task input and the new task type the new task type I can get from
03:43:10.920 the following here so task type and here we can say state DOT new task type whoa
03:43:18.180 you know thank you so much tly 220 donation I'm not sure what then uh what
03:43:23.580 currency but I mean thank you man that's huge um keep up the good work mate Green from Turkey oh Turkish lira oh nice awesome
03:43:31.200 stuff man thank you so much thank you man I appreciate you guys so
03:43:36.899 much honestly I had new thoughts type it makes me really like on so many donations today wow the energy today has
03:43:43.500 been off the chart honestly it's so sick it makes me I'm coming back stronger than ever like honestly I'm gonna be
03:43:49.020 back on these streams I missed you guys so much such a good vibe and now let's go ahead and test out yeah
03:43:56.700 so let's do our test there's no wait no so we add it so this will successfully add it and it should um update the the
03:44:03.239 UI it was what we did in um in the board store now the only thing that we have to
03:44:08.279 do that's roughly 10 bucks damn thank you so much um the only thing we have to do now is on the to-do itself I have to show the
03:44:15.600 image so I want to do that now and I want to whitelist all the domains that we have
03:44:20.880 to do that's the final sort of part I guess so what I've done here is I've actually
03:44:27.899 created another helper function which actually gets us the correct thing so Sunny energy is top-nosed thank you so
03:44:34.620 much yeah I appreciate it in this case okay so what I'm doing for the to-do card is I've actually made sort of a helper function to to sort of get us the
03:44:42.239 URL in the correct way so basically okay let me let me show you how we do this so I'm going to create a basically the URL
03:44:49.800 we we store the image bucket and file ID now the problem is that doesn't give you
03:44:55.020 a URL to render on the screen so we have to create a function called get url.ts
03:45:00.060 which is my helper function and what this one will do is it basically uses the storage
03:45:05.880 um module and then basically we take we pass it our our image we give the bucket ID and the file ID which is what you
03:45:12.540 need to get the file preview and because our you know access permissions are open right now it will give us a file preview URL and
03:45:19.800 that will allow us to render something out as a URL okay so that's how we're basically gonna do that part and then
03:45:26.220 what I want to do is the to do card I'm basically going to have a use effect whereby when if the to-do image exists
03:45:33.720 it will basically fetch the image and then it will like upload it on itself so I'll show you how we do it so we've got
03:45:39.899 the to-do card we're gonna have a piece of state which is going to set be resemblance of the image and by default
03:45:45.060 it's going to be null okay now when that image when that to do card mounts what I'm going to do is very simple okay all
03:45:52.920 I'm going to do is I'm going to say that when to do you know item you know we renders this code should we render now
03:45:58.920 if there is a to-do image okay if there is a to-do image what I
03:46:04.080 want to do is have a fetcher function inside it's almost a fetch function so a fetch image equals an async because you
03:46:10.319 can't run asynchronous code unless you have a wrapper function inside of a use effect So eventually we'll call this
03:46:15.960 function there you go then what I want to say is const URL equals get URL so
03:46:21.720 I'm going to say await get URL a weight or like song This Is My Jam
03:46:27.120 when I say away get URL and then I'll say to do image right and
03:46:33.300 then this one's freaking out because we haven't imported it so we're pulling that in and you see this one's not applicable because type is undefined now
03:46:40.739 the thing is I've already done a safety check here for some reason it's not picking it up so we're going to go ahead and ensure that it's there okay
03:46:47.520 then what we can do is oh Jimmy in the house what's up that's all man I love
03:46:53.160 this man you got OG's in the house Papa fan members are all here to support I love it uh matzu says just subscribe is
03:46:59.880 amazing thank you so much you know I'm glad you enjoy it right so I'm gonna say if there is a URL right from this then I
03:47:07.319 will set the image URL so locally so basically What's Happening Here is when the to-do card mounts this
03:47:14.340 one's URL to string because it will actually come back as a uh as a URL value so this will be an actual URL
03:47:21.060 which we can't show on the screen it has to be um a string value so when the to
03:47:26.460 do card mounts it's basically gonna unmount it's gonna if there is an image it will fetch the image add that to the
03:47:33.540 state of that to do card component okay then what we can do is we can basically
03:47:39.000 say if there is an image uh there so if the image is there
03:47:45.000 now we can go ahead and do the following we can say div
03:47:50.580 and I've already got some idea of the style here two audio I'm just gonna pop this in because there's
03:47:56.640 some the species is what I'm gonna do anyway bam so I've got my div and right now my
03:48:03.180 image I need to import from next.js so we're basically relative height for width four uh it doesn't need to be
03:48:08.880 relative I had that before because I was trying something else but with the 400 height of 200 to make sure it renders
03:48:14.340 you know efficiently we don't need any bigger than that and then I'm basically making it take the entire width and height of its where I'm putting it
03:48:21.540 now in this case object contain means it doesn't shrink or act weird or liquid
03:48:27.660 now if I've done this all right this will be crazy but what I need to do is I already know that it's going to freak
03:48:33.300 out about the um pulling images from a you know a domain which we haven't whitelisted now
03:48:39.300 we're all pulling all of our images from the outbreak Cloud right so in this case
03:48:44.819 we're going to whitelist that domain so now it's the Moment of Truth guys are you ready to see if the add toss worked
03:48:51.239 because honestly I've done a lot of changes there I didn't test out so I I'm pretty confident in myself but I think
03:48:57.479 you know anything's possible it could it could fail at any point so right now we should have put everything all the
03:49:03.359 pieces is a puzzled together in a way it will allow us to open the model add
03:49:08.700 everything to the model let's click add and then it will basically add that to the back end and
03:49:15.540 it will upload the image if there is an image that we put there and then it will re-render because we change the global
03:49:22.140 State and then it will show the image on the screen because that would have triggered the use effect on the to-do card which would then fetch the image
03:49:28.439 which will load it so all of that should happen fairly I mean no stress right no stress um the only thing I need to
03:49:34.979 change is the to do so so you know when I do this right when I click done I want it to automatically highlight done so
03:49:40.620 that's the only thing I'm being very fussy now so in column I want to do that last thing because that's that's like
03:49:45.960 that's that's clutch that's really nice to have so when I basically handle add to do so
03:49:56.279 when I press on on the column
03:50:01.800 so right now yeah so here so I'm gonna basically change open Moto to handle add
03:50:07.380 to do and I'm going to create a helper function at the top const handle to add to do it's going to
03:50:14.520 be a little arrow function and I want this one to basically open the model but I actually want to set the
03:50:21.600 type we already have the type new toss type here as well so I can basically go
03:50:26.939 and say you set new task type I can pull it from the board State um no no no no no no set new cost type
03:50:36.239 and then I'm going to basically say set new task type to the ID right now what
03:50:42.060 will happen is it will modify based on which one I clicked so if we've done this correctly guys when I click on to
03:50:48.720 do it should have to do selected cool if I click on in progress hey look at that if I click on done nice that's what I'm
03:50:56.100 talking about right so I don't know what happened there I don't know what I did right but if I go and type in if I click
03:51:01.439 out of there okay that's weird all right so let's type in this um take the dog oh
03:51:07.200 this just say build a Trello 2.0 app upload an image trelloclon
03:51:14.640 cool add task okay so it should have oh okay
03:51:19.800 ouch um oh because I didn't restart I did do that God damn it I did do that I did do
03:51:26.100 that all right I'm gonna go ahead and restart my server I told you it's a little bit buggy when it does that yeah
03:51:32.700 but in this case it's fine it's fine I'll take that I'll take that I am pretty confident that that will work now
03:51:38.279 yeah let's try again so firstly I mean it's gonna go ahead and see
03:51:44.580 let's see now so is everything's okay
03:51:50.700 Augustine says Kudos using you're one of a kind thank you so much bro
03:51:56.460 all right let's see oh oh that's what I'm talking about look at that and you can even move it over over there so
03:52:02.580 let's go ahead and move that over there and let's create another one and let's call this one create
03:52:08.279 a core app upload image whatever apps have I got I've got like uh the Dali 2 and GPT cool
03:52:16.859 um boom let's go ahead and add that now let's see oh yes
03:52:21.979 let's go let's go look at that that's sick that's sick all right and if I go
03:52:27.359 ahead and infer over there then this will show that everything's persisting and if I was to just put the icing on
03:52:32.760 the cake let's for example delete this one move this one over here move this one over here now we should have tested
03:52:38.819 all of our functionality if I refresh it should persist in that exact State perfect and then if I type in Trello
03:52:45.060 boom just as the beat dropped that they couldn't have been cleaner couldn't have
03:52:51.479 been cleaner that was nice look at that you got the you got the GPT work and
03:52:56.580 everything else obviously right now I've done it so fast the GPD didn't catch the catch the board exactly but that was
03:53:03.120 cool that was cool so in this case now it should say oh no no it was right it was right it's
03:53:08.819 because I had Trello yeah it was I knew it I knew it was right yeah now he says
03:53:13.920 since the LinkedIn clone uh me and my team learn react from your videos now we find our own way to deal with our work
03:53:20.279 it's a shame we can do nothing for you but thank thank and smash that like button bro honestly the biggest thing
03:53:25.800 you could do is be a support that's it that's what the proper fam is about that's why I'm doing what I'm doing
03:53:30.840 that's why I'm able to help you guys so I can help you guys so you guys are awesome so thank you so much for just
03:53:36.359 like you know yeah period you don't you guys turning up that's enough that's it that's it I'll keep bringing this as
03:53:42.600 long as I can help you guys become Muslim developers that is it but look at this guys such a cool build honestly
03:53:50.100 yeah there will be kind of edge cases where you know GPT might freak out or fail that's GPT right now it's still a
03:53:56.700 bit battery but right now I think the only thing left to do is get this out
03:54:01.739 into the development environment so this is probably it's lagging yep there you go it's lagging CNN yeah because right
03:54:07.680 now I've got it set in the correct way it will work all right so yeah see something here is yeah it's a GPT where
03:54:13.800 I spammed it and moved everything around was just a bit crazy um but let's deploy this right let's get
03:54:19.319 this out so I also have loads of things open so it's probably getting confused right let's
03:54:25.000 No text
03:54:25.199 get this deployed so what I want to do now is I'm going to show you how to deploy in the cell right so I've got a
03:54:30.960 few tricks to this um let's go over here I'm actually going to cut my app right and I believe that's
03:54:37.020 all the features done yeah I'm pretty sure the real purpose of GPT in this world was honestly it was a it was it was to
03:54:43.680 demonstrate how you can basically pass information to GPT to provide a summary in this case the summary was very basic
03:54:50.220 but the point of it is is to provide the platform show you how you can use nextges API to send data like the
03:54:58.020 to-do's in a to-do board to the open air API and then you can basically get a summary of it right but in the end of
03:55:03.720 the day you can really take like that's the platform and that's the approach to do it then by knowing it you can
03:55:10.800 actually go ahead and really customize as much as you want but the point is once you know how to do that simple step like I say simple once you not to that
03:55:17.699 step then it's uh you can really customize it however you want to do so I hope that helped yeah
03:55:23.160 okay so this is sick final push let's go Jay uh let's go ahead and um do a
03:55:29.220 deployment now so we're gonna say the cell right so this is so if you haven't already done a deployment in Brazil it's
03:55:34.979 actually really slick so you need to install the vessel CLI right or you can do the GitHub approach I'm going to show
03:55:41.279 you the facility so I've already installed the vessel CLI so just Google the cell CLI so the cell CLI also if you
03:55:48.359 haven't used the cell we have a very special link and if you use that link Jay will share it now in the chat and
03:55:53.939 we'll also pin it as a comment I believe it is in the description but Jay if you could share that link that would be
03:55:59.340 great um but yeah we have a special link in when you're using the cell it would mean a lot if you use that link because if
03:56:05.880 you go ahead and actually you know continue to use it it supports the proper fam and yeah it's just a win-win uh and it's free for you to use so
03:56:12.960 Link's gonna help everyone out um so Jay share it in the chat and then we will pin it as a comment okay so the
03:56:19.800 facility you can go ahead and do and Nico says will the code be available on GitHub afterwards yes it will so Jay
03:56:25.260 just dropped it in the chat vessel.com ambassadors forward slash Sunny Sanger alright so feel free to hit that up and
03:56:31.680 you can go ahead and check out yourself okay so now you can go ahead and see oops no I don't want to do that one
03:56:37.620 again okay oh this freaks me out all right so let's go ahead and do it so
03:56:42.899 facility allow you can simply import it and I've already done it and then you do the cell login I've already logged in so
03:56:49.140 now you can do the cell to deploy so set up and deploy yes it will ask me which one so I'm going to
03:56:54.840 do Papa react that's my account link to the existing project no okay
03:57:00.479 then we can say what's your project name I'm going to use the basic project name which code is your code which directory
03:57:06.060 is your code located so this one setting up your project okay so in this case now we can just let it do its thing modify
03:57:13.800 nope it's very simple to set this up and then there's two steps we're gonna have to do now so this will fail I'm
03:57:19.500 telling you now it will fail because it has no environment variables so this will actually fail right now so what I
03:57:25.260 want you to do is go to the upright clone here settings go down to environment variables and here so now
03:57:32.399 what you want to do is open up your code go to your
03:57:37.460 environmentm.local oops what am I doing no no no no no no go to your m.local and I'm going to hide my screen but I want
03:57:43.439 you to click it okay so click inside it here yeah and copy everything so control
03:57:49.020 command a copy all inside your environment file right now once you've done that I want you to go to
03:57:57.080 the um what's it called I want you to go to the project settings page here and
03:58:02.880 paste so I'm going to paste everything right now so I'm pasting right and then I click on Save
03:58:09.420 right and as you can see literally if I press Ctrl V paste it pastes it in and
03:58:14.939 it comes like four blocks here and then it adds and then you click save and it will add over here then once you've now
03:58:21.479 that you've added there what I want you to do is basically cancel this build and do
03:58:27.479 the cell once more okay and then I don't I'm not I don't know if
03:58:33.120 I'm gonna make this uh the the I'll share it a little bit but I'm gonna show
03:58:38.460 you a little bit because otherwise it's connected to an actual Billet build or open AI I can't it's gonna get a little
03:58:43.680 bit crazy right so but yeah you guys can see so right now
03:58:49.199 it's doing the inspection so you can click it and now we're redeploying with the correct things in place now this
03:58:56.100 might fail on based on some silly reason but we can check ourselves so you're gonna let that do its thing
03:59:01.859 and if that all goes through then you'll see a deployment complete right so in this case we can go ahead and check now
03:59:07.979 in the meantime I'm gonna read some of the um the comments right so let's see
03:59:14.220 all right so instantly in the beginning use the shortcut to show us the responsive website on different breakpoints and see what you use yeah so
03:59:19.500 when I'm resizing a lot of the screens I'm using something called I used to use spectacle and I think it's called
03:59:25.260 rectangle now it's a rectangle yeah rectangle I'm using something called rectangle so type in spectacle Pro or
03:59:31.620 spectacle app and then they basically changed it all to an app called rectangle that's how I do it okay it's
03:59:37.500 deployed right it's deployed I just want to test it and see if it is
03:59:43.020 okay so this is good yeah say it's good so now you can see it deployed but
03:59:48.120 nothing shows now the the final step to getting it working is this is the URL so
03:59:53.399 what I want you to do then is go to your um where was it go to your upright
03:59:59.340 settings and now here in your app right settings you need to go to overview oh sorry settings down here and you need
04:00:07.439 to go to your domains whereas the custom vans no it was what is that setting on
04:00:13.800 uh it was very easy to find databases is it here
04:00:19.080 settings no okay where is it okay I found this literally a second ago and it's gonna
04:00:26.340 drive me crazy if I don't find this okay where is it here it is in platforms
04:00:34.140 click on platforms there you go localhost here if you want to paste in your your domain so you want to do this
04:00:41.460 and then you probably need to get rid of https so that's the one yes you want to do that
04:00:46.979 and localhost is always protected by the way so you can use it all right but now if I go back to my app
04:00:54.000 No text
04:00:54.479 there you go boom you can see it right now this is gonna go crazy if everyone starts going on it so obviously I don't
04:01:01.319 want to do that but yeah you guys I'm not going to give the URL but it works okay now I don't know I'm gonna hide
04:01:07.260 that screen because I just don't trust I've learned from experience I don't trust people all right with with YouTube
04:01:13.080 stuff and they're gonna go crazy and stuff so um you guys can feel free to check it out yourself if you caught the
04:01:19.500 link in time but yeah this is actually it so I'll tell you what screw it up I'll share it I'll share it there you go
04:01:24.960 bam I don't care have a look right you guys are probably gonna go crazy on this I need to deactivate that key but
04:01:31.080 afterwards on GPT but it's fine you can have a little play around so sahib Singh says Hey Sony do you update content in
04:01:36.720 your course yes I do I am always updating content in the course and again if you want to join the course zero to
04:01:41.000 No text
04:01:43.260 full stack hero we literally update it every week because we have weekly coaching calls inside the community so
04:01:48.420 every single week those calls are getting recorded and added back in and plus I'm adding more module content I'm shooting literally all the time I'm
04:01:55.140 adding more and more content everything I ever learned I go ahead and put it back in so you can feel free to go ahead
04:02:00.300 and keep on adding things in um sometimes it never trust the internet something I swear dude I've learned too
04:02:05.760 many times so all I recommend is guys if you are on the fence and you kind of you know you're not sure if you want to join
04:02:11.340 something like a zero zeros to zero to full stack hero Community course right whereby you have not only the course
04:02:18.359 aspect but the entire Community the support all of that stuff then I recommend you go to popular.com and you
04:02:24.300 just give it a watch watch for yourself students and hear for yourself these are our students these are real students and
04:02:30.600 this is what the course is about it's a family of developers who are just honestly we've like nailed how to get
04:02:37.080 students from xero to their jobs like we just we know how to do it now we've done
04:02:42.720 it really well we know how to get people past their sort of you know the things that they're stuck on all that kind of
04:02:48.239 area so we've pretty much put everything our heart and soul into this course so make sure you go ahead and check it out
04:02:54.359 pop react.com forward slash course give it a read check out yourself and for a
04:03:00.000 short time only podcast 10 gives you 10 off because we're going crazy with the podcast lately and I hope you're
04:03:05.100 enjoying it and I hope you watch that stuff so as always this has been seriously Next Level this build I didn't
04:03:07.000 No text
04:03:11.819 expect it to pop off like this it's been absolutely incredible and fun and awesome
04:03:17.520 um you guys have actually added a bunch of things glad I didn't make it responsive but as in real time so right
04:03:24.359 now as you guys can see this is all you guys adding it this is lit that I can see you guys adding stuff here this is
04:03:30.660 cool man thank you Sunny awesome I love you I love you guys too thank you so
04:03:36.000 much I'm gonna hide it for now but yeah you guys can see for yourself and again once again if you want to join us join
04:03:41.520 us check it out and also don't forget we have got the University of code where you get daily procoding problems sent
04:03:47.460 straight to you um so yeah this has been a game changer for our students we basically want to
04:03:52.500 have daily challenges so you basically send you you a daily problem into your inbox and then straight up the next day
04:03:59.460 you get the the solution to that problem and it's like a Sudoku puzzle to
04:04:04.500 constantly keep your coding skills evolved alright so me and Jay welcome that to the point where sometimes I don't even know the challenges so it's
04:04:10.979 really cool I even idea right I actually did it on my own thing so it's really really fun uh fun so we need a website
04:04:17.460 but thank you so much guys this is awesome everyone thank you so much for tuning in I'm gonna give a quick rundown as to what we did in this app I'm going
04:04:24.660 to make sure nothing else is badly hidden so I mean somebody swore on it so I have to delete that one but he said a
04:04:30.840 good thing but he swore so I have to hide it right so in this case what I'm going to do guys is I'm gonna just give
04:04:37.020 you a quick rundown of the build in the way that we know how to do it where's where where is the right song where is
04:04:42.300 the song at right it's been a lot of fun today honestly I have to admit it's been like one of one of my favorite builds
04:04:47.819 and I and I I'm shocked uh because it's been such a sick Lord where is it gone
04:04:53.279 oh my God where's the Papa fam theme song all right I need to I need to find the song
04:04:59.819 all right let's let's we have to end there right oh there we go all right there you go
04:05:06.300 guys also if you want some good news for those of you stick around it's like the post ending credits to a film right I
04:05:13.260 have some incredible news so if you haven't already or you've been excited for it because you stuck around for this
04:05:18.540 song I tell you right now we have a huge I mean huge
04:05:25.620 five day challenge coming up so you guys have wanted it you guys have wanted something bigger better we have so many
04:05:32.939 freebies that we're gonna give away to you we have a five day AI Next Generation developer challenge which is
04:05:38.819 going to include all of the latest stuff you guys have seen the level of the the level of things that these girls are
04:05:45.239 coming me and Jay have been working so hard behind the scenes to make sure that we still get these videos out so that we
04:05:51.600 can get you guys more and bigger and better things so five day challenge is coming out very shortly stay tuned thank
04:05:59.460 you for tuning in like tuning in always this has been the Trello 2.0 clone that's been your sneak peek to the
04:06:05.279 challenge and I hope you've enjoyed it we learned a bunch today next JS upright
04:06:11.040 Cloud powering the entire thing we have the beautiful drag and drop functionality we had GPT behind the
04:06:18.779 scenes so so cool guys honestly you guys know how it is right we're trying to
04:06:24.120 always keep up with the new tech and as I mentioned like some stuff works some stuff doesn't the main thing is is that
04:06:30.060 you stay on to what the market wants and you become a valuable developer and that is what we are doing here at the bubble
04:06:36.779 Farm we're creating developers in the world helping you transform your everyday life with that said love you
04:06:43.140 guys so much I hope you enjoyed this video and as always like comment and subscribe if you're watching the replay
04:06:48.660 and yeah just thank you thank you so much guys uh yeah on that note I'm
04:06:53.880 signing out I will see you in the next video peace
04:07:04.800 I Wanna Be With You I Wanna Be With You [Music]
04:07:26.440 [Applause]
